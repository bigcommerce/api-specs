openapi: 3.0.0
servers:
  - url: 'https://api.bigcommerce.com/stores/{$$.env.store_hash}/v3'
    variables:
      $$.env.store_hash:
        default: store_hash
tags:
  - name: Customers
    description: BigCommerce Customers API Definition.
  - name: Customer Addresses
  - name: Customer Attributes
  - name: Customer Attribute Values
  - name: Customer Form Field Values
  - name: Customer Consent
  - name: Customer Form Fields
  - name: Customer Stored Instruments
x-stoplight:
  docs:
    includeDownloadLink: true
    showModels: false
security:
  - X-Auth-Client: []
  - X-Auth-Token: []
info:
  version: ''
  title: Customers V3
  description: |-
    Create and manage customers.

    - [Authentication](#authentication)
    - [Available Endpoints](#available-endpoints)
    - [Resources](#resources)

    ## Authentication

    Requests can be authenticated by sending an `access_token` via `X-Auth-Token` HTTP header:

    ```http
    GET /stores/{$$.env.store_hash}/v3/catalog/summary
    host: api.bigcommerce.com
    Accept: application/json
    X-Auth-Token: {access_token}
    ```

    |Header|Parameter|Description|
    |-|-|-|
    |`X-Auth-Token`|`access_token `|Obtained by creating an API account or installing an app in a BigCommerce control panel.|

    ### OAuth Scopes

    | UI Name                                      | Permission | Parameter                                     |
    |----------------------------------------------|------------|-----------------------------------------------|
    | Customers                                    | modify     | `store_v2_customers`                          |
    | Customers                                    | read-only  | `store_v2_customers_read_only`                |

    For more information on Authenticating BigCommerce APIs, see: [Authentication](https://developer.bigcommerce.com/api-docs/getting-started/authentication).

    ## Resources
    * [Customer and Subscribers Overview](/api-docs/customers/customers-subscribers-overview).
  contact: {}
paths:
  /customers:
    get:
      description: |-
        Returns a list of Customers. Optional filter parameters can be passed in.

        **Notes**

        Attribute names are not available on the customer object.
      summary: Get All Customers
      tags:
        - Customers
      operationId: CustomersGet
      deprecated: false
      parameters:
        - name: page
          in: query
          description: Page number. `page=1`
          schema:
            type: integer
        - in: query
          name: limit
          description: Items count per page. `limit=50`
          schema:
            type: number
        - name: 'id:in'
          in: query
          description: |-
            Filter items by ID.
            `id:in=4,5,6`
          style: form
          explode: false
          schema:
            type: array
            items:
              type: integer
        - name: 'company:in'
          in: query
          description: 'Filter items by company. `company:in=bigcommerce,commongood`'
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: 'customer_group_id:in'
          in: query
          description: 'Filter items by customer_group_id. `customer_group_id:in=5,6`'
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: date_created
          in: query
          description: 'Filter items by date_created. `date_created=2018-09-05T13:43:54`'
          schema:
            type: string
            format: date-time
        - name: 'date_created:max'
          in: query
          description: 'Filter items by maximum date_created. `date_created:max=2018-09-10`'
          schema:
            type: string
        - name: 'date_created:min'
          in: query
          description: 'Filter items by date_created. `date_created:min=2018-09-05`'
          schema:
            type: string
            format: date-time
        - name: date_modified
          in: query
          description: 'Filter items by date_modified. `date_modified=2018-09-05T13:45:03`'
          schema:
            type: string
            format: date-time
        - name: 'date_modified:min'
          in: query
          description: 'Filter items by mininum date_modified. `date_modified:min=2019-09-04T:00:00:00` or `date_modified:min=2019-09-04`'
          schema:
            type: string
        - name: 'date_modified:max'
          in: query
          description: 'Filter items by maximum date_modified `date_modified:max=2018-09-05T13:45:03` or `date_modified:max=2019-09-04`'
          schema:
            type: string
            format: date-time
        - name: 'email:in'
          in: query
          description: 'Filter items by email. `email:in=janedoe@email.com`'
          schema:
            type: string
        - name: 'name:in'
          in: query
          description: Filter items by first_name and last_name. `name=james moriarty`
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: 'name:like'
          in: query
          description: |-
            Filter items by substring in first_name and last_name.
            `name:like=moriarty, sherlock`
            Concatenates the first_name and last_name fields.
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: 'registration_ip_address:in'
          in: query
          description: |-
            Filter items by registration_ip_address. If the customer was created using the API, then registration address is blank.
            `registration_ip_address:in=12.345.6.789`
          style: form
          explode: false
          schema:
            type: array
            items:
              type: integer
        - name: include
          in: query
          description: |-
            Indicates whether to include customer sub-resources:
             * `addresses` - customer addresses
             * `storecredit` - store credit
             * `attributes` - customer attributes and address attributes
             * `formfields` - customer and address form fields

             `include=addresses,storecredit,attributes,formfields`
          schema:
            type: string
            enum:
              - addresses
              - storecredit
              - attributes
              - formfields
        - in: query
          name: sort
          description: |-
            Sort items by date_created or last_name:
            * `date_created:asc` - date created, ascending
            * `date_created:desc` - date created, descending
            * `last_name:asc` - last name, ascending
            * `last_name:desc` - last name, descending

            Example: `sort=last_name:asc`
          schema:
            type: string
            enum:
              - 'date_created:asc'
              - 'date_created:desc'
              - 'last_name:asc'
              - 'last_name:desc'
      responses:
        '200':
          $ref: '#/components/responses/CustomerCollectionResponse'
    post:
      description: |-
        Creates Customers. Multiple customers can be created in one call.

        **Required Fields**
        * last_name
        * first_name
        * email

        **Required Fields Customer Address**
        * first_name
        * city
        * country_code
        * state_or_province
        * last_name
        * address1
        * postal_code

        **Required Fields Attributes**
        * Attributes must be [created](https://developer.bigcommerce.com/api-reference/customer-subscribers/v3-customers-api/customer-attributes/customersattributespost) **BEFORE** creating a customer.
        * attribute_id
        * attribute_value -- This is input as a string, regardless of the [Type](/api-reference/customer-subscribers/v3-customers-api/models/type).

        **Notes**
        * channel_ids won't be used if the channel listed in origin_channel_id allows global access.
      summary: Create Customers
      tags:
        - Customers
      operationId: CustomersPost
      deprecated: false
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/customer_Post'
            examples:
              example-1:
                value:
                  - email: string
                    first_name: string
                    last_name: string
                    company: string
                    phone: string
                    notes: string
                    tax_exempt_category: string
                    customer_group_id: 0
                    addresses:
                      - address1: Addr 1
                        address2: ''
                        address_type: residential
                        city: San Francisco
                        company: History
                        country_code: US
                        first_name: Ronald
                        last_name: Swimmer
                        phone: '707070707'
                        postal_code: '33333'
                        state_or_province: California
                    attributes:
                      - - attribute_id: 0
                          value: string
                    authentication:
                      force_password_reset: true
                      new_password: string
                    accepts_product_review_abandoned_cart_emails: true
                    store_credit_amounts:
                      - amount: 43.15
                    origin_channel_id: 1
        required: true
        x-examples: {}
        description: ''
      responses:
        '200':
          $ref: '#/components/responses/CustomerCollectionResponse'
        '422':
          description: The *Customer* was not valid. This is the result of missing required fields or trying to edit a read only field. See the response for more details.
          content:
            application/json:
              schema:
                title: Error Response
                type: object
                properties:
                  status:
                    description: The HTTP status code.
                    type: integer
                    format: int32
                  title:
                    description: The error title describing the particular error.
                    type: string
                  type:
                    type: string
                  instance:
                    type: string
                  errors:
                    type: object
                    additionalProperties:
                      type: string
              examples:
                response:
                  value:
                    status: 422
                    title: Create customers failed.
                    type: 'https://developer.bigcommerce.com/api#api-status-codes'
                    errors:
                      .customer_create: Error creating customers
    put:
      description: |-
        Updates Customers. Subresource updates are not supported. Multiple customers can be updated in one call.

        **Required Fields**
        * id -- ID of the *Customer* This must be included in the request body

        **Read Only Fields**
        * id
        * registration_ip_address
        * date_created
        * date_modified


        **Notes**
        * Attributes Values can not be updated using Update a Customer. Use the Update a [Customer Attribute Values](https://developer.bigcommerce.com/api-reference/customer-subscribers/v3-customers-api/customer-attribute-values/customersattributevaluesput) endpoint.
        * channel_ids -- Updating the list of channels a customer can access may create some side effects in a multi-storefront situation. This list determines which customer account we will use to authenticate a shopper given a channel.
      summary: Update Customers
      tags:
        - Customers
      operationId: CustomersPut
      deprecated: false
      responses:
        '200':
          $ref: '#/components/responses/CustomerCollectionResponse'
        '422':
          description: |
            The `Customer` was not valid. This is the result of missing required fields, or of invalid data. See the response for more details.
          content:
            application/json:
              schema:
                title: Error Response
                type: object
                properties:
                  status:
                    description: The HTTP status code.
                    type: integer
                    format: int32
                  title:
                    description: The error title describing the particular error.
                    type: string
                  type:
                    type: string
                  instance:
                    type: string
                  errors:
                    type: object
                    additionalProperties:
                      type: string
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/customer_Put'
            examples:
              example-1:
                value:
                  - email: string
                    first_name: string
                    last_name: string
                    company: string
                    phone: string
                    registration_ip_address: string
                    notes: string
                    tax_exempt_category: string
                    customer_group_id: 0
                    id: 0
                    authentication:
                      force_password_reset: true
                      new_password: string
                    accepts_product_review_abandoned_cart_emails: true
                    store_credit_amounts:
                      - amount: 43.15
                    channel_ids:
                      - 1
                      - 2
    delete:
      description: |-
        Deletes Customers.

        **Required Query**
        * id:in -- ID of the customer

        **Notes**

        A query is required to delete customers. If not provided, a 204 is returned, with no changes to the data.
      summary: Delete Customers
      tags:
        - Customers
      operationId: CustomersDelete
      deprecated: false
      parameters:
        - in: query
          name: 'id:in'
          description: |-
            Filter items by ID.
            `id:in=4,5,6`
          required: true
          style: form
          explode: false
          schema:
            type: array
            items:
              type: integer
      responses:
        '204':
          description: ''
          headers: {}
  /customers/addresses:
    get:
      description: Returns a list of Customer Addresses. Optional filter parameters can be passed in.
      summary: Get All Customer Addresses
      operationId: CustomersAddressesGet
      deprecated: false
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
            default: application/json
        - name: Content-Type
          in: header
          schema:
            type: string
            default: application/json
        - name: page
          in: query
          description: Page number. `page=1`
          schema:
            type: integer
        - in: query
          name: limit
          description: Items count per page. `limit=50`
          schema:
            type: number
        - name: 'company:in'
          in: query
          description: 'Filter items by company. `company:in=bigcommerce,commongood`'
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: name:in
          in: query
          description: 'Filter items by first_name and last_name. `name:in=James+Moriarty`'
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: 'customer_id:in'
          description: 'Filter by the ID of the customer. Also accepts comma-separated IDs to filter for multiple customers. `customer_id:in=23,24,55`'
          style: form
          explode: false
          schema:
            type: array
            items:
              type: integer
        - name: include
          in: query
          description: |-
            Indicates whether to include customer address sub-resources:
            * `formfields` - address form fields
            `include=formfields`
          schema:
            type: string
            enum:
              - formfields
        - name: 'id:in'
          in: query
          description: |-
            Filter items by ID.
            `id:in=4,5,6`
          style: form
          explode: false
          schema:
            type: array
            items:
              type: integer
      responses:
        '200':
          $ref: '#/components/responses/AddressCollectionResponse'
      tags:
        - Customer Addresses
    post:
      description: |-
        Creates a Customer Address. Multiple customer addresses can be created in one call.

        **Required Fields**
        * first_name
        * city
        * customer_id
        * country_code
        * state_or_province
        * last_name
        * address1
        * postal_code
      summary: Create a Customer Address
      operationId: CustomersAddressesPost
      deprecated: false
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
            default: application/json
        - name: Content-Type
          in: header
          schema:
            type: string
            default: application/json
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/address_Post'
        required: true
        x-examples:
          application/json:
            - first_name: John
              last_name: Doe
              address1: 111 E West Street
              address2: '654'
              city: Akron
              state_or_province: Ohio
              postal_code: '44325'
              country_code: US
              phone: '1234567890'
              address_type: residential
              customer_id: 11
      responses:
        '200':
          $ref: '#/components/responses/AddressCollectionResponse'
        '422':
          description: |
            The `Address` was not valid. This is the result of missing required fields, or of invalid data. See the response for more details.
          content:
            application/json:
              schema:
                title: Error Response
                type: object
                properties:
                  status:
                    description: The HTTP status code.
                    type: integer
                    format: int32
                  title:
                    description: The error title describing the particular error.
                    type: string
                  type:
                    type: string
                  instance:
                    type: string
                  errors:
                    type: object
                    additionalProperties:
                      type: string
      tags:
        - Customer Addresses
    put:
      description: |-
        Updates a Customer Address. Multiple customer addresses can be updated in one call.

        **Required Fields**
        * id -- ID of the *Customer Address*
        * customer_id -- ID of the *Customer*.
      summary: Update a Customer Address
      operationId: CustomersAddressesPut
      deprecated: false
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
            default: application/json
        - name: Content-Type
          in: header
          schema:
            type: string
            default: application/json
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/address_Put'
        required: true
        x-examples:
          application/json:
            - first_name: John
              last_name: Doe
              id: 38
              address1: 111 E West Street
              address2: '654'
              city: Akron
              state_or_province: Ohio
              postal_code: '44325'
              country_code: US
              phone: '1234567890'
              address_type: residential
              customer_id: 23
      responses:
        '200':
          $ref: '#/components/responses/AddressCollectionResponse'
        '422':
          description: |
            The `Address` was not valid. This is the result of missing required fields, or of invalid data. See the response for more details.
          content:
            application/json:
              schema:
                title: Error Response
                type: object
                properties:
                  status:
                    description: The HTTP status code.
                    type: integer
                    format: int32
                  title:
                    description: The error title describing the particular error.
                    type: string
                  type:
                    type: string
                  instance:
                    type: string
                  errors:
                    type: object
                    additionalProperties:
                      type: string
      tags:
        - Customer Addresses
    delete:
      description: |-
        Deletes a Customer Address.

        **Required Query**
        * id:in -- ID of the *Customer Address*
      summary: Delete a Customer Address
      operationId: CustomersAddressesDelete
      deprecated: false
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
            default: application/json
        - name: Content-Type
          in: header
          schema:
            type: string
            default: application/json
        - in: query
          name: 'id:in'
          required: true
          description: |-
            Filter items by ID.
            `id:in=4,5,6`
          style: form
          explode: false
          schema:
            type: array
            items:
              type: integer
      responses:
        '204':
          description: ''
          headers: {}
      tags:
        - Customer Addresses
  /customers/settings:
    get:
      tags:
        - Retrieving Customer settings
      description: Gets the customer settings.
      responses:
        "200":
          description: Customer settings are returned.
          content:
            application/json:
              schema:
                $ref: "#/components/responses/CustomerSettingsResponse"
              examples:
                data:
                  value:
                    privacy_settings:
                      ask_shopper_for_tracking_consent: true
                      policy_url: "https://bigcommmerce.com/policy"
                    customer_group_settings:
                      guest_customer_group_id: 1
                      default_customer_group_id: 1
    put:
      tags:
        - Declaring Customer settings
      description: Update the customer settings.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CustomerSettingsObjet"
        required: true
      responses:
        "200":
          description: Customer settings are returned.
          content:
            application/json:
              schema:
                $ref: "#/components/responses/CustomerSettingsResponse"
              examples:
                data:
                  value:
                    privacy_settings:
                      ask_shopper_for_tracking_consent: true
                      policy_url: "https://bigcommmerce.com/policy"
                    customer_group_settings:
                      guest_customer_group_id: 1
                      default_customer_group_id: 1
  /customers/settings/channels/{channel_id}:
    get:
      tags:
        - Retrieving Customer settings per channel
      description: Gets the customer settings per channel.
      parameters:
        - in: path
          name: channel_id
          schema:
            type: integer
          required: true
      responses:
        "200":
          description: Customer settings for this channel are returned.
          content:
            application/json:
              schema:
                $ref: "#/components/responses/CustomerChannelSettingsResponse"
              examples:
                data:
                  value:
                    privacy_settings:
                      ask_shopper_for_tracking_consent: true
                      policy_url: "https://bigcommmerce.com/policy"
                    customer_group_settings:
                      guest_customer_group_id: 1
                      default_customer_group_id: 1
                    allow_global_logins: true
    put:
      tags:
        - Declaring Customer settings per channel
      description: Update the customer settings per channel.
      parameters:
        - in: path
          name: channel_id
          schema:
            type: integer
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CustomerChannelSettingsObject"
        required: true
      responses:
        "200":
          description: Customer settings are returned.
          content:
            application/json:
              schema:
                $ref: "#/components/responses/CustomerChannelSettingsResponse"
              examples:
                data:
                  value:
                    privacy_settings:
                      ask_shopper_for_tracking_consent: true
                      policy_url: "https://bigcommmerce.com/policy"
                    customer_group_settings:
                      guest_customer_group_id: 1
                      default_customer_group_id: 1
                    allow_global_logins: true
  /customers/attributes:
    get:
      description: Returns a list of Customer Attributes. You can pass in optional filter parameters.
      summary: Get All Customer Attributes
      operationId: CustomersAttributesGet
      deprecated: false
      parameters:
        - name: page
          in: query
          description: Page number. `page=1`
          schema:
            type: integer
        - in: query
          name: limit
          description: Items count per page. `limit=50`
          schema:
            type: number
        - name: 'name'
          in: query
          required: false
          description: Filter items by customer attribute name `name=Date+Joined`
          schema:
            type: string
        - name: 'name:like'
          in: query
          required: false
          description: Filter items by substring in customer attribute name. `name:like=join`
          schema:
            type: string
        - name: type
          in: query
          required: false
          description: The type of the customer attribute.
          schema:
            type: string
        - name: date_created
          in: query
          required: false
          description: Filter items by `date_created`. `date_created=2021-01-07T20:28:16Z`
          schema:
            type: string
            format: date-time
        - name: 'date_created:max'
          in: query
          required: false
          description: Filter items by maximum `date_created`. ISO 8601 full-date is required, ISO 8601 full-time is not required. UNIX timestamp also accepted. `date_created=2021-01-07` or `date_created=1610051296000`
          schema:
            type: string
            format: date-time
        - name: 'date_created:min'
          in: query
          required: false
          description: Filter items by minimum `date_created`. ISO 8601 full-date is required, ISO 8601 full-time is not required. UNIX timestamp also accepted. `date_created=2021-01-07` or `date_created=1610051296000`
          schema:
            type: string
            format: date-time
        - name: date_modified
          in: query
          required: false
          description: Filter items by `date_modified`.
          schema:
            type: string
            format: date-time
        - name: 'date_modified:max'
          in: query
          required: false
          description: Filter items by maximum `date_modified`. ISO 8601 full-date is required, ISO 8601 full-time is not required. UNIX timestamp also accepted. `date_created=2021-01-07` or `date_created=1610051296000`
          schema:
            type: string
            format: date-time
        - name: 'date_modified:min'
          in: query
          required: false
          description: Filter items by minimum `date_modified`. ISO 8601 full-date is required, ISO 8601 full-time is not required. UNIX timestamp also accepted. `date_created=2021-01-07` or `date_created=1610051296000`
          schema:
            type: string
            format: date-time
        - name: Accept
          in: header
          schema:
            type: string
            default: application/json
        - name: Content-Type
          in: header
          schema:
            type: string
            default: application/json
      responses:
        '200':
          $ref: '#/components/responses/CustomerAttributesResponse'
      tags:
        - Customer Attributes
    post:
      description: |-
        Creates a Customer Attribute. Multiple customer attributes can be created in one call.

        **Required Fields**
        * name
        * type

        **Notes**

        Once the data type is set, it can not be changed. The attribute will need to be deleted then created again with the new data type. This will also delete it from the customer.

        Customer attributes are created separately from the customer. After the name and type are created, then the attributes can be added to the customer.

        A store cannot have more than 50 customer attributes.
      summary: Create a Customer Attribute
      operationId: CustomersAttributesPost
      deprecated: false
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
            default: application/json
        - name: Content-Type
          in: header
          schema:
            type: string
            default: application/json
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/attribute_Post'
        required: true
        x-examples:
          application/json:
            - name: Date Joined
              type: date
      responses:
        '200':
          $ref: '#/components/responses/CustomerAttributesResponse'
        '422':
          description: |
            The `Attribute` was not valid. This is the result of missing required fields, or of invalid data. See the response for more details.
          content:
            application/json:
              schema:
                title: Error Response
                type: object
                properties:
                  status:
                    description: The HTTP status code.
                    type: integer
                    format: int32
                  title:
                    description: The error title describing the particular error.
                    type: string
                  type:
                    type: string
                  instance:
                    type: string
                  errors:
                    type: object
                    additionalProperties:
                      type: string
      tags:
        - Customer Attributes
    put:
      description: |-
        Updates a Customer Attribute. Multiple customer attributes can be updated in one call.

        **Required Fields**
        * id -- ID of the *Customer Attribute*

        Once the data type is set, it can not be changed. The attribute will need to be deleted then created again with the new data type. This will also delete it from the customer.
      summary: Update a Customer Attribute
      operationId: CustomersAttributesPut
      deprecated: false
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
            default: application/json
        - name: Content-Type
          in: header
          schema:
            type: string
            default: application/json
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/attribute_Put'
        required: true
        x-examples:
          application/json:
            - name: Date Joined
              id: 1
      responses:
        '200':
          $ref: '#/components/responses/CustomerAttributesResponse'
        '422':
          description: |
            The `Attribute` was not valid. This is the result of missing required fields, or of invalid data. See the response for more details.
          content:
            application/json:
              schema:
                title: Error Response
                type: object
                properties:
                  status:
                    description: The HTTP status code.
                    type: integer
                    format: int32
                  title:
                    description: The error title describing the particular error.
                    type: string
                  type:
                    type: string
                  instance:
                    type: string
                  errors:
                    type: object
                    additionalProperties:
                      type: string
      tags:
        - Customer Attributes
    delete:
      description: |-
        Deletes Customer Attributes from the store.

        **Required Query**
        * id:in -- ID of the *Customer Attribute*
      summary: Delete Customer Attributes
      operationId: CustomersAttributesDelete
      deprecated: false
      parameters:
        - name: 'id:in'
          in: query
          required: true
          description: Filter items by ID.
          style: form
          explode: false
          schema:
            type: array
            items:
              type: integer
              format: int32
        - name: Accept
          in: header
          schema:
            type: string
            default: application/json
        - name: Content-Type
          in: header
          schema:
            type: string
            default: application/json
      responses:
        '204':
          description: ''
          headers: {}
      tags:
        - Customer Attributes
  /customers/attribute-values:
    get:
      description: Returns a list of Customer Attribute Values. Optional filter parameters can be passed in.
      summary: Get All Customer Attribute Values
      operationId: CustomersAttributeValuesGet
      deprecated: false
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
            default: application/json
        - name: Content-Type
          in: header
          schema:
            type: string
            default: application/json
        - name: page
          in: query
          description: Page number. `page=1`
          schema:
            type: integer
        - in: query
          name: limit
          description: Items count per page. `limit=50`
          schema:
            type: number
        - in: query
          name: 'customer_id:in'
          description: 'Filter items by the customer ID. `customer_id:in=23,24,55`'
          style: form
          explode: false
          schema:
            type: array
            items:
              type: integer
        - name: 'attribute_id:in'
          in: query
          description: 'Filter items by the attribute ID. `attribute_id:in=1,2`'
          style: form
          explode: false
          schema:
            type: array
            items:
              type: integer
        - name: name
          in: query
          description: Filter items by the attribute name. `name=age`
          schema:
            type: string
        - name: date_created
          in: query
          description: 'Filter items by `date_created`. `date_created=2018-09-05T13:43:54`'
          schema:
            type: string
            format: date-time
        - name: 'date_created:max'
          in: query
          description: 'Filter items by maximum `date_created`. ISO 8601 full-date is required, ISO 8601 full-time is not required. UNIX timestamp also accepted. `date_created=2021-01-07` or `date_created=1610051296000`'
          schema:
            type: string
        - name: 'date_created:min'
          in: query
          description: 'Filter items by minimum `date_created`. ISO 8601 full-date is required, ISO 8601 full-time is not required. UNIX timestamp also accepted. `date_created=2021-01-07` or `date_created=1610051296000`'
          schema:
            type: string
            format: date-time
        - name: date_modified
          in: query
          description: 'Filter items by `date_modified`. `date_modified=2018-09-05T13:45:03`'
          schema:
            type: string
            format: date-time
        - name: 'date_modified:max'
          in: query
          description: 'Filter items by maximum `date_modified`. ISO 8601 full-date is required, ISO 8601 full-time is not required. UNIX timestamp also accepted. `date_created=2021-01-07` or `date_created=1610051296000`'
          schema:
            type: string
            format: date-time
        - name: 'date_modified:min'
          in: query
          description: 'Filter items by mininum `date_modified`. ISO 8601 full-date is required, ISO 8601 full-time is not required. UNIX timestamp also accepted. `date_created=2021-01-07` or `date_created=1610051296000`'
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/CustomerAttributeValueCollectionResponse'
      tags:
        - Customer Attribute Values
    put:
      description: |-
        Upserts Customer Attribute Values. Updates the attribute values on the Customer. Multiple customer attribute values can be updated in one call.

        Upsert checks for an existing record. If there is none, it creates the record, if there is a matching record, it updates that record.

        Up to 10 per call are allowed.

        **Required Fields**
        * customer_id -- ID of the *Customer*
        * id -- ID of the *Customer Attribute*
        * value -- Value of the *Customer Attribute*
      summary: Upsert Customer Attribute Values
      operationId: CustomersAttributeValuesPut
      deprecated: false
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
            default: application/json
        - name: Content-Type
          in: header
          schema:
            type: string
            default: application/json
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/attribueValue_Base'
        required: true
        x-examples:
          application/json:
            - attribute_id: -52528392
              value: aliqua
              customer_id: 12990306
              id: 47143304
            - attribute_id: -8263909
              value: 'n'
              customer_id: 1122433
              id: -34305734
            - attribute_id: -62186196
              value: ''
              customer_id: 10906989
              id: 21175547
            - attribute_id: -68742149
              value: l
              customer_id: -74084818
              id: 99359610
      responses:
        '200':
          $ref: '#/components/responses/CustomerAttributeValueCollectionResponse'
        '422':
          description: |
            The `CustomerAttributeValue` was not valid. This is the result of missing required fields, or of invalid data. See the response for more details.
          content:
            application/json:
              schema:
                title: Error Response
                type: object
                properties:
                  status:
                    description: The HTTP status code.
                    type: integer
                    format: int32
                  title:
                    description: The error title describing the particular error.
                    type: string
                  type:
                    type: string
                  instance:
                    type: string
                  errors:
                    type: object
                    additionalProperties:
                      type: string
      tags:
        - Customer Attribute Values
    delete:
      description: |-
        Deletes Customer Attribute Values. Deletes the attribute value from the customer.

        **Required Query**
        * id:in - ID of the *Customer Attribute Value*
      summary: Delete Customer Attribute Values
      operationId: CustomersAttributeValuesDelete
      deprecated: false
      parameters:
        - name: 'id:in'
          in: query
          required: true
          description: |-
            Filter items by ID.
            `id:in=4,5,6`
          style: form
          explode: false
          schema:
            type: array
            items:
              type: integer
              format: int32
        - name: Accept
          in: header
          schema:
            type: string
            default: application/json
        - name: Content-Type
          in: header
          schema:
            type: string
            default: application/json
      responses:
        '204':
          description: ''
          headers: {}
      tags:
        - Customer Attribute Values
  /customers/form-field-values:
    get:
      responses:
        '200':
          $ref: '#/components/responses/FormFieldValueCollectionResponse'
        '422':
          description: 'The form field value was not valid. This is the result of missing required fields, or of invalid data. See the response for more details.'
          content:
            application/json:
              schema:
                title: Error Response
                type: object
                properties:
                  status:
                    description: The HTTP status code.
                    type: integer
                    format: int32
                  title:
                    description: The error title describing the particular error.
                    type: string
                  type:
                    type: string
                  instance:
                    type: string
                  errors:
                    type: object
                    additionalProperties:
                      type: string
      summary: Get Customer Form Field Values
      description: Returns a list of Form Field Values for the Customer or Customer Address object.
      operationId: CustomerFormFieldsGet
      tags:
        - Customer Form Field Values
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
            default: application/json
        - name: Content-Type
          in: header
          schema:
            type: string
            default: application/json
        - name: page
          in: query
          description: Page number. `page=1`
          schema:
            type: integer
        - in: query
          name: limit
          description: Items count per page. `limit=50`
          schema:
            type: number
        - in: query
          name: customer_id
          description: Filter by the customer ID.
          schema:
            type: integer
        - name: address_id
          in: query
          description: Filter by the ID of the customer address.
          schema:
            type: integer
        - name: field_name
          in: query
          description: Filter by the field name.
          schema:
            type: string
        - name: field_type
          in: query
          description: |-
            Filter by the field type.
             * `checkboxes` - checkboxes field
             * `date` - date field
             * `multiline` - multiline text field
             * `numbers` - numbers only field
             * `password` - password field
             * `radiobuttons` - radio buttons field
             * `text` - text field
             * `picklist` - pick list field
          schema:
            type: string
            enum:
              - checkboxes
              - date
              - multiline
              - numbers
              - password
              - radiobuttons
              - text
              - picklist
    put:
      responses:
        '200':
          $ref: '#/components/responses/FormFieldValueCollectionResponse'
        '422':
          description: 'The form field value was not valid. This is the result of missing required fields, or of invalid data. See the response for more details.'
          content:
            application/json:
              schema:
                title: Error Response
                type: object
                properties:
                  status:
                    description: The HTTP status code.
                    type: integer
                    format: int32
                  title:
                    description: The error title describing the particular error.
                    type: string
                  type:
                    type: string
                  instance:
                    type: string
                  errors:
                    type: object
                    additionalProperties:
                      type: string
      summary: Upsert Customer Form Field Values
      description: |-
        Upserts Customer Form Field Values. Updates the form field values on the Customer or Customer Address. Multiple form field values can be updated in one call.

        Upsert checks for an existing record, if there is none it creates the record, if there is a matching record it updates that record.
      operationId: CustomerFormFieldValuePUT
      tags:
        - Customer Form Field Values
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/formFieldValue_Full'
            examples:
              Example:
                value:
                  - name: color
                    value: blue
                    customer_id: 0
  /customers/{customerId}/consent:
    get:
      description: Gets the status of a customer's consent to allow data collection by cookies and scripts while shopping on a storefront.
      summary: Get Customer Consent
      tags:
        - Customer Consent
      operationId: CustomersConsentByCustomerId_GET
      deprecated: false
      parameters:
        - $ref: '#/components/parameters/customerId'
      responses:
        '200':
          $ref: '#/components/responses/consent_Resp'
        '401':
          description: Unauthorized - the v3 Auth client ID or token in the request are not a valid combination for this store.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Missing scope - the v3 Auth token is valid but does not have proper permissions to access this endpoint.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: Invalid JSON request body - missing or invalid data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      description: Updates the status of a customer's consent to allow data collection by cookies and scripts while shopping on a storefront.
      summary: Update Customer Consent
      tags:
        - Customer Consent
      operationId: CustomersConsentByCustomerId_PUT
      deprecated: false
      parameters:
        - name: Content-Type
          in: header
          required: false
          description: ''
          schema:
            type: string
            default: application/json
        - $ref: '#/components/parameters/customerId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeclareCustomerConsentRequest'
        x-examples:
          application/json:
            allow:
              - essential
            deny: []
      responses:
        '200':
          $ref: '#/components/responses/consent_Resp'
        '401':
          description: Unauthorized - the v3 Auth client ID or token in the request are not a valid combination for this store.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Missing scope - the v3 Auth token is valid but does not have proper permissions to access this endpoint.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: Invalid JSON request body - missing or invalid data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
components:
  parameters:
    customerId:
      name: customerId
      in: path
      required: true
      description: ''
      schema:
        type: string
    FilterNameParam:
      name: name
      in: query
      description: 'Filter items by first_name and last_name. `name=moriarty,holmes`'
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
    FilterEmailParam:
      name: 'email:in'
      in: query
      description: 'Filter items by email. `email:in=janedoe@email.com`'
      schema:
        type: string
    FilterNameLikeParam:
      name: 'name:like'
      in: query
      description: |-
        Filter items by substring in first_name and last_name (%substring% - use with % symbols).
        `name:like=moriarty&name:like=doe`
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
    FilterAttributeNameLikeParam:
      name: 'name:like'
      in: query
      description: |-
        Filter items by substring in first_name and last_name (%substring% - use with % symbols).
        `name:like=moriarty,doe`
      schema:
        type: string
    FilterIdParam:
      name: 'id:in'
      in: query
      description: |-
        Filter items by ID.
        `id:in=4,5,6`
      style: form
      explode: false
      schema:
        type: array
        items:
          type: integer
    FilterDateModifiedParam:
      name: date_modified
      in: query
      description: 'Filter items by date_modified. `date_modified=2018-09-05T13:45:03`'
      schema:
        type: string
        format: date-time
    FilterDateModifiedMinParam:
      name: 'date_modified:min'
      in: query
      description: 'Filter items by mininum date_modified. `date_modified:min=2019-09-04T:00:00:00` or `date_modified:min=2019-09-04`'
      schema:
        type: string
    FilterDateModifiedMaxParam:
      name: 'date_modified:max'
      in: query
      description: 'Filter items by maximum date_modified `date_modified:max=2018-09-05T13:45:03` or `date_modified:max=2019-09-04`'
      schema:
        type: string
        format: date-time
    FilterDateCreatedParam:
      name: date_created
      in: query
      description: 'Filter items by date_created. `date_created=2018-09-05T13:43:54`'
      schema:
        type: string
        format: date-time
    FilterDateCreatedMinParam:
      name: 'date_created:min'
      in: query
      description: 'Filter items by date_created. `date_created:min=2018-09-05`'
      schema:
        type: string
        format: date-time
    FilterDateCreatedMaxParam:
      name: 'date_created:max'
      in: query
      description: 'Filter items by maximum date_created. `date_created:max=2018-09-10`'
      schema:
        type: string
    FilterCustomerRegistrationIPAddressParam:
      name: 'registration_ip_address:in'
      in: query
      description: |-
        Filter items by registration_ip_address. If the customer was created using the API, then registration address is blank.
        `registration_ip_address:in=12.345.6.789`
      style: form
      explode: false
      schema:
        type: array
        items:
          type: integer
    FilterCompanyParam:
      name: 'company:in'
      in: query
      description: 'Filter items by company. `company:in=bigcommerce,commongood`'
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
    FilterCustomerGroupParam:
      name: 'customer_group_id:in'
      in: query
      description: 'Filter items by customer_group_id. `customer_group_id:in=5,6`'
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
    FilterCustomerAttributeTypeParam:
      name: type
      in: query
      description: The type of the customer attribute. `type=string`
      schema:
        type: string
        enum:
          - string
          - number
          - date
    FilterAttributeValueByNameParam:
      name: name
      in: query
      description: The attribute name for which we should return values. `name=age`
      schema:
        type: string
    FilterPageParam:
      name: page
      in: query
      description: Page number. `page=1`
      schema:
        type: integer
    FilterLimitParam:
      in: query
      name: limit
      description: Items count per page. `limit=50`
      schema:
        type: number
    FilterCustomerIncludeParam:
      name: include
      in: query
      description: |-
        Indicates whether to include customer sub-resources:
         * `addresses` - customer addresses
         * `storecredit` - store credit
         * `attributes` - customer attributes and address attributes
         * `formfields` - customer and address form fields

         `include=addresses,storecredit,attributes,formfields`
      schema:
        type: string
        enum:
          - addresses
          - storecredit
          - attributes
          - formfields
    FilterAddressIncludeParam:
      name: include
      in: query
      description: |-
        Indicates whether to include customer address sub-resources:
        * `formfields` - address form fields
        `include=formfields`
      schema:
        type: string
        enum:
          - formfields
    Accept:
      name: Accept
      in: header
      schema:
        type: string
        default: application/json
    Content-Type:
      name: Content-Type
      in: header
      schema:
        type: string
        default: application/json
    FilterCustomerIdParam:
      in: query
      name: 'customer_id:in'
      description: 'The ID of the customer. `customer_id:in=23,24,55`'
      style: form
      explode: false
      schema:
        type: array
        items:
          type: integer
    FilterAttributeIdParam:
      name: 'attribute_id:in'
      in: query
      description: 'The attribute ID for which we should return values. `attribute_id:in=1,2`'
      style: form
      explode: false
      schema:
        type: array
        items:
          type: integer
    FilterCustomerIdEqualsParam:
      in: query
      name: customer_id
      description: The ID of the *Customer*.
      schema:
        type: integer
    FilterAddressIdEqualsParam:
      name: address_id
      in: query
      description: The ID of the *Customer Address*.
      schema:
        type: integer
    FilterFormFieldNameParam:
      name: field_name
      in: query
      description: The fields name.
      schema:
        type: string
    FilterFormFieldTypeParam:
      name: field_type
      in: query
      description: |-
        The field type.
         * `checkboxes` - checkboxes field
         * `date` - date field
         * `multiline` - multiline text field
         * `numbers` - numbers only field
         * `password` - password field
         * `radiobuttons` - radio buttons field
         * `text` - text field
         * `picklist` - pick list field
      schema:
        type: string
        enum:
          - checkboxes
          - date
          - multiline
          - numbers
          - password
          - radiobuttons
          - text
          - picklist
  responses:
    CustomerCollectionResponse:
      description: Customer Collection Response
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/components/schemas/customer_Full'
              meta:
                $ref: '#/components/schemas/_metaCollection'
    CustomerResponse:
      description: Customer Response
      content:
        application/json:
          schema:
            title: CustomersResponse
            description: Response payload for the BigCommerce API.
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/components/schemas/customer_Full'
              meta:
                type: object
          examples:
            response:
              value:
                data:
                  - id: 23
                    address_count: 2
                    addresses:
                      - id: 38
                        address1: 'Bennelong Point '
                        address2: ''
                        address_type: commercial
                        city: Sydney
                        company: ''
                        country: Australia
                        country_code: AU
                        customer_id: 23
                        first_name: John
                        last_name: Doe
                        phone: '1234567890'
                        postal_code: '2000'
                        state_or_province: New South Wales
                      - id: 39
                        address1: 111 E West Street
                        address2: '654'
                        address_type: residential
                        city: Akron
                        company: ''
                        country: United States
                        country_code: US
                        customer_id: 23
                        first_name: John
                        last_name: Doe
                        phone: '1234567890'
                        postal_code: '44325'
                        state_or_province: Ohio
                    authentication:
                      force_password_reset: true
                    company: BigCommerce
                    customer_group_id: 5
                    email: johndoe@email.com
                    first_name: John
                    last_name: Doe
                    notes: Warehouse
                    phone: '1234567890'
                    registration_ip_address: 123.4.56.789
                    tax_exempt_category: ''
                    date_created: '2019-02-19T18:34:16Z'
                    date_modified: '2019-02-19T18:34:16Z'
                meta: {}
        with include:
          examples:
            response:
              value: |-
                {
                    "data": [
                        {
                            "id": 11,
                            "address_count": 8,
                            "addresses": [
                                {
                                    "id": 16,
                                    "address1": "555 East Street",
                                    "address2": "",
                                    "address_type": "residential",
                                    "city": "Austin",
                                    "company": "",
                                    "country": "United States",
                                    "country_code": "US",
                                    "customer_id": 11,
                                    "first_name": "Jane",
                                    "last_name": "Doe",
                                    "phone": "1234567890",
                                    "postal_code": "78108",
                                    "state_or_province": "Texas",
                                    "form_fields": [
                                        {
                                            "name": "Delivery Instructions",
                                            "value": "Leave in backyard"
                                        }
                                    ]
                                },
                                {
                                    "id": 23,
                                    "address1": "111 E West Street",
                                    "address2": "654",
                                    "address_type": "commercial",
                                    "city": "Akron",
                                    "company": "BigCommerce",
                                    "country": "United States",
                                    "country_code": "US",
                                    "customer_id": 11,
                                    "first_name": "Jane",
                                    "last_name": "Doe",
                                    "phone": "1234567890",
                                    "postal_code": "44325",
                                    "state_or_province": "Ohio",
                                    "form_fields": [
                                        {
                                            "name": "Delivery Instructions",
                                            "value": ""
                                        }
                                    ]
                                },
                                {
                                    "id": 30,
                                    "address1": "122 First Street",
                                    "address2": "",
                                    "address_type": "residential",
                                    "city": "Austin",
                                    "company": "",
                                    "country": "United States",
                                    "country_code": "US",
                                    "customer_id": 11,
                                    "first_name": "Jon",
                                    "last_name": "Doe",
                                    "phone": "6789012345",
                                    "postal_code": "78726",
                                    "state_or_province": "Texas",
                                    "form_fields": []
                                },
                                {
                                    "id": 46,
                                    "address1": "666 Sussex St",
                                    "address2": "",
                                    "address_type": "residential",
                                    "city": "Anywhere",
                                    "company": "Acme Pty Ltd",
                                    "country": "United States",
                                    "country_code": "US",
                                    "customer_id": 11,
                                    "first_name": "Trishy",
                                    "last_name": "Test",
                                    "phone": "",
                                    "postal_code": "12345",
                                    "state_or_province": "Some State",
                                    "form_fields": []
                                },
                                {
                                    "id": 55,
                                    "address1": "123 Main Street",
                                    "address2": "",
                                    "address_type": "commercial",
                                    "city": "Austin",
                                    "company": "BigCommerce",
                                    "country": "United States",
                                    "country_code": "US",
                                    "customer_id": 11,
                                    "first_name": "Jane",
                                    "last_name": "Doe",
                                    "phone": "123-345-7890",
                                    "postal_code": "78726",
                                    "state_or_province": "Texas",
                                    "form_fields": []
                                },
                                {
                                    "id": 56,
                                    "address1": "2234 Main Street",
                                    "address2": "",
                                    "address_type": "residential",
                                    "city": "Austin",
                                    "company": "BigCommerce",
                                    "country": "United States",
                                    "country_code": "US",
                                    "customer_id": 11,
                                    "first_name": "Jane",
                                    "last_name": "Doe",
                                    "phone": "123-345-7890",
                                    "postal_code": "78726",
                                    "state_or_province": "Texas",
                                    "form_fields": []
                                },
                                {
                                    "id": 59,
                                    "address1": "122 First Street",
                                    "address2": "",
                                    "address_type": "residential",
                                    "city": "Austin",
                                    "company": "",
                                    "country": "United States",
                                    "country_code": "US",
                                    "customer_id": 11,
                                    "first_name": "Jon",
                                    "last_name": "Doe",
                                    "phone": "6789012345",
                                    "postal_code": "78726",
                                    "state_or_province": "Texas",
                                    "form_fields": [
                                        {
                                            "name": "Delivery Instructions",
                                            "value": "Leave in backyard"
                                        }
                                    ]
                                }
                            ],
                            "attributes": [
                                {
                                    "id": 1,
                                    "customer_id": 11,
                                    "attribute_id": 1,
                                    "attribute_value": "52",
                                    "date_created": "2018-11-14T18:58:08Z",
                                    "date_modified": "2019-02-19T19:26:21Z"
                                }
                            ],
                            "authentication": {
                                "force_password_reset": false
                            },
                            "company": "",
                            "customer_group_id": 0,
                            "email": "janedoe@email.com",
                            "first_name": "Jane",
                            "last_name": "Doe",
                            "notes": "",
                            "phone": "1234567890",
                            "registration_ip_address": "",
                            "tax_exempt_category": "",
                            "date_created": "2018-09-05T13:43:54Z",
                            "date_modified": "2019-02-21T18:03:59Z",
                            "attribute_count": 1,
                            "form_fields": [
                                {
                                    "name": "AccountSignUpField",
                                    "value": "345678ABC"
                                }
                            ],
                            "accepts_product_review_abandoned_cart_emails": true,
                            "store_credit_amounts": [
                                {
                                    "amount": 0
                                }
                            ]
                        },
                        {
                            "id": 14,
                            "address_count": 1,
                            "addresses": [
                                {
                                    "id": 24,
                                    "address1": "St Katharine's & Wapping",
                                    "address2": "",
                                    "address_type": "residential",
                                    "city": "London",
                                    "company": "",
                                    "country": "United Kingdom",
                                    "country_code": "GB",
                                    "customer_id": 14,
                                    "first_name": "Nathaniel",
                                    "last_name": "Hornblower",
                                    "phone": "5122134567",
                                    "postal_code": "EC3N 4AB",
                                    "state_or_province": "UK",
                                    "form_fields": [
                                        {
                                            "name": "Delivery Instructions",
                                            "value": ""
                                        }
                                    ]
                                }
                            ],
                            "attributes": [],
                            "authentication": {
                                "force_password_reset": false
                            },
                            "company": "",
                            "customer_group_id": 0,
                            "email": "nathanielhornblower@testing.com",
                            "first_name": "Nathaniel",
                            "last_name": "Hornblower",
                            "notes": "",
                            "phone": "123456788900",
                            "registration_ip_address": "64.183.182.114",
                            "tax_exempt_category": "",
                            "date_created": "2018-11-13T17:55:36Z",
                            "date_modified": "2018-11-13T17:55:36Z",
                            "attribute_count": 0,
                            "form_fields": [
                                {
                                    "name": "AccountSignUpField",
                                    "value": ""
                                }
                            ],
                            "accepts_product_review_abandoned_cart_emails": true,
                            "store_credit_amounts": [
                                {
                                    "amount": 0
                                }
                            ]
                        },
                        {
                            "id": 15,
                            "address_count": 3,
                            "addresses": [
                                {
                                    "id": 25,
                                    "address1": "221B Baker Street",
                                    "address2": "",
                                    "address_type": "residential",
                                    "city": "London",
                                    "company": "",
                                    "country": "United Kingdom",
                                    "country_code": "GB",
                                    "customer_id": 15,
                                    "first_name": "Patricia",
                                    "last_name": "Moriarty",
                                    "phone": "1234567890",
                                    "postal_code": "NW1 5LR",
                                    "state_or_province": "UK",
                                    "form_fields": [
                                        {
                                            "name": "Delivery Instructions",
                                            "value": ""
                                        }
                                    ]
                                },
                                {
                                    "id": 33,
                                    "address1": "161 Sajik-ro",
                                    "address2": "",
                                    "address_type": "residential",
                                    "city": "Seoul",
                                    "company": "",
                                    "country": "Korea, Republic of",
                                    "country_code": "KR",
                                    "customer_id": 15,
                                    "first_name": "Patricia",
                                    "last_name": "Moriarty",
                                    "phone": "5121234567",
                                    "postal_code": "Jongno-gu",
                                    "state_or_province": "Sejongno",
                                    "form_fields": [
                                        {
                                            "name": "Delivery Instructions",
                                            "value": ""
                                        }
                                    ]
                                },
                                {
                                    "id": 34,
                                    "address1": "161 Sajik-ro",
                                    "address2": "",
                                    "address_type": "residential",
                                    "city": "Seoul",
                                    "company": "",
                                    "country": "Korea, Republic of",
                                    "country_code": "KR",
                                    "customer_id": 15,
                                    "first_name": "Patricia",
                                    "last_name": "Moriarty",
                                    "phone": "5121234567",
                                    "postal_code": "Jongno-gu",
                                    "state_or_province": "Sejongno",
                                    "form_fields": [
                                        {
                                            "name": "Delivery Instructions",
                                            "value": ""
                                        }
                                    ]
                                }
                            ],
                            "attributes": [],
                            "authentication": {
                                "force_password_reset": false
                            },
                            "company": "",
                            "customer_group_id": 0,
                            "email": "patriciamoriarty@test.com",
                            "first_name": "Patricia",
                            "last_name": "Moriarty",
                            "notes": "",
                            "phone": "5122134567",
                            "registration_ip_address": "64.183.182.114",
                            "tax_exempt_category": "",
                            "date_created": "2018-11-13T17:57:33Z",
                            "date_modified": "2018-11-13T17:57:33Z",
                            "attribute_count": 0,
                            "form_fields": [
                                {
                                    "name": "AccountSignUpField",
                                    "value": ""
                                }
                            ],
                            "accepts_product_review_abandoned_cart_emails": true,
                            "store_credit_amounts": [
                                {
                                    "amount": 43.18
                                }
                            ]
                        },
                        {
                            "id": 18,
                            "address_count": 1,
                            "addresses": [
                                {
                                    "id": 27,
                                    "address1": "Mauna Kea Access Rd",
                                    "address2": "",
                                    "address_type": "residential",
                                    "city": "Hilo",
                                    "company": "",
                                    "country": "United States",
                                    "country_code": "US",
                                    "customer_id": 18,
                                    "first_name": "Dwayne",
                                    "last_name": "Cole",
                                    "phone": "8081234567",
                                    "postal_code": "96720",
                                    "state_or_province": "Hawaii",
                                    "form_fields": []
                                }
                            ],
                            "attributes": [],
                            "authentication": {
                                "force_password_reset": false
                            },
                            "company": "",
                            "customer_group_id": 5,
                            "email": "dwaynecole@testing.com",
                            "first_name": "Dwayne",
                            "last_name": "Cole",
                            "notes": "",
                            "phone": "1234567890",
                            "registration_ip_address": "",
                            "tax_exempt_category": "",
                            "date_created": "2018-11-13T18:38:31Z",
                            "date_modified": "2019-01-29T20:41:52Z",
                            "attribute_count": 0,
                            "form_fields": [],
                            "accepts_product_review_abandoned_cart_emails": false,
                            "store_credit_amounts": [
                                {
                                    "amount": 0
                                }
                            ]
                        },
                        {
                            "id": 19,
                            "address_count": 1,
                            "addresses": [
                                {
                                    "id": 28,
                                    "address1": "Rue de Rivoli",
                                    "address2": "",
                                    "address_type": "commercial",
                                    "city": "Paris",
                                    "company": "",
                                    "country": "France",
                                    "country_code": "FR",
                                    "customer_id": 19,
                                    "first_name": "Caden",
                                    "last_name": "Whitfield",
                                    "phone": "+33(0)140205050",
                                    "postal_code": "75001",
                                    "state_or_province": "France",
                                    "form_fields": []
                                }
                            ],
                            "attributes": [],
                            "authentication": {
                                "force_password_reset": false
                            },
                            "company": "",
                            "customer_group_id": 7,
                            "email": "cadenwhitfield@testing.com",
                            "first_name": "Caden",
                            "last_name": "Whitfield",
                            "notes": "",
                            "phone": "1234567890",
                            "registration_ip_address": "",
                            "tax_exempt_category": "",
                            "date_created": "2018-11-13T20:41:18Z",
                            "date_modified": "2019-02-12T17:47:47Z",
                            "attribute_count": 0,
                            "form_fields": [],
                            "accepts_product_review_abandoned_cart_emails": false,
                            "store_credit_amounts": [
                                {
                                    "amount": 0
                                }
                            ]
                        },
                        {
                            "id": 20,
                            "address_count": 3,
                            "addresses": [
                                {
                                    "id": 29,
                                    "address1": "5555 Hermann Park Dr",
                                    "address2": "",
                                    "address_type": "residential",
                                    "city": "Houston",
                                    "company": "",
                                    "country": "United States",
                                    "country_code": "US",
                                    "customer_id": 20,
                                    "first_name": "Alice",
                                    "last_name": "Golightly",
                                    "phone": "8901234564",
                                    "postal_code": "77030",
                                    "state_or_province": "Texas",
                                    "form_fields": [
                                        {
                                            "name": "Delivery Instructions",
                                            "value": ""
                                        }
                                    ]
                                },
                                {
                                    "id": 50,
                                    "address1": "5555 Hermann Park Dr",
                                    "address2": "",
                                    "address_type": "residential",
                                    "city": "Houston",
                                    "company": "",
                                    "country": "United States",
                                    "country_code": "US",
                                    "customer_id": 20,
                                    "first_name": "Alice",
                                    "last_name": "Golightly",
                                    "phone": "8901234564",
                                    "postal_code": "77030",
                                    "state_or_province": "Texas",
                                    "form_fields": [
                                        {
                                            "name": "Delivery Instructions",
                                            "value": ""
                                        }
                                    ]
                                }
                            ],
                            "attributes": [],
                            "authentication": {
                                "force_password_reset": false
                            },
                            "company": "",
                            "customer_group_id": 5,
                            "email": "golightly5@testing.com",
                            "first_name": "Alice",
                            "last_name": "Golightly",
                            "notes": "",
                            "phone": "1234567840",
                            "registration_ip_address": "",
                            "tax_exempt_category": "",
                            "date_created": "2018-11-13T20:42:16Z",
                            "date_modified": "2019-05-13T17:59:52Z",
                            "attribute_count": 0,
                            "form_fields": [
                                {
                                    "name": "Account Sign Up Field",
                                    "value": "Account Sign Up Fields"
                                }
                            ],
                            "accepts_product_review_abandoned_cart_emails": false,
                            "store_credit_amounts": [
                                {
                                    "amount": 0
                                }
                            ]
                        },
                        {
                            "id": 29,
                            "address_count": 4,
                            "addresses": [
                                {
                                    "id": 43,
                                    "address1": "Bennelong Point",
                                    "address2": "Number 410",
                                    "address_type": "commercial",
                                    "city": "Sydney",
                                    "company": "",
                                    "country": "Australia",
                                    "country_code": "AU",
                                    "customer_id": 29,
                                    "first_name": "John",
                                    "last_name": "Doe",
                                    "phone": "1234567890",
                                    "postal_code": "2000",
                                    "state_or_province": "New South Wales",
                                    "form_fields": [
                                        {
                                            "name": "Delivery Instructions",
                                            "value": ""
                                        }
                                    ]
                                },
                                {
                                    "id": 44,
                                    "address1": "123 West Street",
                                    "address2": "654",
                                    "address_type": "residential",
                                    "city": "Akron",
                                    "company": "",
                                    "country": "United States",
                                    "country_code": "US",
                                    "customer_id": 29,
                                    "first_name": "John",
                                    "last_name": "Doe",
                                    "phone": "1234567890",
                                    "postal_code": "44325",
                                    "state_or_province": "Ohio",
                                    "form_fields": [
                                        {
                                            "name": "Delivery Instructions",
                                            "value": "Hello Delivery"
                                        }
                                    ]
                                },
                                {
                                    "id": 53,
                                    "address1": "Bennelong Point",
                                    "address2": "Number 410",
                                    "address_type": "residential",
                                    "city": "Sydney",
                                    "company": "",
                                    "country": "Australia",
                                    "country_code": "AU",
                                    "customer_id": 29,
                                    "first_name": "John",
                                    "last_name": "Doe",
                                    "phone": "1234567890",
                                    "postal_code": "2000",
                                    "state_or_province": "New South Wales",
                                    "form_fields": [
                                        {
                                            "name": "Delivery Instructions",
                                            "value": "Hello Delivery"
                                        }
                                    ]
                                },
                                {
                                    "id": 54,
                                    "address1": "Bennelong Point",
                                    "address2": "Number 410",
                                    "address_type": "residential",
                                    "city": "Sydney",
                                    "company": "",
                                    "country": "Australia",
                                    "country_code": "AU",
                                    "customer_id": 29,
                                    "first_name": "John",
                                    "last_name": "Doe",
                                    "phone": "1234567890",
                                    "postal_code": "2000",
                                    "state_or_province": "New South Wales",
                                    "form_fields": [
                                        {
                                            "name": "Delivery Instructions",
                                            "value": "Hello Delivery"
                                        }
                                    ]
                                }
                            ],
                            "attributes": [
                                {
                                    "id": 5,
                                    "customer_id": 29,
                                    "attribute_id": 1,
                                    "attribute_value": "45",
                                    "date_created": "2019-02-27T21:53:29Z",
                                    "date_modified": "2019-02-27T21:53:29Z"
                                },
                                {
                                    "id": 6,
                                    "customer_id": 29,
                                    "attribute_id": 2,
                                    "attribute_value": "12",
                                    "date_created": "2019-02-27T21:53:29Z",
                                    "date_modified": "2019-02-27T21:53:29Z"
                                }
                            ],
                            "authentication": {
                                "force_password_reset": false
                            },
                            "company": "BigCommerce",
                            "customer_group_id": 5,
                            "email": "johndoe@email.com",
                            "first_name": "John",
                            "last_name": "Doe",
                            "notes": "Warehouse",
                            "phone": "1234567890",
                            "registration_ip_address": "",
                            "tax_exempt_category": "",
                            "date_created": "2019-02-27T21:53:29Z",
                            "date_modified": "2019-03-07T15:32:52Z",
                            "attribute_count": 2,
                            "form_fields": [
                                {
                                    "name": "Account Sign Up Field",
                                    "value": "Sign up Field"
                                }
                            ],
                            "accepts_product_review_abandoned_cart_emails": false,
                            "store_credit_amounts": [
                                {
                                    "amount": 0
                                }
                            ]
                        },
                        {
                            "id": 30,
                            "address_count": 2,
                            "addresses": [
                                {
                                    "id": 51,
                                    "address1": "Bennelong Point ",
                                    "address2": "",
                                    "address_type": "commercial",
                                    "city": "Sydney",
                                    "company": "",
                                    "country": "Australia",
                                    "country_code": "AU",
                                    "customer_id": 30,
                                    "first_name": "John",
                                    "last_name": "Doe",
                                    "phone": "1234567890",
                                    "postal_code": "2000",
                                    "state_or_province": "New South Wales",
                                    "form_fields": []
                                },
                                {
                                    "id": 52,
                                    "address1": "111 E West Street",
                                    "address2": "654",
                                    "address_type": "residential",
                                    "city": "Akron",
                                    "company": "",
                                    "country": "United States",
                                    "country_code": "US",
                                    "customer_id": 30,
                                    "first_name": "John",
                                    "last_name": "Doe",
                                    "phone": "1234567890",
                                    "postal_code": "44325",
                                    "state_or_province": "Ohio",
                                    "form_fields": []
                                }
                            ],
                            "attributes": [
                                {
                                    "id": 7,
                                    "customer_id": 30,
                                    "attribute_id": 1,
                                    "attribute_value": "33",
                                    "date_created": "2019-04-02T19:31:43Z",
                                    "date_modified": "2019-04-02T19:51:39Z"
                                },
                                {
                                    "id": 8,
                                    "customer_id": 30,
                                    "attribute_id": 2,
                                    "attribute_value": "12",
                                    "date_created": "2019-04-02T19:31:43Z",
                                    "date_modified": "2019-04-02T19:31:43Z"
                                }
                            ],
                            "authentication": {
                                "force_password_reset": false
                            },
                            "company": "BigCommerce",
                            "customer_group_id": 5,
                            "email": "johndoe1@email.com",
                            "first_name": "John",
                            "last_name": "Doe",
                            "notes": "New notes!!! 4/17/19",
                            "phone": "1234567890",
                            "registration_ip_address": "",
                            "tax_exempt_category": "",
                            "date_created": "2019-04-02T19:31:43Z",
                            "date_modified": "2019-05-06T18:56:45Z",
                            "attribute_count": 2,
                            "form_fields": [
                                {
                                    "name": "Account Sign Up Field",
                                    "value": "Account Sign Up Field"
                                }
                            ],
                            "accepts_product_review_abandoned_cart_emails": false,
                            "store_credit_amounts": [
                                {
                                    "amount": 0
                                }
                            ]
                        }
                    ],
                    "meta": {
                        "pagination": {
                            "total": 9,
                            "count": 9,
                            "per_page": 50,
                            "current_page": 1,
                            "total_pages": 1
                        }
                    }
                }
    AddressCollectionResponse:
      description: ''
      content:
        application/json:
          schema:
            title: AddressCollectionResponse
            description: Response payload for the BigCommerce API.
            type: object
            properties:
              data:
                type: array
                items:
                  title: Address
                  type: object
                  properties:
                    first_name:
                      description: The first name of the customer address.
                      type: string
                      minLength: 1
                      maxLength: 255
                    last_name:
                      description: The last name of the customer address.
                      type: string
                      minLength: 1
                      maxLength: 255
                    company:
                      description: The company of the customer address.
                      type: string
                      minLength: 0
                      maxLength: 255
                    address1:
                      description: The address 1 line.
                      type: string
                    address2:
                      description: The address 2 line.
                      type: string
                    city:
                      description: The city of the customer address.
                      type: string
                      minLength: 0
                      maxLength: 100
                    state_or_province:
                      description: The state or province name
                      type: string
                      minLength: 0
                      maxLength: 100
                    postal_code:
                      description: The postal code of the customer address.
                      type: string
                      minLength: 0
                      maxLength: 30
                    country_code:
                      description: The country code of the customer address.
                      type: string
                      minLength: 2
                      maxLength: 2
                    phone:
                      description: The phone number of the customer address.
                      type: string
                      minLength: 0
                      maxLength: 50
                    address_type:
                      title: Address Type
                      description: The address type. Residential or Commercial
                      example: residential
                      type: string
                      enum:
                        - residential
                        - commercial
                    customer_id:
                      description: The customer ID.
                      type: integer
                      format: int32
                    id:
                      description: The unique numeric ID of the address.
                      type: integer
                      format: int32
                    country:
                      description: The country name of the customer address.
                      type: string
                    form_fields:
                      description: Array of form fields. Controlled by `formfields` parameter.
                      type: array
                      items:
                        oneOf:
                          - allOf:
                              - type: object
                                title: Form Field Value Base
                                required:
                                  - name
                                  - value
                                properties:
                                  name:
                                    type: string
                                    description: The form field name.
                                    example: color
                                  value:
                                    oneOf:
                                      - type: string
                                        example: blue
                                      - type: number
                                        format: double
                                        example: 12.345
                                      - type: array
                                        example:
                                          - red
                                          - green
                                          - black
                                        items:
                                          type: string
                              - type: object
                                properties:
                                  customer_id:
                                    type: integer
                                required:
                                  - customer_id
                            title: Customer Form Field Value
                          - allOf:
                              - type: object
                                title: Form Field Value Base
                                required:
                                  - name
                                  - value
                                properties:
                                  name:
                                    type: string
                                    description: The form field name.
                                    example: color
                                  value:
                                    oneOf:
                                      - type: string
                                        example: blue
                                      - type: number
                                        format: double
                                        example: 12.345
                                      - type: array
                                        example:
                                          - red
                                          - green
                                          - black
                                        items:
                                          type: string
                              - type: object
                                properties:
                                  address_id:
                                    type: integer
                                    description: The Customer Address ID.
                                required:
                                  - address_id
                            title: Customer Address Form Field Value
                        title: 'Form Field Value '
                  required:
                    - first_name
                    - last_name
                    - address1
                    - city
                    - state_or_province
                    - postal_code
                    - country_code
                    - customer_id
                    - id
              meta:
                $ref: '#/components/schemas/_metaCollection'
          examples:
            response:
              value:
                data:
                  - id: 16
                    address1: 555 East Street
                    address2: ''
                    address_type: residential
                    city: Austin
                    company: ''
                    country: United States
                    country_code: US
                    customer_id: 11
                    first_name: Jane
                    last_name: Doe
                    phone: '1234567890'
                    postal_code: '78751'
                    state_or_province: Texas
                  - id: 23
                    address1: 111 E West Street
                    address2: '654'
                    address_type: commercial
                    city: Akron
                    company: BigCommerce
                    country: United States
                    country_code: US
                    customer_id: 11
                    first_name: Jane
                    last_name: Doe
                    phone: '1234567890'
                    postal_code: '44325'
                    state_or_province: Ohio
                  - id: 24
                    address1: St Katharine's & Wapping
                    address2: ''
                    address_type: residential
                    city: London
                    company: ''
                    country: United Kingdom
                    country_code: GB
                    customer_id: 14
                    first_name: Nathaniel
                    last_name: Hornblower
                    phone: '5122134567'
                    postal_code: EC3N 4AB
                    state_or_province: UK
                  - id: 25
                    address1: 221B Baker Street
                    address2: ''
                    address_type: residential
                    city: London
                    company: ''
                    country: United Kingdom
                    country_code: GB
                    customer_id: 15
                    first_name: Patricia
                    last_name: Moriarty
                    phone: '1234567890'
                    postal_code: NW1 5LR
                    state_or_province: UK
                  - id: 27
                    address1: Mauna Kea Access Rd
                    address2: ''
                    address_type: residential
                    city: Hilo
                    company: ''
                    country: United States
                    country_code: US
                    customer_id: 18
                    first_name: Dwayne
                    last_name: Cole
                    phone: '8081234567'
                    postal_code: '96720'
                    state_or_province: Hawaii
                  - id: 28
                    address1: Rue de Rivoli
                    address2: ''
                    address_type: commercial
                    city: Paris
                    company: ''
                    country: France
                    country_code: FR
                    customer_id: 19
                    first_name: Caden
                    last_name: Whitfield
                    phone: +33(0)140205050
                    postal_code: '75001'
                    state_or_province: France
                  - id: 29
                    address1: 5555 Hermann Park Dr
                    address2: ''
                    address_type: residential
                    city: Houston
                    company: ''
                    country: United States
                    country_code: US
                    customer_id: 20
                    first_name: Alice
                    last_name: Golightly
                    phone: '8901234564'
                    postal_code: '77030'
                    state_or_province: Texas
                  - id: 30
                    address1: 122 First Street
                    address2: ''
                    address_type: residential
                    city: Austin
                    company: ''
                    country: United States
                    country_code: US
                    customer_id: 11
                    first_name: Jon
                    last_name: Doe
                    phone: '6789012345'
                    postal_code: '78726'
                    state_or_province: Texas
                  - id: 31
                    address1: 11305 4 Points Drive
                    address2: ''
                    address_type: residential
                    city: Austin
                    company: ''
                    country: United States
                    country_code: US
                    customer_id: 11
                    first_name: Testing
                    last_name: Bigcommerce
                    phone: '5122134567'
                    postal_code: '78726'
                    state_or_province: Texas
                  - id: 32
                    address1: 11305 4 Points Drive
                    address2: ''
                    address_type: residential
                    city: Austin
                    company: ''
                    country: United States
                    country_code: US
                    customer_id: 20
                    first_name: Testing
                    last_name: Bigcommerce
                    phone: '1234567890'
                    postal_code: '78726'
                    state_or_province: Texas
                  - id: 33
                    address1: 161 Sajik-ro
                    address2: ''
                    address_type: residential
                    city: Seoul
                    company: ''
                    country: 'Korea, Republic of'
                    country_code: KR
                    customer_id: 15
                    first_name: Patricia
                    last_name: Moriarty
                    phone: '5121234567'
                    postal_code: Jongno-gu
                    state_or_province: Sejongno
                  - id: 34
                    address1: 161 Sajik-ro
                    address2: ''
                    address_type: residential
                    city: Seoul
                    company: ''
                    country: 'Korea, Republic of'
                    country_code: KR
                    customer_id: 15
                    first_name: Patricia
                    last_name: Moriarty
                    phone: '5121234567'
                    postal_code: Jongno-gu
                    state_or_province: Sejongno
                  - id: 38
                    address1: 'Bennelong Point '
                    address2: ''
                    address_type: commercial
                    city: Sydney
                    company: ''
                    country: Australia
                    country_code: AU
                    customer_id: 23
                    first_name: John
                    last_name: Doe
                    phone: '1234567890'
                    postal_code: '2000'
                    state_or_province: New South Wales
                  - id: 39
                    address1: 111 E West Street
                    address2: '654'
                    address_type: residential
                    city: Akron
                    company: ''
                    country: United States
                    country_code: US
                    customer_id: 23
                    first_name: John
                    last_name: Doe
                    phone: '1234567890'
                    postal_code: '44325'
                    state_or_province: Ohio
                meta:
                  pagination:
                    total: 14
                    count: 14
                    per_page: 50
                    current_page: 1
                    total_pages: 1
    AddressResponse:
      description: ''
      content:
        application/json:
          schema:
            title: AddressesResponse
            description: Response payload for the BigCommerce API.
            type: object
            properties:
              data:
                type: array
                items:
                  title: Address
                  type: object
                  properties:
                    first_name:
                      description: The first name of the customer address.
                      type: string
                      minLength: 1
                      maxLength: 255
                    last_name:
                      description: The last name of the customer address.
                      type: string
                      minLength: 1
                      maxLength: 255
                    company:
                      description: The company of the customer address.
                      type: string
                      minLength: 0
                      maxLength: 255
                    address1:
                      description: The address 1 line.
                      type: string
                    address2:
                      description: The address 2 line.
                      type: string
                    city:
                      description: The city of the customer address.
                      type: string
                      minLength: 0
                      maxLength: 100
                    state_or_province:
                      description: The state or province name
                      type: string
                      minLength: 0
                      maxLength: 100
                    postal_code:
                      description: The postal code of the customer address.
                      type: string
                      minLength: 0
                      maxLength: 30
                    country_code:
                      description: The country code of the customer address.
                      type: string
                      minLength: 2
                      maxLength: 2
                    phone:
                      description: The phone number of the customer address.
                      type: string
                      minLength: 0
                      maxLength: 50
                    address_type:
                      title: Address Type
                      description: The address type. Residential or Commercial
                      example: residential
                      type: string
                      enum:
                        - residential
                        - commercial
                    customer_id:
                      description: The customer ID.
                      type: integer
                      format: int32
                    id:
                      description: The unique numeric ID of the address.
                      type: integer
                      format: int32
                    country:
                      description: The country name of the customer address.
                      type: string
                    form_fields:
                      description: Array of form fields. Controlled by `formfields` parameter.
                      type: array
                      items:
                        oneOf:
                          - allOf:
                              - type: object
                                title: Form Field Value Base
                                required:
                                  - name
                                  - value
                                properties:
                                  name:
                                    type: string
                                    description: The form field name.
                                    example: color
                                  value:
                                    oneOf:
                                      - type: string
                                        example: blue
                                      - type: number
                                        format: double
                                        example: 12.345
                                      - type: array
                                        example:
                                          - red
                                          - green
                                          - black
                                        items:
                                          type: string
                              - type: object
                                properties:
                                  customer_id:
                                    type: integer
                                required:
                                  - customer_id
                            title: Customer Form Field Value
                          - allOf:
                              - type: object
                                title: Form Field Value Base
                                required:
                                  - name
                                  - value
                                properties:
                                  name:
                                    type: string
                                    description: The form field name.
                                    example: color
                                  value:
                                    oneOf:
                                      - type: string
                                        example: blue
                                      - type: number
                                        format: double
                                        example: 12.345
                                      - type: array
                                        example:
                                          - red
                                          - green
                                          - black
                                        items:
                                          type: string
                              - type: object
                                properties:
                                  address_id:
                                    type: integer
                                    description: The Customer Address ID.
                                required:
                                  - address_id
                            title: Customer Address Form Field Value
                        title: 'Form Field Value '
                  required:
                    - first_name
                    - last_name
                    - address1
                    - city
                    - state_or_province
                    - postal_code
                    - country_code
                    - customer_id
                    - id
              meta:
                type: object
          examples:
            response:
              value:
                data:
                  - id: 40
                    address1: 111 E West Street
                    address2: '654'
                    address_type: residential
                    city: Akron
                    company: ''
                    country: United States
                    country_code: US
                    customer_id: 11
                    first_name: John
                    last_name: Doe
                    phone: '1234567890'
                    postal_code: '44325'
                    state_or_province: Ohio
                meta: {}
    CustomerAttributeValueCollectionResponse:
      description: ''
      content:
        application/json:
          schema:
            title: CustomerAttributeValueCollectionResponse
            description: Response payload for the BigCommerce API.
            type: object
            properties:
              data:
                type: array
                items:
                  title: Customer Attribute Value
                  type: object
                  properties:
                    attribute_id:
                      description: Attribute ID.
                      type: integer
                      format: int32
                    value:
                      description: 'Attribute value. This will always be a string, regardless of the attributes type.'
                      type: string
                      minLength: 0
                      maxLength: 255
                    id:
                      description: Attribute value ID.
                      type: integer
                      format: int32
                    customer_id:
                      description: Customer ID.
                      type: integer
                      format: int32
                    date_modified:
                      description: The date on which the customer attribute value was modified.
                      type: string
                      format: date-time
                    date_created:
                      description: The date of which the customer attribute value was created.
                      type: string
                      format: date-time
                  required:
                    - attribute_id
                    - value
                    - customer_id
              meta:
                title: Collection Meta
                description: 'Data about the response, including pagination and collection totals.'
                type: object
                properties:
                  pagination:
                    title: Pagination
                    description: 'Data about the response, including pagination and collection totals.'
                    type: object
                    properties:
                      total:
                        description: Total number of items in the result set.
                        type: integer
                        format: int32
                      count:
                        description: Total number of items in the collection response.
                        type: integer
                        format: int32
                      per_page:
                        description: 'The amount of items returned in the collection per page, controlled by the limit parameter.'
                        type: integer
                        format: int32
                      current_page:
                        description: The page you are currently on within the collection.
                        type: integer
                        format: int32
                      total_pages:
                        description: The total number of pages in the collection.
                        type: integer
                        format: int32
                      links:
                        title: Links
                        description: Pagination links for the previous and next parts of the whole collection.
                        type: object
                        properties:
                          previous:
                            description: Link to the previous page returned in the response.
                            type: string
                          current:
                            description: Link to the current page returned in the response.
                            type: string
                          next:
                            description: Link to the next page returned in the response.
                            type: string
    CustomerAttributeValueResponse:
      description: ''
      content:
        application/json:
          schema:
            title: CustomerAttributeValuesResponse
            description: Response payload for the BigCommerce API.
            type: object
            properties:
              data:
                type: array
                items:
                  title: Customer Attribute Value
                  type: object
                  properties:
                    attribute_id:
                      description: Attribute ID.
                      type: integer
                      format: int32
                    value:
                      description: 'Attribute value. This will always be a string, regardless of the attributes type.'
                      type: string
                      minLength: 0
                      maxLength: 255
                    id:
                      description: Attribute value ID.
                      type: integer
                      format: int32
                    customer_id:
                      description: Customer ID.
                      type: integer
                      format: int32
                    date_modified:
                      description: The date on which the customer attribute value was modified.
                      type: string
                      format: date-time
                    date_created:
                      description: The date of which the customer attribute value was created.
                      type: string
                      format: date-time
                  required:
                    - attribute_id
                    - value
                    - customer_id
              meta:
                type: object
    CustomerAttributeCollectionResponse:
      description: ''
      content:
        application/json:
          schema:
            title: CustomerAttributeValueCollectionResponse
            description: Response payload for the BigCommerce API.
            type: object
            properties:
              data:
                type: array
                items:
                  title: Customer Attribute Value
                  type: object
                  properties:
                    attribute_id:
                      description: Attribute ID.
                      type: integer
                      format: int32
                    value:
                      description: 'Attribute value. This will always be a string, regardless of the attributes type.'
                      type: string
                      minLength: 0
                      maxLength: 255
                    id:
                      description: Attribute value ID.
                      type: integer
                      format: int32
                    customer_id:
                      description: Customer ID.
                      type: integer
                      format: int32
                    date_modified:
                      description: The date on which the customer attribute value was modified.
                      type: string
                      format: date-time
                    date_created:
                      description: The date of which the customer attribute value was created.
                      type: string
                      format: date-time
                  required:
                    - attribute_id
                    - value
                    - customer_id
              meta:
                title: Collection Meta
                description: 'Data about the response, including pagination and collection totals.'
                type: object
                properties:
                  pagination:
                    $ref: ./channels.v3.yml#/components/schemas/pagination_Full
    CustomerSettingsResponse:
      description: |
        Response payload for the BigCommerce API.
      content:
        application/json:
          schema:
            title: CustomerSettingsResponse
            type: object
            properties:
              data:
                $ref: "#/components/schemas/CustomerSettingsObjet"
    CustomerChannelSettingsResponse:
      description: |
        Response payload for the BigCommerce API.
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                $ref: "#/components/schemas/CustomerChannelSettingsObject"
    CustomerAttributesResponse:
      description: ''
      content:
        application/json:
          schema:
            title: CustomerAttributesResponse
            description: Response payload for the BigCommerce API.
            type: object
            properties:
              data:
                type: array
                items:
                  title: Customer Attribute
                  type: object
                  properties:
                    name:
                      description: Attribute name.
                      type: string
                      minLength: 1
                      maxLength: 255
                    type:
                      title: Type
                      description: 'Attribute type should match one of: string, number, date. When doing a'
                      example: string
                      type: string
                      enum:
                        - string
                        - number
                        - date
                    id:
                      description: Attribute ID.
                      type: integer
                      format: int32
                    date_modified:
                      description: The date on which the customer attribute was modified.
                      type: string
                      format: date-time
                    date_created:
                      description: The date of which the customer attribute was created.
                      type: string
                      format: date-time
                  required:
                    - name
                    - type
                    - id
              meta:
                type: object
          examples:
            response:
              value:
                data:
                  - id: 1
                    name: Age
                    type: string
                    date_created: '2018-11-13T21:42:06Z'
                    date_modified: '2018-11-14T16:46:23Z'
                meta: {}
    FormFieldValueCollectionResponse:
      description: ''
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  oneOf:
                    - allOf:
                        - type: object
                          title: Form Field Value Base
                          required:
                            - name
                            - value
                          properties:
                            name:
                              type: string
                              description: The form field name.
                              example: color
                            value:
                              oneOf:
                                - type: string
                                  example: blue
                                - type: number
                                  format: double
                                  example: 12.345
                                - type: array
                                  example:
                                    - red
                                    - green
                                    - black
                                  items:
                                    type: string
                        - type: object
                          properties:
                            customer_id:
                              type: integer
                          required:
                            - customer_id
                      title: Customer Form Field Value
                    - allOf:
                        - type: object
                          title: Form Field Value Base
                          required:
                            - name
                            - value
                          properties:
                            name:
                              type: string
                              description: The form field name.
                              example: color
                            value:
                              oneOf:
                                - type: string
                                  example: blue
                                - type: number
                                  format: double
                                  example: 12.345
                                - type: array
                                  example:
                                    - red
                                    - green
                                    - black
                                  items:
                                    type: string
                        - type: object
                          properties:
                            address_id:
                              type: integer
                              description: The Customer Address ID.
                          required:
                            - address_id
                      title: Customer Address Form Field Value
                  title: 'Form Field Value '
              meta:
                title: Collection Meta
                description: 'Data about the response, including pagination and collection totals.'
                type: object
                properties:
                  pagination:
                    title: Pagination
                    description: 'Data about the response, including pagination and collection totals.'
                    type: object
                    properties:
                      total:
                        description: Total number of items in the result set.
                        type: integer
                        format: int32
                      count:
                        description: Total number of items in the collection response.
                        type: integer
                        format: int32
                      per_page:
                        description: 'The amount of items returned in the collection per page, controlled by the limit parameter.'
                        type: integer
                        format: int32
                      current_page:
                        description: The page you are currently on within the collection.
                        type: integer
                        format: int32
                      total_pages:
                        description: The total number of pages in the collection.
                        type: integer
                        format: int32
                      links:
                        title: Links
                        description: Pagination links for the previous and next parts of the whole collection.
                        type: object
                        properties:
                          previous:
                            description: Link to the previous page returned in the response.
                            type: string
                          current:
                            description: Link to the current page returned in the response.
                            type: string
                          next:
                            description: Link to the next page returned in the response.
                            type: string
          examples:
            response:
              value:
                data:
                  - customer_id: 1
                    name: color
                    value: blue
                  - customer_id: 1
                    name: weight
                    value: 12.345
                  - customer_id: 1
                    name: colors
                    value:
                      - red
                      - green
                      - black
                  - address_id: 2
                    name: color
                    value: blue
                  - address_id: 2
                    name: weight
                    value: 12.345
                  - address_id: 2
                    name: colors
                    value:
                      - red
                      - green
                      - black
                meta:
                  pagination:
                    total: 6
                    count: 6
                    per_page: 50
                    current_page: 1
                    total_pages: 1
    FormFieldValuesResponse:
      description: ''
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  oneOf:
                    - allOf:
                        - type: object
                          title: Form Field Value Base
                          required:
                            - name
                            - value
                          properties:
                            name:
                              type: string
                              description: The form field name.
                              example: color
                            value:
                              oneOf:
                                - type: string
                                  example: blue
                                - type: number
                                  format: double
                                  example: 12.345
                                - type: array
                                  example:
                                    - red
                                    - green
                                    - black
                                  items:
                                    type: string
                        - type: object
                          properties:
                            customer_id:
                              type: integer
                          required:
                            - customer_id
                      title: Customer Form Field Value
                    - allOf:
                        - type: object
                          title: Form Field Value Base
                          required:
                            - name
                            - value
                          properties:
                            name:
                              type: string
                              description: The form field name.
                              example: color
                            value:
                              oneOf:
                                - type: string
                                  example: blue
                                - type: number
                                  format: double
                                  example: 12.345
                                - type: array
                                  example:
                                    - red
                                    - green
                                    - black
                                  items:
                                    type: string
                        - type: object
                          properties:
                            address_id:
                              type: integer
                              description: The Customer Address ID.
                          required:
                            - address_id
                      title: Customer Address Form Field Value
                  title: 'Form Field Value '
              meta:
                type: object
          examples:
            response:
              value:
                data:
                  - customer_id: 1
                    name: color
                    value: blue
                  - customer_id: 1
                    name: weight
                    value: 12.345
                  - customer_id: 1
                    name: colors
                    value:
                      - red
                      - green
                      - black
                  - address_id: 2
                    name: color
                    value: blue
                  - address_id: 2
                    name: weight
                    value: 12.345
                  - address_id: 2
                    name: colors
                    value:
                      - red
                      - green
                      - black
                meta: {}
    consent_Resp:
      description: ''
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/consent_Full'
  securitySchemes:
    X-Auth-Token:
      type: apiKey
      name: X-Auth-Token
      in: header
      description: |-
        ### OAuth Scopes
        |  **UI Name** | **Permission** | **Parameter** |
        | --- | --- | --- |
        |  Customers | modify | `store_v2_customers` |
        |  Customers | read-only | `store_v2_customers_read_only` |

        ### Headers

        |Header|Parameter|Description|
        |-|-|-|
        |`X-Auth-Token`|`access_token `|Obtained by creating an API account or installing an app in a BigCommerce control panel.|

        ### Example

        ```http
        GET /stores/{$$.env.store_hash}/v3/catalog/summary
        host: api.bigcommerce.com
        Content-Type: application/json
        X-Auth-Token: {access_token}
        ```

        * For more information on Authenticating BigCommerce APIs, see: [Authentication](https://developer.bigcommerce.com/api-docs/getting-started/authentication).
  schemas:
    Pagination:
      title: Pagination
      description: 'Data about the response, including pagination and collection totals.'
      type: object
      properties:
        total:
          description: Total number of items in the result set.
          type: integer
          format: int32
        count:
          description: Total number of items in the collection response.
          type: integer
          format: int32
        per_page:
          description: 'The amount of items returned in the collection per page, controlled by the limit parameter.'
          type: integer
          format: int32
        current_page:
          description: The page you are currently on within the collection.
          type: integer
          format: int32
        total_pages:
          description: The total number of pages in the collection.
          type: integer
          format: int32
        links:
          $ref: '#/components/schemas/Links'
    _metaCollection:
      title: _metaCollection
      description: 'Data about the response, including pagination and collection totals.'
      type: object
      properties:
        pagination:
          $ref: '#/components/schemas/Pagination'
    ErrorResponse:
      title: Error Response
      type: object
      properties:
        status:
          description: The HTTP status code.
          type: integer
          format: int32
        title:
          description: The error title describing the particular error.
          type: string
        type:
          type: string
        instance:
          type: string
        errors:
          type: object
          additionalProperties:
            type: string
    _error:
      title: _error
      description: Error payload for the BigCommerce API.
      type: object
      properties:
        status:
          description: The HTTP status code.
          type: integer
          format: int32
        title:
          description: The error title describing the particular error.
          type: string
        type:
          type: string
        instance:
          type: string
    customer_Full:
      title: customer_Full
      type: object
      properties:
        email:
          description: The email of the customer. Must be unique.
          type: string
          minLength: 3
          maxLength: 255
        first_name:
          description: The first name of the customer.
          type: string
          minLength: 1
          maxLength: 100
        last_name:
          description: The last name of the customer.
          type: string
          minLength: 1
          maxLength: 100
        company:
          description: The company of the customer.
          type: string
          minLength: 0
          maxLength: 255
        phone:
          description: The phone number of the customer.
          type: string
          minLength: 0
          maxLength: 50
        registration_ip_address:
          description: The IP address from which this customer was registered.
          type: string
          minLength: 0
          maxLength: 30
        notes:
          description: The customer notes.
          type: string
        tax_exempt_category:
          description: The tax exempt category code for the customer.
          type: string
          minLength: 0
          maxLength: 255
        customer_group_id:
          description: ID of the group which this customer belongs to.
          type: integer
          format: int32
        id:
          description: The unique numeric ID of the customer.
          type: integer
          format: int32
        date_modified:
          description: The date on which the customer was modified.
          type: string
          format: date-time
        date_created:
          description: The date of which the customer was created.
          type: string
          format: date-time
        address_count:
          description: Total number of customer addresses
          type: integer
          format: int32
        attribute_count:
          description: Total number of customer attributes
          type: integer
          format: int32
        authentication:
          title: Customer Authentication Base
          example:
            force_password_reset: true
          type: object
          properties:
            force_password_reset:
              description: 'If `true`, this customer will be forced to change password on next login.'
              type: boolean
        addresses:
          description: Array of customer addresses. Limited to 10
          type: array
          maxItems: 10
          items:
            $ref: '#/components/schemas/address_Full'
        attributes:
          description: Array of customer attributes. Limited to 10
          type: array
          maxItems: 10
          items:
            $ref: '#/components/schemas/attribute_Full'
        form_fields:
          description: Array of form fields. Controlled by `formfields` parameter.
          type: array
          items:
            $ref: '#/components/schemas/formFieldValue_Full'
        store_credit_amounts:
          $ref: '#/components/schemas/CustomerStoredCreditAmounts'
        accepts_product_review_abandoned_cart_emails:
          type: boolean
          description: It determines if the customer is signed up to receive either product review or abandoned cart emails or recieve both emails.
        channel_ids:
          $ref: '#/components/schemas/customerChannelIds'
    customer_Post:
      title: customer_Post
      type: object
      properties:
        email:
          description: The email of the customer. Must be unique.
          type: string
          minLength: 3
          maxLength: 255
        first_name:
          description: The first name of the customer.
          type: string
          minLength: 1
          maxLength: 100
        last_name:
          description: The last name of the customer.
          type: string
          minLength: 1
          maxLength: 100
        company:
          description: The company of the customer.
          type: string
          minLength: 0
          maxLength: 255
        phone:
          description: The phone number of the customer.
          type: string
          minLength: 0
          maxLength: 50
        notes:
          description: The customer notes.
          type: string
        tax_exempt_category:
          description: The tax exempt category code for the customer.
          type: string
          minLength: 0
          maxLength: 255
        customer_group_id:
          description: ID of the group which this customer belongs to.
          type: integer
          format: int32
        addresses:
          description: Array of customer addresses. Limited to 10
          type: array
          maxItems: 10
          items:
            $ref: '#/components/schemas/customerAddresses_Base'
        attributes:
          description: Array of customer attributes. Limited to 10
          type: array
          maxItems: 10
          items:
            $ref: '#/components/schemas/customerAttributes_Base'
        authentication:
          $ref: '#/components/schemas/customerAuthentication_PostPut'
        accepts_product_review_abandoned_cart_emails:
          type: boolean
          description: It determines if the customer is signed up to receive either product review or abandoned cart emails or recieve both emails.
        store_credit_amounts:
          $ref: '#/components/schemas/CustomerStoredCreditAmounts'
        origin_channel_id:
          description: Channel ID the customer has been created from
          type: integer
        channel_ids:
          description: Array of channels the customer can access
          type: array
          items:
            type: integer
      required:
        - email
        - first_name
        - last_name
    customer_Put:
      title: customer_Put
      type: object
      properties:
        email:
          description: The email of the customer. Must be unique.
          type: string
          minLength: 3
          maxLength: 255
        first_name:
          description: The first name of the customer.
          type: string
          minLength: 1
          maxLength: 100
        last_name:
          description: The last name of the customer.
          type: string
          minLength: 1
          maxLength: 100
        company:
          description: The company of the customer.
          type: string
          minLength: 0
          maxLength: 255
        phone:
          description: The phone number of the customer.
          type: string
          minLength: 0
          maxLength: 50
        registration_ip_address:
          description: The IP address from which this customer was registered.
          type: string
          minLength: 0
          maxLength: 30
        notes:
          description: The customer notes.
          type: string
        tax_exempt_category:
          description: The tax exempt category code for the customer.
          type: string
          minLength: 0
          maxLength: 255
        customer_group_id:
          description: ID of the group which this customer belongs to.
          type: integer
          format: int32
        id:
          description: The unique numeric ID of the customer.
          type: integer
          format: int32
        authentication:
          $ref: '#/components/schemas/customerAuthentication_PostPut'
        accepts_product_review_abandoned_cart_emails:
          type: boolean
          description: It determines if the customer is signed up to receive either product review or abandoned cart emails or recieve both emails.
        store_credit_amounts:
          $ref: '#/components/schemas/CustomerStoredCreditAmounts'
        channel_ids:
          description: Array of channels the customer can access
          type: array
          items:
            type: integer
      required:
        - id
    attributeValue_Full:
      title: attributeValue_Full
      allOf:
        - $ref: '#/components/schemas/attribueValue_Base'
        - type: object
          properties:
            date_modified:
              description: The date on which the customer attribute value was modified.
              type: string
              format: date-time
            date_created:
              description: The date of which the customer attribute value was created.
              type: string
              format: date-time
    attribueValue_Base:
      title: attribueValue_Base
      type: object
      properties:
        id:
          description: Attribute value ID.
          type: integer
          format: int32
        attribute_id:
          description: Attribute ID.
          type: integer
          format: int32
        value:
          description: 'Attribute value. This will always be a string, regardless of the attributes type.'
          type: string
          minLength: 0
          maxLength: 255
        customer_id:
          description: Customer ID.
          type: integer
          format: int32
      required:
        - attribute_id
        - value
        - customer_id
    customerAttributeValue_Full:
      title: customerAttributeValue_Full
      type: object
      properties:
        attribute_id:
          description: Attribute ID.
          type: integer
          format: int32
        attribute_value:
          description: 'Attribute value. This will always be a string, regardless of the attributes type.'
          type: string
          minLength: 0
          maxLength: 255
      required:
        - attribute_id
        - attribute_value
    attribute_Full:
      title: attribute_Full
      type: object
      properties:
        name:
          description: Attribute name.
          type: string
          minLength: 1
          maxLength: 255
        type:
          title: Type
          description: 'Attribute type should match one of: string, number, date. When doing a'
          example: string
          type: string
          enum:
            - string
            - number
            - date
        id:
          description: Attribute ID.
          type: integer
          format: int32
        date_modified:
          description: The date on which the customer attribute was modified.
          type: string
          format: date-time
        date_created:
          description: The date of which the customer attribute was created.
          type: string
          format: date-time
      required:
        - name
        - type
        - id
    attribute_Put:
      title: attribute_Put
      type: object
      properties:
        name:
          description: Attribute name.
          type: string
          minLength: 1
          maxLength: 255
        id:
          description: Attribute ID.
          type: integer
          format: int32
      required:
        - name
        - id
      description: 'Once the data type is set, it can not be changed. The attribute will need to be deleted then created again with the new data type. This will also delete it from the customer.'
    attribute_Post:
      title: attribute_Post
      example:
        name: attribute_string 01
        type: string
      type: object
      properties:
        name:
          description: Attribute name.
          type: string
          minLength: 1
          maxLength: 255
        type:
          title: Type
          description: 'Attribute type should match one of: string, number, date. When doing a'
          example: string
          type: string
          enum:
            - string
            - number
            - date
      required:
        - name
        - type
    address_Full:
      title: address_Full
      type: object
      properties:
        first_name:
          description: The first name of the customer address.
          type: string
          minLength: 1
          maxLength: 255
        last_name:
          description: The last name of the customer address.
          type: string
          minLength: 1
          maxLength: 255
        company:
          description: The company of the customer address.
          type: string
          minLength: 0
          maxLength: 255
        address1:
          description: The address 1 line.
          type: string
        address2:
          description: The address 2 line.
          type: string
        city:
          description: The city of the customer address.
          type: string
          minLength: 0
          maxLength: 100
        state_or_province:
          description: The state or province name
          type: string
          minLength: 0
          maxLength: 100
        postal_code:
          description: The postal code of the customer address.
          type: string
          minLength: 0
          maxLength: 30
        country_code:
          description: The country code of the customer address.
          type: string
          minLength: 2
          maxLength: 2
        phone:
          description: The phone number of the customer address.
          type: string
          minLength: 0
          maxLength: 50
        address_type:
          title: Address Type
          description: The address type. Residential or Commercial
          example: residential
          type: string
          enum:
            - residential
            - commercial
        customer_id:
          description: The customer ID.
          type: integer
          format: int32
        id:
          description: The unique numeric ID of the address.
          type: integer
          format: int32
        country:
          description: The country name of the customer address.
          type: string
        form_fields:
          description: Array of form fields. Controlled by `formfields` parameter.
          type: array
          items:
            $ref: '#/components/schemas/formFieldValue_Full'
      required:
        - first_name
        - last_name
        - address1
        - city
        - state_or_province
        - postal_code
        - country_code
        - customer_id
        - id
    address_Put:
      title: address_Put
      type: object
      properties:
        first_name:
          description: The first name of the customer address.
          type: string
          minLength: 1
          maxLength: 255
        last_name:
          description: The last name of the customer address.
          type: string
          minLength: 1
          maxLength: 255
        company:
          description: The company of the customer address.
          type: string
          minLength: 0
          maxLength: 255
        address1:
          description: The address 1 line.
          type: string
        address2:
          description: The address 2 line.
          type: string
        city:
          description: The city of the customer address.
          type: string
          minLength: 0
          maxLength: 100
        state_or_province:
          description: The state or province name
          type: string
          minLength: 0
          maxLength: 100
        postal_code:
          description: The postal code of the customer address.
          type: string
          minLength: 0
          maxLength: 30
        country_code:
          description: The country code of the customer address.
          type: string
          minLength: 2
          maxLength: 2
        phone:
          description: The phone number of the customer address.
          type: string
          minLength: 0
          maxLength: 50
        address_type:
          title: Address Type
          description: The address type. Residential or Commercial
          example: residential
          type: string
          enum:
            - residential
            - commercial
        customer_id:
          description: The customer ID.
          type: integer
          format: int32
        id:
          description: The unique numeric ID of the address.
          type: integer
          format: int32
      required:
        - first_name
        - last_name
        - address1
        - city
        - state_or_province
        - postal_code
        - country_code
        - customer_id
        - id
    address_Post:
      title: address_Post
      type: object
      properties:
        first_name:
          description: The first name of the customer address.
          type: string
          minLength: 1
          maxLength: 255
        last_name:
          description: The last name of the customer address.
          type: string
          minLength: 1
          maxLength: 255
        company:
          description: The company of the customer address.
          type: string
          minLength: 0
          maxLength: 255
        address1:
          description: The address 1 line.
          type: string
        address2:
          description: The address 2 line.
          type: string
        city:
          description: The city of the customer address.
          type: string
          minLength: 0
          maxLength: 100
        state_or_province:
          description: The state or province name
          type: string
          minLength: 0
          maxLength: 100
        postal_code:
          description: The postal code of the customer address.
          type: string
          minLength: 0
          maxLength: 30
        country_code:
          description: The country code of the customer address.
          type: string
          minLength: 2
          maxLength: 2
        phone:
          description: The phone number of the customer address.
          type: string
          minLength: 0
          maxLength: 50
        address_type:
          title: Address Type
          description: The address type. Residential or Commercial
          example: residential
          type: string
          enum:
            - residential
            - commercial
        customer_id:
          description: The customer ID.
          type: integer
          format: int32
      required:
        - first_name
        - last_name
        - address1
        - city
        - state_or_province
        - postal_code
        - country_code
        - customer_id
    customerAddresses_Base:
      title: customerAddresses_Base
      example:
        address1: Addr 1
        address2: ''
        address_type: residential
        city: San Francisco
        company: History
        country_code: US
        first_name: Ronald
        last_name: Swimmer
        phone: '707070707'
        postal_code: '33333'
        state_or_province: California
      type: object
      properties:
        first_name:
          description: The first name of the customer address.
          type: string
          minLength: 1
          maxLength: 255
        last_name:
          description: The last name of the customer address.
          type: string
          minLength: 1
          maxLength: 255
        company:
          description: The company of the customer address.
          type: string
          minLength: 0
          maxLength: 255
        address1:
          description: The address 1 line.
          type: string
        address2:
          description: The address 2 line.
          type: string
        city:
          description: The city of the customer address.
          type: string
          minLength: 0
          maxLength: 100
        state_or_province:
          description: The state or province name
          type: string
          minLength: 0
          maxLength: 100
        postal_code:
          description: The postal code of the customer address.
          type: string
          minLength: 0
          maxLength: 30
        country_code:
          description: The country code of the customer address.
          type: string
          minLength: 2
          maxLength: 2
        phone:
          description: The phone number of the customer address.
          type: string
          minLength: 0
          maxLength: 50
        address_type:
          title: Address Type
          description: The address type. Residential or Commercial
          example: residential
          type: string
          enum:
            - residential
            - commercial
      required:
        - first_name
        - last_name
        - address1
        - city
        - state_or_province
        - postal_code
        - country_code
      description: The `address` object for the `customer` object's `addresses` array.
    customerAuthentication_PostPut:
      title: customerAuthentication_PostPut
      allOf:
        - properties:
            force_password_reset:
              description: 'If `true`, this customer will be forced to change password on next login.'
              type: boolean
        - properties:
            new_password:
              description: New password for customer. Write only field
              type: string
      type: object
    customerAuthentication_Base:
      title: customerAuthentication_Base
      example:
        force_password_reset: true
      type: object
      properties:
        force_password_reset:
          description: 'If `true`, this customer will be forced to change password on next login.'
          type: boolean
    addressType:
      title: addressType
      description: The address type. Residential or Commercial
      example: residential
      type: string
      enum:
        - residential
        - commercial
    Links:
      title: Links
      description: Pagination links for the previous and next parts of the whole collection.
      type: object
      properties:
        previous:
          description: Link to the previous page returned in the response.
          type: string
        current:
          description: Link to the current page returned in the response.
          type: string
        next:
          description: Link to the next page returned in the response.
          type: string
    Type:
      title: Type
      description: 'Attribute type should match one of: string, number, date. When doing a '
      example: string
      type: string
      enum:
        - string
        - number
        - date
    CustomerFormFieldValue:
      allOf:
        - type: object
          title: Form Field Value Base
          required:
            - name
            - value
          properties:
            name:
              type: string
              description: The form field name.
              example: color
            value:
              oneOf:
                - type: string
                  example: blue
                - type: number
                  format: double
                  example: 12.345
                - type: array
                  example:
                    - red
                    - green
                    - black
                  items:
                    type: string
        - type: object
          properties:
            customer_id:
              type: integer
          required:
            - customer_id
      title: Customer Form Field Value
    formFieldValue_Full:
      oneOf:
        - title: Customer Form Field Value
          type: object
          required:
            - customer_id
            - name
            - value
          properties:
            name:
              type: string
              description: The form field name.
              example: color
            value:
              oneOf:
                - type: string
                  example: blue
                - type: number
                  format: double
                  example: 12.345
                - type: array
                  example:
                    - red
                    - green
                    - black
                  items:
                    type: string
            customer_id:
              type: integer
        - title: Customer Address Form Field Value
          type: object
          required:
            - address_id
            - name
            - value
          properties:
            name:
              type: string
              description: The form field name.
              example: color
            value:
              oneOf:
                - type: string
                  example: blue
                - type: number
                  format: double
                  example: 12.345
                - type: array
                  example:
                    - red
                    - green
                    - black
                  items:
                    type: string
            address_id:
              type: integer
              description: The Customer Address ID.
      title: formFieldValue_Full
    consent_Full:
      title: consent_Full
      description: Response payload for the BigCommerce API.
      type: object
      properties:
        allow:
          type: array
          items:
            $ref: '#/components/schemas/consentAllow'
        deny:
          type: array
          items:
            $ref: '#/components/schemas/Deny'
        updated_at:
          description: The date of which the customer consent was last updated.
          type: string
          format: date-time
    DeclareCustomerConsentResponse:
      title: DeclareCustomerConsentResponse
      description: Response payload for the BigCommerce API.
      type: object
      properties:
        customer_id:
          description: Customer ID.
          type: object
        allow:
          type: array
          items:
            $ref: '#/components/schemas/consentAllow'
        deny:
          type: array
          items:
            $ref: '#/components/schemas/Deny'
        updated_at:
          description: The date of which the customer consent was last updated.
          type: string
          format: date-time
    consentAllow:
      title: consentAllow
      type: array
      uniqueItems: true
      minItems: 0
      items:
        type: string
        enum:
          - essential
          - functional
          - analytics
          - targeting
    Deny:
      title: Deny
      type: array
      uniqueItems: true
      minItems: 0
      items:
        type: string
        enum:
          - essential
          - functional
          - analytics
          - targeting
    DeclareCustomerConsentRequest:
      title: DeclareCustomerConsentRequest
      description: Request payload for the BigCommerce API.
      type: object
      properties:
        allow:
          type: array
          items:
            $ref: '#/components/schemas/consentAllow'
        deny:
          type: array
          items:
            $ref: '#/components/schemas/Deny'
    customer_Base:
      title: customer_Base
      type: object
      properties:
        email:
          description: The email of the customer. Must be unique.
          type: string
          minLength: 3
          maxLength: 255
        first_name:
          description: The first name of the customer.
          type: string
          minLength: 1
          maxLength: 100
        last_name:
          description: The last name of the customer.
          type: string
          minLength: 1
          maxLength: 100
        company:
          description: The company of the customer.
          type: string
          minLength: 0
          maxLength: 255
        phone:
          description: The phone number of the customer.
          type: string
          minLength: 0
          maxLength: 50
        notes:
          description: The customer notes.
          type: string
        tax_exempt_category:
          description: The tax exempt category code for the customer.
          type: string
          minLength: 0
          maxLength: 255
        customer_group_id:
          description: ID of the group which this customer belongs to.
          type: integer
          format: int32
    customerAttributes_Full:
      description: Array of customer attributes. Limited to 10
      type: array
      maxItems: 10
      items:
        title: Customer Attribute Value
        type: object
        properties:
          attribute_id:
            description: Attribute ID.
            type: integer
            format: int32
          value:
            description: 'Attribute value. This will always be a string, regardless of the attributes type.'
            type: string
            minLength: 0
            maxLength: 255
          id:
            description: Attribute value ID.
            type: integer
            format: int32
          customer_id:
            description: Customer ID.
            type: integer
            format: int32
          date_modified:
            description: The date on which the customer attribute value was modified.
            type: string
            format: date-time
          date_created:
            description: The date of which the customer attribute value was created.
            type: string
            format: date-time
        required:
          - attribute_id
          - value
          - customer_id
      title: customerAttributes_Full
    customerAttributes_Base:
      description: |-
        The `attributes` array for the `customer` object used in `POST` requests to `/customers`.

        Array of customer attributes. Limited to 10.
      type: array
      maxItems: 10
      title: customerAttributes_Base
      items:
        title: Customer Attribute Value
        type: object
        properties:
          attribute_id:
            description: Attribute ID.
            type: integer
            format: int32
          value:
            description: 'Attribute value. This will always be a string, regardless of the attributes type.'
            type: string
            minLength: 0
            maxLength: 255
        required:
          - attribute_id
          - value
    attribute_Base:
      type: object
      properties:
        name:
          description: Attribute name.
          type: string
          minLength: 1
          maxLength: 255
        type:
          title: Type
          description: 'Attribute type should match one of: string, number, date. When doing a'
          example: string
          type: string
          enum:
            - string
            - number
            - date
        id:
          description: Attribute ID.
          type: integer
          format: int32
        date_modified:
          description: The date on which the customer attribute was modified.
          type: string
          format: date-time
        date_created:
          description: The date of which the customer attribute was created.
          type: string
          format: date-time
      required:
        - name
        - type
        - id
      title: attribute_Base
    customerChannelIds:
      type: array
      title: customerChannelIds
      description: Array of channel ids the Customer has access to.
      items:
        type: integer
    CardInstrument:
      type: object
      properties:
        type:
          type: string
          description: Type of instrument
          enum:
            - stored_card
        token:
          type: string
          description: An identifier representing this stored instrument
          example: 84596bea275fa254da820056bdc3e495bdf01fd11c51b0336347d447ee16200c
        is_default:
          type: boolean
          description: Identifies whether this stored instrument is default for the customer
        brand:
          type: string
          description: Card brand
          example: VISA
        expiry_month:
          maximum: 12
          minimum: 1
          type: integer
          description: Expiry month for this card
        expiry_year:
          type: integer
          description: Expiry year for this card
        issuer_identification_number:
          type: string
          description: Issuer identification number for this card
          example: '411111'
        last_4:
          type: string
          description: Last four digits of this card
          example: '1111'
        billing_address:
          $ref: '#/components/schemas/BillingAddress'
      description: 'Details about a stored card instrument which includes details around billing, last 4 digits, issuer, etc.'
    PayPalAccountInstrument:
      type: object
      properties:
        type:
          type: string
          description: Instrument type
          enum:
            - stored_paypal_account
        token:
          type: string
          description: An identifier representing this stored instrument
          example: 84596bea275fa254da820056bdc3e495bdf01fd11c51b0336347d447ee16200c
        is_default:
          type: boolean
          description: Identifies whether this stored instrument is default for the customer
        email:
          type: string
          description: PayPal email address
          example: bc-buyer-paypal-express@bigcommerce.com
      description: A PayPal account stored instrument
    BankAccountInstrument:
      type: object
      properties:
        type:
          type: string
          description: Instrument type
          enum:
            - stored_bank_account
        token:
          type: string
          description: An identifier representing this stored instrument
          example: 84596bea275fa254da820056bdc3e495bdf01fd11c51b0336347d447ee16200c
        is_default:
          type: boolean
          description: Identifies whether this stored instrument is default for the customer
        masked_account_number:
          type: string
          description: A masked bank account number
          example: 12XXX56
        issuer:
          type: string
          description: Issuer identifier for the account
          example: DE001
      description: A stored bank account instrument
    BillingAddress:
      type: object
      properties:
        first_name:
          type: string
          description: First name of the card holder
          example: Tester
        last_name:
          type: string
          description: Last name of the card holder
          example: Tester
        email:
          type: string
          example: example@email.com
        company:
          type: string
          description: Company of the card holder
        address1:
          type: string
          example: 1 Sample Street
        address2:
          type: string
        city:
          type: string
        state_or_province:
          type: string
          description: Represents state or province
          example: Nevada
        state_or_province_code:
          type: string
          example: NV
        country_code:
          type: string
          description: ISO-3166-1 2 letter country code
          example: US
        phone:
          type: string
          example: 101-192-0293
        store_credit_amounts:
          $ref: '#/components/schemas/CustomerStoredCreditAmounts'
    CustomerStoredCreditAmounts:
      description: 'Store credit. '
      type: array
      format: double
      items:
        type: object
        properties:
          amount:
            type: number
            format: float
            example: 43.15
    CustomerSettingsObjet:
      description: |
        Customer Settings
      type: object
      properties:
        privacy_settings:
          type: object
          properties:
            ask_shopper_for_tracking_consent:
              type: boolean
            policy_url:
              type: string
        customer_group_settings:
          type: object
          properties:
            guest_customer_group_id:
              type: integer
            default_customer_group_id:
              type: integer
    CustomerChannelSettingsObject:
      description: |
        Customer Channel Settings
      type: object
      properties:
        privacy_settings:
          type: object
          properties:
            ask_shopper_for_tracking_consent:
              type: boolean
            policy_url:
              type: string
        customer_group_settings:
          type: object
          properties:
            guest_customer_group_id:
              type: integer
            default_customer_group_id:
              type: integer
        allow_global_logins:
          type: boolean
