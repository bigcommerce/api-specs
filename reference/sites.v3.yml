swagger: '2.0'
info:
  title: Sites
  version: ''
  description: |-
    Create and manage [sites](#sites) and [routes](#routes) for [headless storefront](https://support.bigcommerce.com/s/article/The-Headless-Approach#what-mean) sales [channels](https://developer.bigcommerce.com/api-reference/cart-checkout/channels-listings-api).

    - [Authentication](#authentication)
    - [Sites](#sites)
    - [Site routes](#site-routes)
    - [Route types](#route-types)
    - [Route variables](#route-variables)
    - [Additional Information](#additional-information)

    ## Authentication

    Authenticate requests by sending an [OAuth](https://developer.bigcommerce.com/api-docs/getting-started/authentication) `access_token` via `X-Auth-Token` HTTP header.

    ```http
    GET https://api.bigcommerce.com/stores/{{STORE_HASH}}/v3/sites
    Content-Type: application/json
    X-Auth-Token: {{ACCESS_TOKEN}}
    ```

    ### [OAuth Scopes](https://developer.bigcommerce.com/api-docs/getting-started/authentication/rest-api-authentication#oauth-scopes)

    | UI Name        | Permission | Parameter               |
    |----------------|------------|-------------------------|
    | Sites & Routes | modify     | `store_sites`           |
    | Sites & Routes | read-only  | `store_sites_read_only` |

    For more information on authenticating BigCommerce APIs, see [Authentication](https://developer.bigcommerce.com/api-docs/getting-started/authentication).

    ## [Sites](https://developer.bigcommerce.com/api-reference/cart-checkout/sites-routes-api/sites)

    Sites link [headless storefronts](https://developer.bigcommerce.com/api-docs/storefronts/developers-guide-headless) to sales [channels](https://developer.bigcommerce.com/api-reference/cart-checkout/channels-listings-api). To [create a site](https://developer.bigcommerce.com/api-reference/cart-checkout/sites-routes-api/sites/post-site), send a `POST` request to `/stores/{{STORE_HASH}}/v3/sites`.

    ```http
    POST https://api.bigcommerce.com/stores/{{STORE_HASH}}/v3/sites
    X-Auth-Token: {{ACCESS_TOKEN}}
    Content-Type: application/json
    Accept: application/json

    {
      "url": "http://store.example.com/",
      "channel_id": 5
    }
    ```

    [![Open in Request Runner](https://storage.googleapis.com/bigcommerce-production-dev-center/images/Open-Request-Runner.svg)](https://developer.bigcommerce.com/api-reference/cart-checkout/sites-routes-api/sites/post-site#requestrunner)

    **[Response:](https://developer.bigcommerce.com/api-reference/cart-checkout/sites-routes-api/sites/post-site#responses)**

    ```json
    {
      "id": 1,
      "url": "http://store.example.com/",
      "channel_id": 5,
      "created_at": "2018-01-04T04:15:50.000Z",
      "updated_at": "2018-01-04T04:15:50.000Z"
    }
    ```

    To [get a list of sites](https://developer.bigcommerce.com/api-reference/cart-checkout/sites-routes-api/sites/getsites), send a `GET` request to `/stores/{{STORE_HASH}}/v3/sites`.

    ```http
    GET https://api.bigcommerce.com/stores/{{STORE_HASH}}/v3/sites
    X-Auth-Token: {{ACCESS_TOKEN}}
    Accept: application/json
    ```

    [![Open in Request Runner](https://storage.googleapis.com/bigcommerce-production-dev-center/images/Open-Request-Runner.svg)](https://developer.bigcommerce.com/api-reference/cart-checkout/sites-routes-api/sites/getsites#requestrunner)

    ## [Site routes](https://developer.bigcommerce.com/api-reference/cart-checkout/sites-routes-api/site-routes)

    Site routes tell BigCommerce how to link to pages on a [headless storefront](https://developer.bigcommerce.com/api-docs/storefronts/developers-guide-headless). To [create a route](https://developer.bigcommerce.com/api-reference/cart-checkout/sites-routes-api/site-routes/post-site-route) for a [site](#sites), send a `POST` request to `/stores/{{STORE_HASH}}/v3/sites/{site_id}/routes`.

    ```http
    POST https://api.bigcommerce.com/stores/{{STORE_HASH}}/v3/sites/{site_id}/routes
    X-Auth-Token: {{ACCESS_TOKEN}}
    Content-Type: application/json
    Accept: application/json

    {
      "type": "product",
      "matching": "12",
      "route": "/en/product?id=12"
    }
    ```

    [![Open in Request Runner](https://storage.googleapis.com/bigcommerce-production-dev-center/images/Open-Request-Runner.svg)](https://developer.bigcommerce.com/api-reference/cart-checkout/sites-routes-api/site-routes/post-site-route#requestrunner)

    ## Route types

    The following route types are supported.

    | Type | Description |
    |-|-|
    |`account_new_return`|Route for shopper account page|
    |`account_order_status`|Route for shopper order status account page|
    |`cart`|Route to shopper's cart|
    |`checkout`|Route to checkout|
    |`create_account`|Route to the create a shopper account page|
    |`forgot_password`|Route to shopper forgot password page|
    |`home`|Route to headless storefront homepage|
    |`order_confirmation`|Route to the order confirmation page|
    |`product`|Route for product details pages |
    |`recover_abandoned_cart`|Route for URL in emails for a shopper to recover their abandoned cart|
    |`unsubscribe`|Route for unsubscribe URL in emails|

    ## Route variables

    The following route variables are supported

    |Variable|Description|
    |-|-|-|
    |`{id}`|The **ID** of the requested item|
    |`{slug}`|The **slug** for the requested item (if available). Note: the `slug` value may contain `/` slash|
    |`{lang}`|The **language** string that the client is using|

    **Example:**

    ```http
    POST https://api.bigcommerce.com/stores/{{STORE_HASH}}/v3/sites/{site_id}/routes
    X-Auth-Token: {{ACCESS_TOKEN}}
    Content-Type: application/json
    Accept: application/json

    {
      "type": "product",
      "matching": "*",
      "route": "/{lang}/{slug}?id={id}"
    }
    ```

    ## Additional Information

    ### Related resources
    * [Channels and Listings Reference](https://developer.bigcommerce.com/api-reference/cart-checkout/channels-listings-api)
    * [Channels Overview](https://developer.bigcommerce.com/api-docs/channels/overview)
    * [Building Headless Storefronts Guide](https://developer.bigcommerce.com/api-docs/storefronts/developers-guide-headless)
  contact: {}
host: api.bigcommerce.com
basePath: '/stores/{$$.env.store_hash}/v3'
paths:
  /sites:
    post:
      summary: Create a Site
      operationId: post-site
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/post_Site'
          x-examples:
            application/json:
              url: 'http://store.example.com/'
              channel_id: 2
      responses:
        '201':
          $ref: '#/responses/response_Site'
        '400':
          $ref: '#/responses/400_BadRequest'
        '403':
          $ref: '#/responses/403_Unauthorized'
        '404':
          $ref: '#/responses/404_NotFound'
        '502':
          description: ''
        '504':
          $ref: '#/responses/504_GatewayTimeout'
      tags:
        - Sites
      description: |-
        Create a site that links a [headless storefront](https://developer.bigcommerce.com/api-docs/storefronts/developers-guide-headless) to a sales [channel](https://developer.bigcommerce.com/api-reference/cart-checkout/channels-listings-api).

        - [Authorization](#authorization)
        - [Request Body](#request-body)
        - [Responses](#responses)
        - [Send a Test Request](#send-a-test-request)
    get:
      responses:
        '200':
          $ref: '#/responses/site_RespCollection'
      summary: Get Sites
      description: |-
        Get sites linked to a [headless storefront](https://developer.bigcommerce.com/api-docs/storefronts/developers-guide-headless) sales channels.

        - [Authorization](#authorization)
        - [Request Parameters](#request-parameters)
        - [Responses](#responses)
        - [Send a Test Request](#send-a-test-request)
      tags:
        - Sites
      parameters:
        - in: query
          name: page
          type: integer
          description: Specifies the page number in a limited (paginated) list of items.
        - in: query
          name: limit
          type: integer
          description: Controls the number of items per page in a limited (paginated) list of items.
  '/sites/{site_id}':
    get:
      summary: Get a Site
      operationId: get-site
      parameters:
        - name: site_id
          in: path
          required: true
          type: string
      responses:
        '200':
          $ref: '#/responses/response_Site'
      tags:
        - Sites
      description: |-
        Get a site with site ID `{site_id}`.

        - [Authorization](#authorization)
        - [Request Parameters](#request-parameters)
        - [Responses](#responses)
        - [Send a Test Request](#send-a-test-request)
      produces:
        - application/json
    put:
      summary: Update a Site
      operationId: put-site
      parameters:
        - name: site_id
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/put_Site'
          x-examples:
            application/json:
              url: 'https://remote-site.com/'
      responses:
        '200':
          $ref: '#/responses/response_Site'
      tags:
        - Sites
      consumes:
        - application/json
      produces:
        - application/json
      description: |-
        Update a site with site ID `{site_id}`.

        - [Authorization](#authorization)
        - [Request Parameters](#request-parameters)
        - [Request Body](#request-body)
        - [Responses](#responses)
        - [Send a Test Request](#send-a-test-request)
    delete:
      summary: Delete a Site
      operationId: delete-site
      parameters:
        - name: site_id
          in: path
          required: true
          type: string
      responses:
        '204':
          description: ''
          examples: {}
      tags:
        - Sites
      description: |-
        Delete a site with site ID `{site_id`}.

        - [Authorization](#authorization)
        - [Request Parameters](#request-parameters)
        - [Responses](#responses)
        - [Send a Test Request](#send-a-test-request)
  '/sites/{site_id}/routes':
    parameters:
      - name: site_id
        in: path
        type: string
        required: true
    get:
      summary: Get a Site's Routes
      operationId: index-site-routes
      parameters:
        - name: site_id
          in: path
          required: true
          type: string
        - name: type
          in: query
          description: Filter routes by a given resource type
          type: string
        - type: integer
          in: query
          name: page
          description: Specifies the page number in a limited (paginated) list of items.
        - type: integer
          in: query
          name: limit
          description: Controls the number of items per page in a limited (paginated) list of items.
      responses:
        '200':
          description: ''
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/siteRoute_Full'
              meta:
                $ref: '#/definitions/_metaCollection'
          examples:
            application/json:
              data:
                - id: 1
                  type: product
                  matching: '5'
                  route: '/products?id={id}'
                - id: 2
                  type: category
                  matching: '44'
                  route: '/category/{slug}'
              meta:
                pagination:
                  total: 1
                  count: 1
                  per_page: 50
                  current_page: 1
                  total_pages: 1
      tags:
        - Site Routes
      description: |-
        Get a site's routes.

        - [Authorization](#authorization)
        - [Request Parameters](#request-parameters)
        - [Request Body](#request-body)
        - [Responses](#responses)
        - [Send a Test Request](#send-a-test-request)
    post:
      summary: Create a Site Route
      operationId: post-site-route
      parameters:
        - name: site_id
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/siteRoute_Base'
          x-examples:
            application/json:
              type: returns
              matching: '5'
              route: /my-amazing-product
      responses:
        '201':
          $ref: '#/responses/siteRoute_Resp'
        '422':
          $ref: '#/responses/ErrorResponse'
        '502':
          $ref: '#/responses/502_GatewayError'
      tags:
        - Site Routes
      description: |-
        Create routes that tell BigCommerce how to link to pages on a [headless storefront](https://developer.bigcommerce.com/api-docs/storefronts/developers-guide-headless).

        - [Usage notes](#usage-notes)
        - [Authorization](#authorization)
        - [Request Parameters](#request-parameters)
        - [Request Body](#request-body)
        - [Responses](#responses)
        - [Send a Test Request](#send-a-test-request)

        ## Usage Notes
        * For a list of supported route types, see [Route types](https://developer.bigcommerce.com/api-reference/store-management/sites#route-types).
    put:
      responses:
        '200':
          description: ''
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/siteRoute_Full'
              meta:
                $ref: '#/definitions/_metaCollection'
          examples:
            application/json:
              data:
                - id: 123
                  type: brand
                  matching: '5'
                  route: /my-amazing-product
                - id: 345
                  type: blog
                  matching: '5'
                  route: /my-amazing-product
                - id: 234
                  type: returns
                  matching: '5'
                  route: /my-amazing-product
              meta:
                pagination:
                  total: 80
                  count: 50
                  per_page: 50
                  current_page: 50
                  total_pages: 2
                  links:
                    current: '?page=1&limit=50'
                    next: '?page=2&limit=50'
        '422':
          $ref: '#/responses/BulkErrorResponse'
      description: |-
        Upsert routes for site with ID `{site_id}`.

        - [Usage notes](#usage-notes)
        - [Authorization](#authorization)
        - [Request Parameters](#request-parameters)
        - [Request Body](#request-body)
        - [Responses](#responses)
        - [Send a Test Request](#send-a-test-request)

        ## Usage Notes
        * `id` is required when updating an existing route.
      summary: Update Site's Routes
      parameters:
        - in: body
          name: body
          schema:
            type: array
            items:
              $ref: '#/definitions/siteRoute_Full'
          x-examples:
            application/json:
              - id: 1
                type: product
                matching: '*'
                route: '/products/{id}'
              - type: product
                matching: '10'
                route: '/products?id={id}'
        - in: path
          name: site_id
          type: integer
          required: true
      tags:
        - Site Routes
  '/sites/{site_id}/routes/{route_id}':
    get:
      summary: Get a Site Route
      operationId: get-site-route
      parameters:
        - name: site_id
          in: path
          required: true
          type: string
        - name: route_id
          in: path
          required: true
          type: string
      responses:
        '200':
          description: ''
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/siteRoute_Full'
              meta:
                type: object
          examples:
            application/json:
              data:
                id: 60474753
                type: checkout
                matching: '5'
                route: /my-amazing-product
              meta: {}
      tags:
        - Site Routes
      description: |-
        Get a site's route.

        - [Authorization](#authorization)
        - [Request Parameters](#request-parameters)
        - [Responses](#responses)
        - [Send a Test Request](#send-a-test-request)
    put:
      summary: Update a Site Route
      operationId: put-site-route
      parameters:
        - name: site_id
          in: path
          required: true
          type: string
        - name: route_id
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/siteRoute_Full'
          x-examples:
            application/json:
              - id: 1
                type: product
                matching: '*'
                route: '/products/{id}'
              - id: 2
                type: product
                matching: '10'
                route: '/products?id={id}'
      responses:
        '201':
          $ref: '#/responses/siteRoute_Resp'
      tags:
        - Site Routes
      description: |
        Update a site's route.

        - [Authorization](#authorization)
        - [Request Parameters](#request-parameters)
        - [Request Body](#request-body)
        - [Responses](#responses)
        - [Send a Test Request](#send-a-test-request)
    delete:
      summary: Delete a Site Route
      operationId: delete-route
      parameters:
        - name: site_id
          in: path
          required: true
          type: string
        - name: route_id
          in: path
          required: true
          type: string
      responses:
        '204':
          description: ''
          examples: {}
      tags:
        - Site Routes
      description: |-
        Delete a site's route.
         
        - [Authorization](#authorization)
        - [Request Parameters](#request-parameters)
        - [Responses](#responses)
        - [Send a Test Request](#send-a-test-request)
definitions:
  _metaCollection:
    $ref: ./BigCommerce_All_Common.oas2.yml#/definitions/metaCollection_Full
  siteRoute_Full:
    title: siteRoute_Full
    description: Route object used in responses.
    allOf:
      - type: object
        properties:
          id:
            type: integer
            description: Unique ID for this route. Required when updating an existing route
      - $ref: '#/definitions/siteRoute_Base'
  put_Site:
    type: object
    properties:
      url:
        type: string
        description: The Fully Qualified URL (including host and scheme) where this site is hosted. All URLs generated for this site will be appended to this.
        example: 'http://kittens.mybigcommerce.com/'
    title: put_Site
  _site:
    type: object
    properties:
      id:
        type: integer
      url:
        type: string
        description: The Fully Qualified URL (including host and scheme) where this site is hosted. All URLs generated for this site will be appended to this.
        example: 'http://kittens.mybigcommerce.com/'
      channel_id:
        type: integer
        description: 'The channel this site is attached to. Each site belongs to a single channel, and each channel can have either zero or one sites.'
      created_at:
        type: string
        description: When was this site created? RFC 3339
        example: '2018-01-04T04:15:50.000Z'
      updated_at:
        type: string
        description: When was this site defintion last updated? RFC 3339
        example: '2018-01-04T04:15:50.000Z'
      routes:
        type: array
        description: (optional - if included) collection of routes defined for this site. Limited to 200 routes side loaded (query routes direction via `/routes` for bulk)
        items:
          $ref: '#/definitions/siteRoute_Full'
    title: _site
  _metaEmpty:
    type: object
    description: Empty meta object; may be used later.
    title: _metaEmpty
  _pagination:
    type: object
    description: |
      Data about the response, including pagination and collection totals.
    properties:
      total:
        type: integer
        description: |
          Total number of items in the result set.
      count:
        type: integer
        description: |
          Total number of items in the collection response.
      per_page:
        type: integer
        description: |
          The amount of items returned in the collection per page, controlled by the limit parameter.
      current_page:
        type: integer
        description: |
          The page you are currently on within the collection.
      total_pages:
        type: integer
        description: |
          The total number of pages in the collection.
      links:
        type: object
        description: |
          Pagination links for the previous and next parts of the whole collection.
        properties:
          previous:
            type: string
            description: |
              Link to the previous page returned in the response.
          current:
            type: string
            description: |
              Link to the current page returned in the response.
          next:
            type: string
            description: |
              Link to the next page returned in the response.
    title: _pagination
  _errors:
    type: object
    description: The keys and values in an errors object will vary depending on the error received.
    title: _errors
  error_Full:
    type: object
    title: error_Full
    properties:
      status:
        description: |
          The HTTP status code.
        type: integer
      title:
        description: |
          The error title describing the particular error.
        type: string
      type:
        type: string
  errorDetailed_Full:
    type: object
    properties:
      errors:
        type: object
        additionalProperties:
          type: string
        title: DetailedErrors
    title: errorDetailed_Full
  post_Site:
    type: object
    properties:
      url:
        type: string
        description: The Fully Qualified URL (including host and scheme) where this site is hosted. All URLs generated for this site will be appended to this.
        example: 'http://kittens.mybigcommerce.com/'
      channel_id:
        type: integer
        description: 'The channel this site is attached to. Each site belongs to a single channel, and each channel can have either zero or one sites.'
    title: post_Site
  siteRoute_Base:
    type: object
    title: siteRoute_Base
    properties:
      type:
        type: string
        description: 'The type of resource being routed to; [supported types](https://developer.bigcommerce.com/api-reference/cart-checkout/sites-routes-api#route-types).'
        enum:
          - product
          - brand
          - category
          - page
          - blog
          - home
          - cart
          - checkout
          - search
          - account
          - login
          - returns
          - static
      matching:
        type: string
        description: |-
          (entity_id?) For a given type, which resources should match this route? e.g For a route with the type: "product" and matching: "5" this route would be used for the product with the ID of 5.

          Depending on the type of resource, this may be an ID (matching a specific item), or a "*" wildcard matching all items of that type.
        example: '5'
      route:
        type: string
        description: |-
          The route template that will be used to generate the URL for the requested resource.

          Supports several tokens:
          - `{id}` The **ID** of the requested item
          - `{slug}` The **slug** for the requested item (if available). Note: the `slug` value may contain `/` slash
          - `{language}` The **language** string that the client is using
        example: /my-amazing-product
tags:
  - name: Sites
    description: 'Enables creation and management of external sites (domains) where shoppers shop. Allows for the correct shopping experience to be delivered and maintained (i.e. redirect URLs, email links) when a shopper goes through the purchasing process.'
  - name: Site Routes
securityDefinitions:
  X-Auth-Token:
    type: apiKey
    in: header
    name: X-Auth-Token
    description: |-
      ```http
      GET https://api.bigcommerce.com/stores/{{STORE_HASH}}/v3/sites
      Content-Type: application/json
      X-Auth-Token: {{ACCESS_TOKEN}}
      ```

      |Header|Description|
      |-|-|
      |`X-Auth-Token`|An [OAuth](https://developer.bigcommerce.com/api-docs/getting-started/authentication/rest-api-authentication) `access_token`|

      ### [OAuth Scopes](https://developer.bigcommerce.com/api-docs/getting-started/authentication/rest-api-authentication#oauth-scopes)

      |  **UI Name** | **Permission** | **Parameter** |
      | --- | --- | --- |
      |  Channel Listings | modify | `store_channel_listings` |
      |  Channel Listings | read-only | `store_channel_listings_read_only` |
      |  Channel Settings | modify | `store_channel_settings` |
      |  Channel Settings | read-only | `store_channel_settings_read_only` |
      |  Sites & Routes | modify | `store_sites` |
      |  Sites & Routes | read-only | `store_sites_read_only` |
security:
  - X-Auth-Client: []
  - X-Auth-Token: []
parameters: {}
responses:
  502_GatewayError:
    description: 'If something happens during the request that causes it to fail, a 502 response will be returned. A new request should be made; however, it could fail.'
    schema:
      $ref: '#/definitions/error_Full'
    examples: {}
  504_GatewayTimeout:
    description: 'If this occurs, you should retry the request. Typically retrying the request several times will result in a successful request; However, if you are unable to successfully make a request, please check the BigCommerce system status [here](https://status.bigcommerce.com/). A service is likely down and the request will need to be made again when it is back up (in several hours usually)'
    schema:
      $ref: '#/definitions/error_Full'
    examples:
      application/json:
        status: 504
        title: Gateway Timeout
        type: 'https://developer.bigcommerce.com/api-docs/getting-started/api-status-codes'
        errors: {}
  403_Unauthorized:
    description: ''
    schema:
      $ref: '#/definitions/error_Full'
    examples:
      application/json:
        status: 403
        title: Unauthorized Access. You do not have permission to make this request.
        type: 'https://developer.bigcommerce.com/api-docs/getting-started/api-status-codes'
  400_BadRequest:
    description: |-
      Malformed request syntax. Typically need to fix the JSON
      Body to resend successfully.
    schema:
      $ref: '#/definitions/error_Full'
    examples:
      application/json:
        status: 400
        title: Input is invalid.
        type: 'https://developer.bigcommerce.com/api-docs/getting-started/api-status-codes'
  404_NotFound:
    description: Requested resource not founded.
    schema:
      $ref: '#/definitions/error_Full'
    examples: {}
  422_UnprocessableEntity:
    description: This occurs when missing or unacceptable data is passed for one or more fields. Please correct the values for the fields listed in the errors object.
    schema:
      $ref: '#/definitions/errorDetailed_Full'
    examples:
      application/json:
        status: 422
        title: JSON data is missing or invalid
        type: 'https://developer.bigcommerce.com/api-docs/getting-started/api-status-codes'
        errors: {}
  503_ServiceUnavailable:
    description: 'If this occurs, you should retry the request. If you are unable to successfully make a request, please check the BigCommerce system status [here](https://status.bigcommerce.com/). A service is likely down and the request will need to be made again when it is back up (in several hours usually)'
    schema:
      $ref: '#/definitions/error_Full'
    examples:
      application/json:
        status: 503
        title: Service Unavailable
        type: 'https://developer.bigcommerce.com/api-docs/getting-started/api-status-codes'
  response_Site:
    description: ''
    examples:
      application/json:
        data:
          id: 1
          url: 'https://www.my-awesome-site.com'
          channel_id: 18735
          created_at: '2019-08-05T18:26:21Z'
          updated_at: '2019-08-05T18:26:21Z'
        meta: {}
    schema:
      type: object
      properties:
        data:
          $ref: '#/definitions/_site'
        meta:
          $ref: '#/definitions/_metaEmpty'
  BulkErrorResponse:
    description: ''
    schema:
      type: object
      properties:
        status:
          type: integer
          description: The HTTP status code.
        title:
          type: string
        errors:
          $ref: '#/definitions/_errors'
        meta:
          $ref: '#/definitions/_metaEmpty'
        type:
          type: string
    examples:
      application/json:
        meta:
          saved_records: 0
        title: Bulk operation has failed
        type: 'https://developer.bigcommerce.com/api-docs/getting-started/api-status-codes'
        errors:
          0.matching.type: Route already exists for site 1 matching 5 for type product
          1.matching.type: Route already exists for site 1 matching * for type home
        status: 422
  ErrorResponse:
    description: ''
    schema:
      type: object
      properties:
        title:
          type: string
          description: General error message
        status:
          type: string
          description: HTTP status code
        errors:
          $ref: '#/definitions/_errors'
        type:
          type: string
    examples:
      application/json:
        status: 422
        title: JSON data is missing or invalid
        type: 'https://developer.bigcommerce.com/api-docs/getting-started/api-status-codes'
        errors:
          matching: error.path.missing
  site_RespCollection:
    description: ''
    schema:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/definitions/_site'
        meta:
          $ref: '#/definitions/_metaCollection'
    examples:
      application/json:
        data:
          - channel_id: 16905
            created_at: '2019-05-14T15:43:11Z'
            id: 1
            updated_at: '2019-12-09T23:19:59Z'
            url: 'https://2wy5z.csb.app'
        meta:
          pagination:
            limit: 50
            offset: 0
            total_items: 1
  siteRoute_Resp:
    description: ''
    schema:
      type: object
      properties:
        data:
          $ref: '#/definitions/siteRoute_Full'
        meta:
          type: object
    examples:
      application/json:
        data:
          id: 123
          type: checkout
          matching: '5'
          route: /my-amazing-product
        meta: {}
schemes:
  - https
consumes:
  - application/json
produces:
  - application/json
x-stoplight:
  docs:
    includeDownloadLink: true
    showModels: false
