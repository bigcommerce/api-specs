swagger: '2.0'
info:
  version: ''
  title: Shipping V3
  description: V3 REST API shipping endpoints.
host: api.bigcommerce.com
basePath: '/stores/{$$.env.store_hash}/v3'
schemes:
  - https
consumes:
  - application/json
produces:
  - application/json
paths:
  /shipping/products/customs-information:
    get:
      responses:
        '200':
          description: ''
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/customsInformation'
              meta:
                $ref: '#/definitions/metaCollection'
      description: |-
        Get customs information for products.

        ## Examples

        This list can be filtered to return customs information objects specific to a list of requested product_ids. This is achieved by appending the query string **?product_id:in=4,5,6** to the resource **/shipping/products/customs-information**.

        ```http
        GET /shipping/products/customs-information?product_id:in=4,5,6
        ```
      tags:
        - Products
      summary: Get Customs Information
      parameters:
        - in: header
          name: Accept
          type: string
          default: application/json
        - in: header
          name: Content-Type
          type: string
          default: application/json
        - in: query
          name: 'product_id:in'
          type: array
          items:
            type: integer
          description: 'A coma separated list of product IDs. For more information, see [Filtering](https://developer.bigcommerce.com/api-docs/getting-started/filtering)'
        - in: query
          name: page
          type: integer
        - in: query
          name: limit
          type: integer
    delete:
      responses:
        '204':
          description: ''
      summary: Delete Customs Information
      description: |-
        Deletes customs information objects for a product.

        ## Example

        This is a batch operation. The `product_id` query parameter is required.

        ```http
        DELETE /shipping/products/customs-information?product_id:in=4,5,6
        ```
      tags:
        - Products
      parameters:
        - in: header
          name: Accept
          type: string
          default: application/json
        - in: header
          name: Content-Type
          type: string
          default: application/json
        - in: query
          name: 'product_id:in'
          type: array
          items:
            type: integer
          required: true
    put:
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              $ref: '#/definitions/customsInformation'
      summary: Upsert Customs Information
      description: |-
        Creates and update product customs information.

        This is a batch operation where the creation of multiple customs information objects can be done with one `PUT` request.

        ## Limits
        * Limit of 50 customs information objects per `PUT` request.
      tags:
        - Products
      parameters:
        - in: body
          name: body
          schema:
            $ref: ./shipping.v2.yml#/definitions/customsInformation
          x-examples:
            Example:
              product_id: 77
              country_of_origin: US
              commodity_description: Baseball caps
              international_shipping: true
              hs_codes:
                CA: '508313'
                AU: '817355'
                ALL: '501000'
definitions:
  shippingMethod_Full:
    title: shippingMethod_Full
    allOf:
      - type: object
        properties:
          id:
            description: Shipping-method ID. READ-ONLY
            example: 1
            type: integer
      - $ref: '#/definitions/shippingMethod_Base'
  shippingMethod_Base:
    title: shippingMethod_Base
    type: object
    properties:
      name:
        description: Display name for shipping method.
        example: Flat Rate
        type: string
      type:
        title: Shipping Method Type
        example: perorder
        x-enum-elements:
          - name: perorder
            description: ''
          - name: peritem
            description: ''
          - name: weight
            description: ''
          - name: total
            description: ''
          - name: auspost
            description: ''
          - name: canadapost
            description: ''
          - name: endicia
            description: ''
          - name: usps
            description: ''
          - name: fedex
            description: ''
          - name: royalmail
            description: ''
          - name: upsready
            description: ''
        type: string
        enum:
          - perorder
          - peritem
          - weight
          - total
          - auspost
          - canadapost
          - endicia
          - usps
          - fedex
          - royalmail
          - upsready
      settings:
        description: 'Depends on the shipping-method type. See the [supported settings object](#supported-settings).'
        type: object
        properties:
          rate:
            type: number
            description: 'Flat rate per order. '
            example: 7
      enabled:
        description: Whether or not this shipping-zone method is enabled.
        example: true
        type: boolean
      handling_fees:
        type: object
        enum:
          - fixed_surcharge
          - percentage_surcharge
        example: percentage_surcharge
        description: |-
          `fixed_surcharge`: flat-rate handling fee applied to shipping cost.

          `percentage_surcharge`: percentage handling fee applied to shipping cost
      is_fallback:
        description: Whether or not this shipping zone is the fallback if all others are not valid for the order.
        example: false
        type: boolean
  customsInformation:
    title: customsInformation
    description: Data about the customs information object.
    type: object
    minProperties: 5
    maxProperties: 5
    properties:
      product_id:
        description: The id of the product which the customs information data will apply to.
        type: integer
        format: int32
        example: 77
      country_of_origin:
        description: 'The country of manufacture, production, or growth represented in ISO 3166-1 alpha-2 format.'
        type: string
        pattern: '^[A-Z]{2}$'
        minLength: 2
        maxLength: 2
        example: US
      commodity_description:
        description: Description that provides information for customs to identify and verify shapes physical characteristics and packaging of each shipment.
        type: string
        minLength: 0
        maxLength: 100
        example: Baseball caps
      international_shipping:
        description: Flag to determine whether this product will be shipped internationally
        type: boolean
        enum:
          - true
          - false
        example: true
      hs_codes:
        $ref: '#/definitions/harmonizedSystemCodes'
  harmonizedSystemCodes:
    title: harmonizedSystemCodes
    description: |-
      Key value pair commonly used in the form of **countryISO2:'/^[0-9A-Za-z]{6,14}$/'**. This is to represent a country and the associated hs code that applies to that country. Eg {"US":"508313","AU":"850610"}.

      There is a special value of **'ALL'** which can be used in place of the countryISO2 to represent that the hs code applies to all countries. Eg {"ALL":"634000"}. This can be combined with other countries in the hs codes object. For Eg {"All":"640000", "US":"641000"}
    type: object
    example:
      CA: '508313'
      AU: '817355'
      ALL: '501000'
  metaCollection:
    title: metaCollection
    description: Meta data relating to pagination
    type: object
    properties:
      pagination:
        type: object
        properties:
          total:
            type: integer
            description: Total number of items returned.
            example: 3
          count:
            type: integer
            description: Number of items returned on per page.
            example: 1
          per_page:
            type: integer
            description: Number of items to be displayed per page.
            example: 1
          current_page:
            type: integer
            description: Current page number.
            example: 2
          total_page:
            type: integer
            description: Total number of pages.
            example: 3
          links:
            type: object
            properties:
              previous:
                type: string
                description: Query string appended to the resource to return to the previous page.
                example: '?limit=1&page=1'
              next:
                type: string
                description: Query string appended to the resource to proceed to the next page.
                example: '?limit=1&page=3'
              current:
                type: string
                description: Query string appended to the resource to show the current page.
                example: '?limit=1&page=2'
  error_Full:
    title: Error
    description: Meta data relating to pagination
    type: object
tags:
  - name: Shipping Method
  - name: Shipping Carrier
  - name: Shipping Zones
  - name: Shipping Products Custom Information
  - name: Products
securityDefinitions:
  X-Auth-Token:
    type: apiKey
    name: X-Auth-Token
    in: header
    description: |-
      ### OAuth Scopes
      |  **UI Name** | **Permission** | **Parameter** |
      | --- | --- | --- |
      |  Information & Settings | modify | `store_v2_information` |
      |  Information & Settings | read-only | `store_v2_information_read_only` |

      ### Headers

      |Header|Parameter|Description|
      |-|-|-|
      |`X-Auth-Token`|`access_token `|Obtained by creating an API account or installing an app in a BigCommerce control panel.|

      ### Example

      ```http
      GET /stores/{$$.env.store_hash}/v3/catalog/summary
      host: api.bigcommerce.com
      Content-Type: application/json
      X-Auth-Token: {access_token}
      ```

      * For more information on Authenticating BigCommerce APIs, see: [Authentication](https://developer.bigcommerce.com/api-docs/getting-started/authentication).
security:
  - X-Auth-Client: []
  - X-Auth-Token: []
x-stoplight:
  docs:
    includeDownloadLink: true
    showModels: false
parameters:
  product_id:
    in: query
    type: array
    name: product_id
    items:
      type: integer
    format: int32
responses:
  502_GatewayError:
    description: 'If something happens during the request that causes it to fail, a 502 response will be returned. A new request should be made; however, it could fail.'
    schema:
      $ref: '#/definitions/error_Full'
    examples:
      application/json:
        status: 502
        title: A login URL could not be generated. Please try another request.
        type: 'https://developer.bigcommerce.com/api#api-status-codes'
        errors: {}
  504_GatewayTimeout:
    description: 'If this occurs, you should retry the request. Typically retrying the request several times will result in a successful request; However, if you are unable to successfully make a request, please check the BigCommerce system status [here](https://status.bigcommerce.com/). A service is likely down and the request will need to be made again when it is back up (in several hours usually)'
    schema:
      $ref: '#/definitions/error_Full'
    examples:
      application/json:
        status: 504
        title: Gateway Timeout
        type: 'https://developer.bigcommerce.com/api#api-status-codes'
        errors: {}
  403_Unauthorized:
    description: Returned when permissions do not allow the operation.
    schema:
      $ref: '#/definitions/error_Full'
    examples:
      application/json:
        status: 403
        title: Unauthorized Access. You do not have permission to make this request.
        type: 'https://developer.bigcommerce.com/api-docs/getting-started/api-status-codes'
        errors: {}
  400_BadRequest:
    description: 'Invalid syntax, required data missing, `content-type` header missing; Double-check request body for syntax errors and missing data; check `content-type` header.'
    schema:
      $ref: '#/definitions/error_Full'
    examples:
      application/json:
        status: 400
        title: Input is invalid.
        type: 'https://developer.bigcommerce.com/api#api-status-codes'
        errors: {}
  404_NotFound:
    description: 'If the requested account resource is not found for the franchise, return a 404 Not Found.'
    schema:
      $ref: '#/definitions/error_Full'
    examples:
      application/json:
        status: 404
        title: 'Account with {id} not found'
        type: 'https://developer.bigcommerce.com/api#api-status-codes'
        errors: {}
  422_UnprocessableEntity:
    description: This occurs when missing or unacceptable data is passed for one or more fields. Please correct the values for the fields listed in the errors object.
    schema:
      $ref: '#/definitions/error_Full'
    examples:
      application/json:
        status: 422
        title: JSON data is missing or invalid
        type: 'https://developer.bigcommerce.com/api#api-status-codes'
        errors: {}
  503_ServiceUnavailable:
    description: |-
      If this occurs, you should retry the request. If you are unable to successfully make a request, please check the BigCommerce system status [here](https://status.bigcommerce.com/). A service is likely down and the request will need to be made again when it is back up (in several hours usually)

      Occurs hen the store is down for maintenance, being upgraded to a new version, or is suspended due to administrative action or a billing issue.
    schema:
      $ref: '#/definitions/error_Full'
    examples:
      application/json:
        status: 503
        title: Service Unavailable
        type: 'https://developer.bigcommerce.com/api#api-status-codes'
        errors: {}
  401_Unauthorized:
    description: API credentials are missing or invalid; Double-check the `access_token` and `client_id`.
    schema:
      $ref: '#/definitions/error_Full'
  415_Unsupported:
    description: Request headers specify an unsupported `content-type` (or header is missing). Double-check `content-type` request header.
    schema:
      $ref: '#/definitions/error_Full'
  429_Too_Many_Requests:
    description: 'When an OAuth client exceeds the [rate limit](https://developer.bigcommerce.com/api-docs/getting-started/best-practices#api-rate-limits) for API requests to a store..'
    schema:
      $ref: '#/definitions/error_Full'
  405_Method_Not_Allowed:
    description: 'The resource was found, but doesn''t support the request method. Issued when either a specific method isn''t yet implemented on a resource, or the resource doesn''t support the method at all. For example, a `PUT` on `/orders` is invalid, but a PUT on `/orders/{order_id}` is valid.'
    schema:
      $ref: '#/definitions/error_Full'
    examples: {}
  500_Internal_Server_Error:
    description: 'Expensive API calls or an internal server error in BigCommerce; Re-attempt the request three to five times, with increasing delays of at least a minute between attempts.'
    schema:
      $ref: '#/definitions/error_Full'
