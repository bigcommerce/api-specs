swagger: '2.0'
info:
  title: Widgets
  version: ''
  description: |-
    Create and manage widget templates, widgets, regions, and placements.

    - [Authentication](#authentication)
    - [Subresources](#subresources)
    - [Additional Information](#additional-information)

    ## Authentication

    [Authenticate](https://developer.bigcommerce.com/api-docs/getting-started/authentication) requests by including an OAuth `access_token` in the request header.

    ```http
    GET https://api.bigcommerce.com/stores/{{STORE_HASH}}/v3/{{ENDPOINT}}
    Content-Type: application/json
    X-Auth-Token: {{ACCESS_TOKEN}}
    ```

    ### OAuth scopes
    |  **UI Name** | **Permission** | **Parameter** |
    | --- | --- | --- |
    |  Content | modify | `store_v2_content` |
    |  Content | read-only | `store_v2_content_read_only` |

    For more information on OAuth scopes, see [Authenticating BigCommerce's REST APIs](https://developer.bigcommerce.com/api-docs/getting-started/authentication/rest-api-authentication#oauth-scopes).

    ## Subresources

    ### Widget templates
    [Widget templates](https://developer.bigcommerce.com/api-reference/store-management/widgets/widget-template/getwidgettemplates) are reusable Handlebars-enabled HTML templates that define the structure of the widget on a page.

    ### Widgets
    [Widgets](https://developer.bigcommerce.com/api-reference/store-management/widgets/widget/getwidgets) are units of content placed on specific pages in a Stencil theme. Widgets consist of a widget configuration and a widget template UUID and render as part of the storefrontâ€™s HTML.

    ### Regions
    [Regions](https://developer.bigcommerce.com/api-reference/store-management/widgets/regions/getcontentregions) are specific locations in the Stencil theme template files where you can place a widget.

    ### Placements
    [Placements](https://developer.bigcommerce.com/api-reference/store-management/widgets/placement/getplacements) determine the region where you place widgets and in what order.

    ## Additional Information

    * [Widgets API Overview](https://developer.bigcommerce.com/api-docs/store-management/widgets/overview)
    * [Widget UI Schema](https://developer.bigcommerce.com/stencil-docs/page-builder/widget-ui-schema)
    * [Widget UI Input Types](https://developer.bigcommerce.com/stencil-docs/page-builder/schema-settings)
  termsOfService: ''
host: api.bigcommerce.com
basePath: '/stores/{$$.env.store_hash}/v3'
tags:
  - name: Regions
  - name: Widget Template
    description: BigCommerce Widget Templates API Definition.
  - name: Widget
    description: BigCommerce Widgets API Definition.
  - name: Placement
    description: BigCommerce Placements API Definition.
  - name: Layout
    description: BigCommerce Layouts API Definition.
schemes:
  - https
produces:
  - application/json
consumes:
  - application/json
paths:
  /content/widget-templates:
    post:
      tags:
        - Widget Template
      summary: Create a Widget Template
      operationId: createWidgetTemplate
      parameters:
        - name: templateBody
          in: body
          required: true
          schema:
            $ref: '#/definitions/widgetTemplate_Post'
          x-examples:
            application/json: |-
              {
                "name": "Header Images",
                "template": "{{#each images}}<a href='{{image_url}}'><img src={{image_source}} style='width:33.3%'/></a>{{/each}}"
              }
            Custom Configuration Widget: |-
              {
                "name":"Header Images",
                "template":"{{#each images}}<a href='{{link}}'><img src={{imageUrl.src}} style='width:33.3%'/></a>{{/each}}",
                "schema":[
                  {
                    "type":"array",
                    "label":"Images",
                    "id":"images",
                    "defaultCount":3,
                    "entryLabel":"Image",
                    "thumbnail":"imageUrl.src",
                    "schema":[
                      {
                        "type":"tab",
                        "label":"Content",
                        "sections":[
                          {
                            "settings":[
                              {
                                "type":"imageManager",
                                "id":"imageUrl",
                                "default":{
                                  "src":"https://cdn11.bigcommerce.com/s-n0i50vy/images/stencil/1280x1280/products/109/361/kinfolkessentialissue_1024x1024__22507.1456436715.jpg?c=2&imbypass=on",
                                  "type":"IMAGE_MANAGER"
                                  }
                                  },
                                  {
                                    "label":"Link",
                                    "type":"input",
                                    "id":"link",
                                    "default":"#"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
        - name: Accept
          in: header
          type: string
          default: application/json
        - in: header
          type: string
          default: application/json
          name: Content-Type
      responses:
        '200':
          $ref: '#/responses/WidgetTemplate_Resp'
        '422':
          $ref: '#/responses/Error422_Resp'
      description: |-
        Creates a **Widget Template**.

        ***Note:*** *There is a limit of 100 custom widget templates per store.*

        **Required Fields**
        * name
        * template
    get:
      tags:
        - Widget Template
      operationId: getWidgetTemplates
      parameters:
        - name: page
          description: |
            Specifies the page number in a limited (paginated) list of products.
          required: false
          in: query
          type: integer
        - name: limit
          description: |
            Controls the number of items per page in a limited (paginated) list of products.
          required: false
          in: query
          type: integer
        - in: query
          name: widget_template_kind
          description: The kind of widget template.
          type: string
          required: false
        - name: Accept
          in: header
          type: string
          default: application/json
        - in: header
          type: string
          default: application/json
          name: Content-Type
        - type: integer
          in: query
          name: channel_id
          description: Filter items by channel_id.
      responses:
        '200':
          $ref: '#/responses/WidgetTemplateCollection_Resp'
        '422':
          $ref: '#/responses/Error422_Resp'
      description: Returns a list of **Widget Templates**.
      summary: Get All Widget Templates
  '/content/widget-templates/{uuid}':
    get:
      tags:
        - Widget Template
      summary: Get a Widget Template
      operationId: getWidgetTemplate
      parameters:
        - name: uuid
          description: The identifier for a specific template.
          required: true
          in: path
          type: string
          format: uuid
        - name: Accept
          in: header
          type: string
          default: application/json
        - in: header
          type: string
          default: application/json
          name: Content-Type
      responses:
        '200':
          $ref: '#/responses/WidgetTemplate_Resp'
        '404':
          $ref: '#/responses/Error404_Resp'
        '422':
          $ref: '#/responses/Error422_Resp'
      description: Returns a single **Widget Template**.
    put:
      tags:
        - Widget Template
      summary: Update a Widget Template
      operationId: updateWidgetTemplate
      parameters:
        - name: uuid
          description: The identifier for a specific template.
          required: true
          in: path
          type: string
          format: uuid
        - name: templateBody
          in: body
          required: true
          schema:
            $ref: '#/definitions/widgetTemplate_Put'
          x-examples:
            application/json:
              name: Header Images
              template: '{{#each images}}<a href=''{{image_url}}''><img src={{image_source}} style=''width:33.3%''/></a>{{/each}}'
              create_new_version: true
        - name: Accept
          in: header
          type: string
          default: application/json
        - in: header
          type: string
          default: application/json
          name: Content-Type
      responses:
        '200':
          $ref: '#/responses/WidgetTemplate_Resp'
        '404':
          $ref: '#/responses/Error404_Resp'
        '422':
          $ref: '#/responses/Error422_Resp'
      description: Updates a **Widget Template**.
    delete:
      tags:
        - Widget Template
      summary: Delete A Widget Template
      operationId: deleteWidgetTemplate
      parameters:
        - name: uuid
          description: The identifier for a specific template.
          required: true
          in: path
          type: string
          format: uuid
        - name: Accept
          in: header
          type: string
          default: application/json
        - in: header
          type: string
          default: application/json
          name: Content-Type
      responses:
        '204':
          description: An empty response.
        '404':
          $ref: '#/responses/Error404_Resp'
        '422':
          $ref: '#/responses/Error422_Resp'
      description: Deletes a **Widget Template**.
  /content/widgets:
    post:
      tags:
        - Widget
      summary: Create a Widget
      operationId: createWidget
      parameters:
        - name: widgetBody
          in: body
          required: true
          schema:
            $ref: '#/definitions/widget_Post'
          x-examples:
            application/json:
              name: Header Images
              template: '{{#each images}}<a href=''{{image_url}}''><img src={{image_source}} style=''width:33.3%''/></a>{{/each}}'
              widget_configuration:
                images:
                  - image_source: 'https://cdn11.bigcommerce.com/s-n0i50vy/images/stencil/1280x1280/products/109/361/kinfolkessentialissue_1024x1024__22507.1456436715.jpg?c=2&imbypass=on'
                  - image_source: 'https://cdn11.bigcommerce.com/s-n0i50vy/images/stencil/500x659/products/85/282/livingwithplants_grande__26452.1456436666.jpg?c=2&imbypass=on'
                  - image_source: 'https://cdn11.bigcommerce.com/s-n0i50vy/images/stencil/1280x1280/products/109/361/kinfolkessentialissue_1024x1024__22507.1456436715.jpg?c=2&imbypass=on'
              widget_template_uuid: f8459145-da8f-4d98-93e4-83aa47da61c6
        - name: Accept
          in: header
          type: string
          default: application/json
        - in: header
          type: string
          default: application/json
          name: Content-Type
      responses:
        '200':
          $ref: '#/responses/Widget_Resp'
        '422':
          $ref: '#/responses/Error422_Resp'
      description: |-
        Creates a **Widget**.

        ***Note:*** *There is a limit of 1000 widgets per store.*

        **Required Fields**
        * name
        * widget_template_uuid
    get:
      tags:
        - Widget
      summary: Get All Widgets
      operationId: getWidgets
      parameters:
        - name: page
          description: |
            Specifies the page number in a limited (paginated) list of products.
          required: false
          in: query
          type: integer
        - name: limit
          description: |
            Controls the number of items per page in a limited (paginated) list of products.
          required: false
          in: query
          type: integer
        - in: query
          name: widget_template_kind
          description: The kind of widget template.
          type: string
          required: false
        - in: query
          name: widget_template_uuid
          description: The identifier for a specific widget template.
          type: string
          format: uuid
          required: false
        - name: Accept
          in: header
          type: string
          default: application/json
        - in: header
          type: string
          default: application/json
          name: Content-Type
        - in: query
          name: name
          type: string
          description: The URL encoded name of the widget.
        - type: array
          in: query
          name: 'name:in'
          description: 'Use to pass in comma-separated list of widget names. Example: `/widgets?name:in=test-widget-name,header%20images`'
        - type: integer
          in: query
          name: channel_id
          description: Filter items by channel_id.
      responses:
        '200':
          $ref: '#/responses/WidgetCollection_Resp'
        '422':
          $ref: '#/responses/Error422_Resp'
      description: Returns a list of **Widgets**. Optional parameters can be passed in.
  '/content/widgets/{uuid}':
    get:
      tags:
        - Widget
      summary: Get a Widget
      operationId: getWidget
      parameters:
        - name: uuid
          description: The identifier for a specific widget.
          required: true
          in: path
          type: string
          format: uuid
        - name: Accept
          in: header
          type: string
          default: application/json
        - in: header
          type: string
          default: application/json
          name: Content-Type
      responses:
        '200':
          $ref: '#/responses/Widget_Resp'
        '404':
          $ref: '#/responses/Error404_Resp'
        '422':
          $ref: '#/responses/Error422_Resp'
      description: Returns a single **Widget**.
    put:
      tags:
        - Widget
      summary: Update a Widget
      operationId: updateWidget
      parameters:
        - name: uuid
          description: The identifier for a specific widget.
          required: true
          in: path
          type: string
          format: uuid
        - name: widgetBody
          in: body
          required: true
          schema:
            $ref: '#/definitions/widget_Put'
          x-examples:
            application/json:
              name: Header Images
              widget_configuration:
                images:
                  - image_source: 'https://cdn11.bigcommerce.com/s-n0i50vy/images/stencil/1280x1280/products/109/361/kinfolkessentialissue_1024x1024__22507.1456436715.jpg?c=2&imbypass=on'
                  - image_source: 'https://cdn11.bigcommerce.com/s-n0i50vy/images/stencil/500x659/products/85/282/livingwithplants_grande__26452.1456436666.jpg?c=2&imbypass=on'
                  - image_source: 'https://cdn11.bigcommerce.com/s-n0i50vy/images/stencil/1280x1280/products/109/361/kinfolkessentialissue_1024x1024__22507.1456436715.jpg?c=2&imbypass=on'
              widget_template_uuid: f8459145-da8f-4d98-93e4-83aa47da61c6
        - name: Accept
          in: header
          type: string
          default: application/json
        - in: header
          type: string
          default: application/json
          name: Content-Type
      responses:
        '200':
          $ref: '#/responses/Widget_Resp'
        '404':
          $ref: '#/responses/Error404_Resp'
        '422':
          $ref: '#/responses/Error422_Resp'
      description: Updates a **Widget**.
    delete:
      tags:
        - Widget
      summary: Delete a Widget
      operationId: deleteWidget
      parameters:
        - name: uuid
          description: The identifier for a specific widget.
          required: true
          in: path
          type: string
          format: uuid
        - name: Accept
          in: header
          type: string
          default: application/json
        - in: header
          type: string
          default: application/json
          name: Content-Type
      responses:
        '204':
          description: An empty response.
        '404':
          $ref: '#/responses/Error404_Resp'
        '422':
          $ref: '#/responses/Error422_Resp'
      description: Deletes a **Widget**.
  /content/placements:
    post:
      tags:
        - Placement
      summary: Create a Placement
      operationId: createPlacement
      parameters:
        - name: placementBody
          in: body
          required: true
          schema:
            $ref: '#/definitions/placement_Post'
          x-examples:
            application/json:
              widget_uuid: a8940709-5655-4401-a341-62c44e3180b2
              entity_id: '21'
              template_file: pages/category
              status: active
              sort_order: 1
              region: category_header_banner
        - name: Accept
          in: header
          type: string
          default: application/json
        - in: header
          type: string
          default: application/json
          name: Content-Type
      responses:
        '200':
          $ref: '#/responses/Placement_Resp'
        '422':
          $ref: '#/responses/Error422_Resp'
      description: |-
        Creates a **Placement**.

        **Required Fields**
        * widget_uuid
        * template_file

        ## Template files

        The `template_file` property accepts the following values:

        * `pages/account/add-address` 
        * `pages/account/add-return`
        * `pages/account/add-wishlist`
        * `pages/account/addresses`
        * `pages/account/download-item`
        * `pages/account/edit` 
        * `pages/account/inbox`
        * `pages/account/orders/all`
        * `pages/account/orders/completed`
        * `pages/account/orders/details`
        * `pages/account/orders/invoice`
        * `pages/account/recent-items`
        * `pages/account/return-saved`
        * `pages/account/returns`
        * `pages/account/wishlist-details`
        * `pages/account/wishlists`
        * `pages/auth/account-created` 
        * `pages/auth/create-account` 
        * `pages/auth/forgot-password` 
        * `pages/auth/login` 
        * `pages/auth/new-password` 
        * `pages/blog`
        * `pages/blog-post` 
        * `pages/brand` 
        * `pages/brands` 
        * `pages/cart` 
        * `pages/category` 
        * `pages/compare` 
        * `pages/contact-us` 
        * `pages/errors/403` 
        * `pages/errors/404` 
        * `pages/errors/generic` 
        * `pages/gift-certificate/balance` 
        * `pages/gift-certificate/purchase`
        * `pages/gift-certificate/redeem`
        * `pages/home` 
        * `pages/order-confirmation` 
        * `pages/page` 
        * `pages/product` 
        * `pages/search` 
        * `pages/sitemap` 
        * `pages/subscribed` 
        * `pages/unavailable/hibernation` 
        * `pages/unavailable/maintenance`
        * `pages/unsubscribe`

        The `template_file` property accepts the following **custom** values:

        * `pages/custom/product/<filename>`
        * `pages/custom/brand/<filename>`
        * `pages/custom/category/<filename>`
        * `pages/custom/page/<filename>`
    get:
      tags:
        - Placement
      summary: Get All Placements
      operationId: getPlacements
      parameters:
        - name: page
          description: |
            Specifies the page number in a limited (paginated) list of products.
          required: false
          in: query
          type: integer
        - name: limit
          description: |
            Controls the number of items per page in a limited (paginated) list of products.
          required: false
          in: query
          type: integer
        - in: query
          name: widget_template_kind
          description: The kind of widget template.
          type: string
          required: false
        - in: query
          name: template_file
          description: 'The template file, for example: `pages/home`.'
          type: string
          required: false
        - name: widget_uuid
          description: The identifier for a specific widget.
          in: query
          type: string
          format: uuid
          required: false
        - in: query
          name: widget_template_uuid
          description: The identifier for a specific widget template.
          type: string
          format: uuid
          required: false
        - name: Accept
          in: header
          type: string
          default: application/json
        - in: header
          type: string
          default: application/json
          name: Content-Type
      responses:
        '200':
          $ref: '#/responses/PlacementsCollection_Resp'
        '422':
          $ref: '#/responses/Error422_Resp'
      description: Returns a list of **Placements**. Optional parameters can be passed in.
  '/content/placements/{uuid}':
    get:
      tags:
        - Placement
      summary: Get a Placement
      operationId: getPlacement
      parameters:
        - name: uuid
          description: The identifier for a specific placement.
          required: true
          in: path
          type: string
          format: uuid
        - name: Accept
          in: header
          type: string
          default: application/json
        - in: header
          type: string
          default: application/json
          name: Content-Type
      responses:
        '200':
          $ref: '#/responses/Placement_Resp'
        '404':
          $ref: '#/responses/Error404_Resp'
        '422':
          $ref: '#/responses/Error422_Resp'
      description: Returns a single **Placement**.
    put:
      tags:
        - Placement
      summary: Update a Placement
      operationId: updatePlacement
      parameters:
        - name: uuid
          description: The identifier for a specific placement.
          required: true
          in: path
          type: string
          format: uuid
        - name: placementBody
          in: body
          required: true
          schema:
            $ref: '#/definitions/placement_Put'
          x-examples:
            application/json:
              sort_order: 1
              region: home_header_image
              template_file: pages/home
              status: active
        - name: Accept
          in: header
          type: string
          default: application/json
        - in: header
          type: string
          default: application/json
          name: Content-Type
      responses:
        '200':
          $ref: '#/responses/Placement_Resp'
        '404':
          $ref: '#/responses/Error404_Resp'
        '422':
          $ref: '#/responses/Error422_Resp'
      description: Updates a **Placement**.
    delete:
      tags:
        - Placement
      summary: Delete a Placement
      operationId: deletePlacement
      parameters:
        - name: uuid
          description: The identifier for a specific placement.
          required: true
          in: path
          type: string
          format: uuid
        - name: Accept
          in: header
          type: string
          default: application/json
        - in: header
          type: string
          default: application/json
          name: Content-Type
      responses:
        '204':
          description: An empty response.
        '404':
          $ref: '#/responses/Error404_Resp'
        '422':
          $ref: '#/responses/Error422_Resp'
      description: Deletes a **Placement**.
  /content/regions:
    get:
      responses:
        '200':
          $ref: '#/responses/ThemeRegions_Resp'
      summary: Get Theme Regions
      description: Returns a list of unique **Theme Regions** in a file.
      operationId: getContentRegions
      tags:
        - Regions
      parameters:
        - name: Accept
          in: header
          type: string
          default: application/json
        - in: header
          type: string
          default: application/json
          name: Content-Type
        - in: query
          name: template_file
          description: 'The template file, for example: `templateFile=pages/home`.'
          type: string
          required: true
parameters:
  TemplateUUID:
    name: uuid
    description: The identifier for a specific template.
    required: true
    in: path
    type: string
    format: uuid
  FilterWidgetTemplateUUIDParam:
    in: query
    name: widget_template_uuid
    description: The identifier for a specific widget template.
    type: string
    format: uuid
    required: false
  FilterWidgetTemplateKindParam:
    in: query
    name: widget_template_kind
    description: The kind of widget template.
    type: string
    required: false
  FilterTemplateFileParam:
    in: query
    name: template_file
    description: 'The template file, for example: `pages/home`.'
    type: string
    required: false
  RequiredTemplateFile:
    in: query
    name: templateFile
    description: 'The template file, for example: `templateFile=pages/home`.'
    type: string
    required: true
  LayoutUUID:
    name: uuid
    description: The identifier for a specific layout.
    required: true
    in: path
    type: string
    format: uuid
  PlacementUUID:
    name: uuid
    description: The identifier for a specific placement.
    required: true
    in: path
    type: string
    format: uuid
  WidgetUUID:
    name: uuid
    description: The identifier for a specific widget.
    required: true
    in: path
    type: string
    format: uuid
  FilterWidgetUUIDParam:
    name: widget_uuid
    description: The identifier for a specific widget.
    in: query
    type: string
    format: uuid
    required: false
  PageParam:
    name: page
    description: |
      Specifies the page number in a limited (paginated) list of products.
    required: false
    in: query
    type: integer
  LimitParam:
    name: limit
    description: |
      Controls the number of items per page in a limited (paginated) list of products.
    required: false
    in: query
    type: integer
  QueryWidgetsParam:
    type: string
    name: query
    in: query
    description: |
      The query string associated with a widget's name and description.
  Accept:
    name: Accept
    in: header
    type: string
    default: application/json
  Content-Type:
    in: header
    type: string
    default: application/json
    name: Content-Type
definitions:
  widgetTemplate_Put:
    allOf:
      - $ref: '#/definitions/widgetTemplate_Base'
      - type: object
        properties:
          create_new_version:
            type: boolean
            description: Can be added to create a new widget template version instead of updating the current one.
    title: widgetTemplate_Put
  widgetTemplate_Post:
    title: widgetTemplate_Post
    type: object
    description: ''
    properties:
      name:
        type: string
        description: User-friendly name.
      schema:
        $ref: '#/definitions/widgetSchema'
      template:
        type: string
        description: Handlebars HTML content. Also has access to Stencil Paper helpers.
        format: html
      storefront_api_query:
        type: string
        description: The GraphQL Storefront API query that provides widget data.
    required:
      - name
      - template
  widgetTemplate_Full:
    allOf:
      - $ref: '#/definitions/widgetTemplate_Base'
      - type: object
        properties:
          uuid:
            type: string
            format: uuid
            description: The primary identifier.
          kind:
            type: string
            description: The kind of widget template.
          date_created:
            type: string
            format: datetime
            description: The date on which this object was initially created.
          date_modified:
            type: string
            format: datetime
            description: The date on which this object was last updated.
          current_version_uuid:
            type: string
            description: The identifier to the current version of this widget template.
          icon_name:
            type: string
            default: default
            description: A read-only value. Do not attempt to set or modify this value in a POST or PUT operation.
    title: widgetTemplate_Full
    description: ''
  widget_Full:
    title: widget_Full
    allOf:
      - $ref: '#/definitions/widget_Base'
      - type: object
        properties:
          uuid:
            type: string
            format: uuid
            description: The primary identifier.
          widget_template:
            $ref: '#/definitions/widgetTemplate_Full'
          date_created:
            type: string
            format: datetime
            description: The date on which this object was initially created.
          date_modified:
            type: string
            format: datetime
            description: The date on which this object was last updated.
          version_uuid:
            type: string
            description: The identifier of the widget template version associated with this widget.
  widget_Post:
    required:
      - name
      - widget_template_uuid
    properties:
      name:
        type: string
        description: User friendly name.
      description:
        type: string
        description: The user-friendly description.
      widget_configuration:
        type: object
        description: The JSON data that populates the template.
        format: json
      widget_template_uuid:
        type: string
        description: The widget template UUID.
    title: widget_Post
  widget_Put:
    title: widget_Put
    allOf:
      - $ref: '#/definitions/widget_Base'
      - properties:
          widget_template_uuid:
            type: string
            description: The widget template UUID.
        type: object
  placement_Post:
    title: placement_Post
    allOf:
      - type: object
        properties:
          widget_uuid:
            type: string
            description: A widget identifier.
          template_file:
            type: string
            description: The template file that you would like to target.
        required:
          - widget_uuid
          - template_file
      - $ref: '#/definitions/placement_Base'
  placement_Put:
    title: placement_Put
    allOf:
      - type: object
        properties:
          template_file:
            type: string
            description: The template file that you would like to target.
          widget_uuid:
            type: string
            description: A widget identifier.
      - $ref: '#/definitions/placement_Base'
  placement_Full:
    title: placement_Full
    allOf:
      - type: object
        properties:
          uuid:
            type: string
            format: uuid
            description: The primary identifier.
          template_file:
            type: string
            description: The template file that you would like to target.
          date_created:
            type: string
            format: datetime
            description: The date on which this object was initially created.
          date_modified:
            type: string
            format: datetime
            description: The date on which this object was last updated.
      - $ref: '#/definitions/placement_Base'
      - type: object
        properties:
          widget:
            $ref: '#/definitions/widget_Full'
  metaCollection:
    type: object
    description: 'Data about the response, including pagination and collection totals.'
    title: metaCollection
    properties:
      pagination:
        $ref: '#/definitions/pagination'
  pagination:
    type: object
    description: |
      Data about the response, including pagination and collection totals.
    properties:
      total:
        type: integer
        description: |
          Total number of items in the result set.
      count:
        type: integer
        description: |
          Total number of items in the collection response.
      per_page:
        type: integer
        description: |
          The amount of items returned in the collection per page, controlled by the limit parameter.
      current_page:
        type: integer
        description: |
          The page you are currently on within the collection.
      total_pages:
        type: integer
        description: |
          The total number of pages in the collection.
      links:
        type: object
        description: |
          Pagination links for the previous and next parts of the whole collection.
        properties:
          previous:
            type: string
            description: |
              Link to the previous page returned in the response.
          current:
            type: string
            description: |
              Link to the current page returned in the response.
          next:
            type: string
            description: |
              Link to the next page returned in the response.
    title: pagination
  error_Base:
    type: object
    description: |
      Error payload for the BigCommerce API.
    title: error_Base
    properties:
      status:
        description: |
          The HTTP status code.
        type: integer
      title:
        description: |
          The error title describing the particular error.
        type: string
      type:
        type: string
      instance:
        type: string
      errors:
        type: object
  themeRegion:
    properties:
      name:
        type: string
        description: The region name.
    title: themeRegion
  Meta:
    type: object
    description: Empty meta object; may be used later.
  placement_Base:
    type: object
    title: placement_Base
    properties:
      entity_id:
        type: string
        description: 'The identifier of a page you would like to target. For product pages, choose product ID. For category pages, choose category ID. Home page does not support `entity_id`.'
      sort_order:
        type: integer
        description: The sort order to control the position of a content widget in a region.
      region:
        type: string
        description: The name of the region in which to insert content widgets.
      status:
        type: string
        enum:
          - inactive
          - active
        description: Sets the placement as either inactive or active.
        default: inactive
  widgetTemplate_Base:
    type: object
    title: widgetTemplate_Base
    properties:
      name:
        type: string
        description: The user-friendly name.
      schema:
        $ref: '#/definitions/widgetSchema'
      template:
        type: string
        format: html
        description: The widget template HTML. Supports Handlebars and Paper helpers.
      storefront_api_query:
        type: string
        description: The GraphQL Storefront API query that provides widget data.
    description: ''
  widget_Base:
    type: object
    title: widget_Base
    properties:
      name:
        type: string
        description: The user-friendly name.
      description:
        type: string
        description: The user-friendly description.
      widget_configuration:
        type: object
        format: json
        description: The JSON data that populates the template.
  new-model:
    type: array
    items:
      type: object
      properties:
        type:
          type: string
        label:
          type: string
        id:
          type: string
        default:
          type: integer
        typeMeta:
          type: string
        conditional:
          $ref: '#/definitions/widgetSchemaConditional'
  widgetSchemaTab:
    type: object
    title: widgetSchemaTab
    description: '**Tab.** Use the **tab** settings type to create settings visible in Page Builder.'
    enum:
      - tab
    properties:
      type:
        type: string
        description: The type of setting component to display.
        enum:
          - tab
      label:
        type: string
        example: Content
        description: The user-friendly message to inform the user how this setting will be used.
      sections:
        type: array
        description: Groups of related settings.
        items:
          type: object
          title: widgetSchemaTabSections
          properties:
            label:
              type: string
              description: The user-friendly message to inform the user how this setting will be used.
              example: Product
            settings:
              type: array
              description: 'For examples of schema settings, see [Widget UI Input Types](https://developer.bigcommerce.com/stencil-docs/page-builder/schema-settings).'
              items:
                type: object
                title: widgetSchemaSetting_Base
                description: 'For examples of each type of setting, see [Page Builder > Schema Settings](https://developer.bigcommerce.com/stencil-docs/page-builder/schema-settings/alignment) in Theme Docs.'
                properties:
                  type:
                    type: string
                    description: |-
                      The type of setting component to display. You can view the list of elements below to discover which are available to use.

                      For examples of each type of setting, see [Page Builder > Schema Settings](https://developer.bigcommerce.com/stencil-docs/page-builder/schema-settings/alignment) in Theme Docs.
                    enum:
                      - alignment
                      - boolean
                      - boxModel
                      - code
                      - color
                      - imageManager
                      - input
                      - number
                      - productId
                      - productImage
                      - range
                      - regexInput
                      - select
                      - text
                      - toggle
                  label:
                    type: string
                    description: The user friendly message to inform the user how this setting will be used.
                  id:
                    type: string
                    description: The variable name where the setting value will be available in the widget template.
                  default:
                    type: string
                    description: The default value to use when rendering the widget for the first time. Make sure to set sensible defaults to make your widget easier to use.
                  typeMeta:
                    type: object
                    description: Additional information needed based on the selected setting type.
                    properties:
                      selectOptions:
                        type: array
                        items:
                          type: object
                          properties:
                            label:
                              type: string
                              example: Image
                            value:
                              type: string
                              example: image
                  conditional:
                    type: object
                    title: widgetSchemaConditional
                    description: 'An optional property that can be added to each setting to control whether it should be displayed to the user while editing in Page Builder. This does not clear the value in the setting, just controls the display of the setting.'
                    x-examples:
                      Conditional attribute:
                        key: backgroundType
                        operator: IN
                        value:
                          - color
                    properties:
                      key:
                        type: string
                        description: The ID of the `setting` object the conditional attribute is related to.
                        example: backgroundType
                      operator:
                        type: string
                        description: 'Specifies the operation used to determine whether to display the setting. The `IN` operator is currently the only supported operator. The setting will be displayed if the conditionalâ€™s `value` property is equal to the selected value of the `selectOptions`. '
                        example: IN
                      value:
                        type: array
                        description: A single-object array containing a value from the `typeMeta`'s `selectOptions`.
                        items: {}
  widgetSchemaTabSections:
    type: object
    title: widgetSchemaTabSections
    properties:
      label:
        type: string
      settings:
        type: array
        description: 'For examples of each type of setting, see [Page Builder > Schema Settings](https://developer.bigcommerce.com/stencil-docs/page-builder/schema-settings/alignment) in Theme Docs.'
        items:
          $ref: '#/definitions/widgetSchemaSetting_Base'
  widgetSchemaArray:
    type: object
    title: widgetSchemaArray
    description: '**Array.** Use the **array** settings type to build collections of elements within the widget. Each element in the array can contain tabs, sections, and an entire schema.'
    properties:
      type:
        type: string
        enum:
          - array
      label:
        type: string
      id:
        type: string
      defaultCount:
        type: string
        description: number of elements in the list to display by default.
      entryLabel:
        type: string
        description: name for each element in the list
      thumbnail:
        type: string
        description: used to display an image stored at the specified attribute name
      schema:
        type: array
        description: The schema used for each element in the array.
  widgetSchemaSetting_Base:
    type: object
    title: widgetSchemaSetting_Base
    description: 'For examples of each type of setting, see [Page Builder > Schema Settings](https://developer.bigcommerce.com/stencil-docs/page-builder/schema-settings/alignment) in Theme Docs.'
    properties:
      type:
        type: string
        description: |-
          The type of setting component to display. You can view the list of elements below to discover which are available to use.

          For examples of each type of setting, see [Page Builder > Schema Settings](https://developer.bigcommerce.com/stencil-docs/page-builder/schema-settings/alignment) in Theme Docs.
        enum:
          - alignment
          - boolean
          - boxModel
          - code
          - color
          - imageManager
          - input
          - number
          - productId
          - productImage
          - range
          - regexInput
          - select
          - text
          - toggle
      label:
        type: string
        description: The user friendly message to inform the user how this setting will be used.
      id:
        type: string
        description: The variable name where the setting value will be available in the widget template.
      default:
        type: string
        description: The default value to use when rendering the widget for the first time. Make sure to set sensible defaults to make your widget easier to use.
      typeMeta:
        type: object
        description: Additional information needed based on the selected setting type.
        properties:
          selectOptions:
            type: array
            items:
              type: object
              properties:
                label:
                  type: string
                  example: Image
                value:
                  type: string
                  example: image
      conditional:
        $ref: '#/definitions/widgetSchemaConditional'
  widgetSchema:
    type: array
    description: 'The schema for the widget''s merchant-facing UI. For more information on the available schema settings, see [Widget UI Schema](https://developer.bigcommerce.com/stencil-docs/page-builder/widget-ui-schema). '
    title: ''
    items:
      anyOf:
        - $ref: '#/definitions/widgetSchemaTab'
        - $ref: '#/definitions/widgetSchemaArray'
        - $ref: '#/definitions/widgetSchemaHidden'
  widgetSchemaHidden:
    type: object
    title: widgetSchemaHidden
    description: '**Hidden.** Use the **hidden** settings type to create controls that have no user interface drawn in Page Builder. Hidden settings are not grouped into any other tabs or arrays.'
    enum:
      - hidden
    properties:
      type:
        type: string
      settings:
        type: array
        items:
          type: object
          title: widgetSchemaSetting_Base
          description: 'For examples of each type of setting, see [Page Builder > Schema Settings](https://developer.bigcommerce.com/stencil-docs/page-builder/schema-settings/alignment) in Theme Docs.'
          properties:
            type:
              type: string
              description: |-
                The type of setting component to display. You can view the list of elements below to discover which are available to use.

                For examples of each type of setting, see [Page Builder > Schema Settings](https://developer.bigcommerce.com/stencil-docs/page-builder/schema-settings/alignment) in Theme Docs.
              enum:
                - alignment
                - boolean
                - boxModel
                - code
                - color
                - imageManager
                - input
                - number
                - productId
                - productImage
                - range
                - regexInput
                - select
                - text
                - toggle
            label:
              type: string
              description: The user friendly message to inform the user how this setting will be used.
            id:
              type: string
              description: The variable name where the setting value will be available in the widget template.
            default:
              type: string
              description: The default value to use when rendering the widget for the first time. Make sure to set sensible defaults to make your widget easier to use.
            typeMeta:
              type: object
              description: Additional information needed based on the selected setting type.
              properties:
                selectOptions:
                  type: array
                  items:
                    type: object
                    properties:
                      label:
                        type: string
                        example: Image
                      value:
                        type: string
                        example: image
            conditional:
              type: object
              title: widgetSchemaConditional
              description: 'An optional property that can be added to each setting to control whether it should be displayed to the user while editing in Page Builder. This does not clear the value in the setting, just controls the display of the setting.'
              x-examples:
                Conditional attribute:
                  key: backgroundType
                  operator: IN
                  value:
                    - color
              properties:
                key:
                  type: string
                  description: The ID of the `setting` object the conditional attribute is related to.
                  example: backgroundType
                operator:
                  type: string
                  description: 'Specifies the operation used to determine whether to display the setting. The `IN` operator is currently the only supported operator. The setting will be displayed if the conditionalâ€™s `value` property is equal to the selected value of the `selectOptions`. '
                  example: IN
                value:
                  type: array
                  description: A single-object array containing a value from the `typeMeta`'s `selectOptions`.
  widgetSchemaTabSectionsSettings:
    type: object
    properties: {}
    title: widgetSchemaTabSectionsSettings
  widgetSchemaConditional:
    type: object
    title: widgetSchemaConditional
    description: 'An optional property that can be added to each setting to control whether it should be displayed to the user while editing in Page Builder. This does not clear the value in the setting, just controls the display of the setting.'
    x-examples:
      Conditional attribute:
        key: backgroundType
        operator: IN
        value:
          - color
    properties:
      key:
        type: string
        description: The ID of the `setting` object the conditional attribute is related to.
        example: backgroundType
      operator:
        type: string
        description: 'Specifies the operation used to determine whether to display the setting. The `IN` operator is currently the only supported operator. The setting will be displayed if the conditionalâ€™s `value` property is equal to the selected value of the `selectOptions`. '
        example: IN
      value:
        type: array
        description: A single-object array containing a value from the `typeMeta`'s `selectOptions`.
        items: {}
securityDefinitions:
  X-Auth-Token:
    type: apiKey
    name: X-Auth-Token
    in: header
    description: |-
      ### OAuth Scopes
      |  **UI Name** | **Permission** | **Parameter** |
      | --- | --- | --- |
      |  Content | modify | `store_v2_content` |
      |  Content | read-only | `store_v2_content_read_only` |

      ### Headers

      |Header|Parameter|Description|
      |-|-|-|
      |`X-Auth-Token`|`access_token `|Obtained by creating an API account or installing an app in a BigCommerce control panel.|

      ### Example

      ```http
      GET /stores/{$$.env.store_hash}/v3/catalog/summary
      host: api.bigcommerce.com
      Content-Type: application/json
      X-Auth-Token: {access_token}
      ```

      * For more information on Authenticating BigCommerce APIs, see: [Authentication](https://developer.bigcommerce.com/api-docs/getting-started/authentication).
security:
  - X-Auth-Client: []
  - X-Auth-Token: []
responses:
  ThemeRegions_Resp:
    description: ''
    schema:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/definitions/themeRegion'
        meta:
          type: object
          description: Empty meta object; may be used later.
    examples:
      application/json:
        data:
          - name: header_bottom
          - name: category_header_banner
        meta: {}
  LayoutCollectionResponse:
    description: ''
    schema:
      type: object
      properties:
        data:
          type: array
          items:
            properties:
              uuid:
                type: string
                format: uuid
                description: The primary identifier.
              entity_id:
                type: string
                description: The specific instance of a page
              template_file:
                type: string
                description: The page template name.
              region:
                type: string
                description: The name of the region defined in the stencil theme file.
              markup:
                type: string
                description: The HTML layout which defines complex poisitoning for placements.
              date_created:
                type: string
                format: datetime
                description: The date on which this object was initially created.
              date_modified:
                type: string
                format: datetime
                description: The date on which this object was last updated.
            title: Layout
        meta:
          type: object
          description: 'Data about the response, including pagination and collection totals.'
          properties:
            pagination:
              type: object
              description: |
                Data about the response, including pagination and collection totals.
              properties:
                total:
                  type: integer
                  description: |
                    Total number of items in the result set.
                count:
                  type: integer
                  description: |
                    Total number of items in the collection response.
                per_page:
                  type: integer
                  description: |
                    The amount of items returned in the collection per page, controlled by the limit parameter.
                current_page:
                  type: integer
                  description: |
                    The page you are currently on within the collection.
                total_pages:
                  type: integer
                  description: |
                    The total number of pages in the collection.
                links:
                  type: object
                  description: |
                    Pagination links for the previous and next parts of the whole collection.
                  properties:
                    previous:
                      type: string
                      description: |
                        Link to the previous page returned in the response.
                    current:
                      type: string
                      description: |
                        Link to the current page returned in the response.
                    next:
                      type: string
                      description: |
                        Link to the next page returned in the response.
          title: Collection Meta
    examples:
      application/json:
        data:
          - uuid: cacdadcf-07ec-43f3-aec4-f8e3382d7618
            template_file: pages/category
            entity_id: '21'
            region: category_header_banner
            markup: '<style>img:hover{opacity: 0.3;}</style><div><div style=''padding:5px;''><bc-placement id=''bb34b23b-0d4b-4b9b-9e24-c8b0dcfd5e08''></bc-placement></div></div>'
            date_created: '2019-02-25T18:38:08.455Z'
            date_modified: '2019-02-25T18:38:08.455Z'
        meta:
          pagination:
            total: 1
            count: 1
            per_page: 50
            current_page: 1
            total_pages: 1
  LayoutResponse:
    description: ''
    schema:
      type: object
      properties:
        data:
          type: array
          items:
            properties:
              uuid:
                type: string
                format: uuid
                description: The primary identifier.
              entity_id:
                type: string
                description: The specific instance of a page
              template_file:
                type: string
                description: The page template name.
              region:
                type: string
                description: The name of the region defined in the stencil theme file.
              markup:
                type: string
                description: The HTML layout which defines complex poisitoning for placements.
              date_created:
                type: string
                format: datetime
                description: The date on which this object was initially created.
              date_modified:
                type: string
                format: datetime
                description: The date on which this object was last updated.
            title: Layout
    examples:
      application/json:
        data:
          uuid: cacdadcf-07ec-43f3-aec4-f8e3382d7618
          template_file: pages/category
          entity_id: '21'
          region: category_header_banner
          markup: '<style>img:hover{opacity: 0.3;}</style><div><div style=''padding:5px;''><bc-placement id=''bb34b23b-0d4b-4b9b-9e24-c8b0dcfd5e08''></bc-placement></div></div>'
          date_created: '2019-02-25T18:38:08.455Z'
          date_modified: '2019-02-25T18:38:08.455Z'
        meta: {}
  PlacementsCollection_Resp:
    description: ''
    schema:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/definitions/placement_Full'
        meta:
          $ref: '#/definitions/metaCollection'
    examples:
      application/json:
        data:
          - channel_id: 1
            date_created: '2020-12-21T20:43:16.796Z'
            date_modified: '2020-12-21T20:43:16.796Z'
            entity_id: '21'
            region: category_header_banner
            sort_order: 1
            status: active
            template_file: pages/category
            uuid: 89eac5b3-91d7-48e5-92e7-ff53ecf07f8c
            widget:
              channel_id: 1
              date_created: '2020-12-21T19:54:16.406Z'
              date_modified: '2020-12-21T20:40:45.173Z'
              description: ''
              name: Header Images
              storefront_api_query_params: {}
              uuid: 1f05183e-dfa4-4583-af28-250b47e177b2
              version_uuid: c863f77b-e5b4-4462-a9ed-2aff9005140e
              widget_configuration:
                _:
                  id: 1f05183e-dfa4-4583-af28-250b47e177b2
                images:
                  - image_source: 'https://cdn11.bigcommerce.com/s-n0i50vy/images/stencil/1280x1280/products/109/361/kinfolkessentialissue_1024x1024__22507.1456436715.jpg?c=2&imbypass=on'
                  - image_source: 'https://cdn11.bigcommerce.com/s-n0i50vy/images/stencil/500x659/products/85/282/livingwithplants_grande__26452.1456436666.jpg?c=2&imbypass=on'
                  - image_source: 'https://cdn11.bigcommerce.com/s-n0i50vy/images/stencil/1280x1280/products/109/361/kinfolkessentialissue_1024x1024__22507.1456436715.jpg?c=2&imbypass=on'
              widget_template:
                channel_id: 1
                client_rerender: false
                current_version_uuid: c863f77b-e5b4-4462-a9ed-2aff9005140e
                date_created: '2020-12-21T19:49:29.110Z'
                date_modified: '2020-12-21T19:49:29.110Z'
                icon_name: default
                kind: custom
                name: Header Images
                schema: []
                storefront_api_query: ''
                template: '{{#each images}}<a href=''{{image_url}}''><img src={{image_source}} style=''width:50%''/></a>{{/each}}'
                template_engine: handlebars_v3
                uuid: f8459145-da8f-4d98-93e4-83aa47da61c6
        meta:
          pagination:
            count: 1
            current_page: 1
            per_page: 50
            total: 1
            total_pages: 1
  Placement_Resp:
    description: ''
    schema:
      type: object
      properties:
        data:
          $ref: '#/definitions/placement_Full'
        meta:
          type: object
    examples:
      application/json:
        data:
          channel_id: 1
          date_created: '2020-12-21T20:43:16.796Z'
          date_modified: '2020-12-21T20:43:16.796Z'
          entity_id: '21'
          region: category_header_banner
          sort_order: 1
          status: active
          template_file: pages/category
          uuid: 89eac5b3-91d7-48e5-92e7-ff53ecf07f8c
          widget:
            channel_id: 1
            date_created: '2020-12-21T19:54:16.406Z'
            date_modified: '2020-12-21T20:40:45.173Z'
            description: ''
            name: Header Images
            storefront_api_query_params: {}
            uuid: 1f05183e-dfa4-4583-af28-250b47e177b2
            version_uuid: c863f77b-e5b4-4462-a9ed-2aff9005140e
            widget_configuration:
              _:
                id: 1f05183e-dfa4-4583-af28-250b47e177b2
              images:
                - image_source: 'https://cdn11.bigcommerce.com/s-n0i50vy/images/stencil/1280x1280/products/109/361/kinfolkessentialissue_1024x1024__22507.1456436715.jpg?c=2&imbypass=on'
                - image_source: 'https://cdn11.bigcommerce.com/s-n0i50vy/images/stencil/500x659/products/85/282/livingwithplants_grande__26452.1456436666.jpg?c=2&imbypass=on'
                - image_source: 'https://cdn11.bigcommerce.com/s-n0i50vy/images/stencil/1280x1280/products/109/361/kinfolkessentialissue_1024x1024__22507.1456436715.jpg?c=2&imbypass=on'
            widget_template:
              channel_id: 1
              client_rerender: false
              current_version_uuid: c863f77b-e5b4-4462-a9ed-2aff9005140e
              date_created: '2020-12-21T19:49:29.110Z'
              date_modified: '2020-12-21T19:49:29.110Z'
              icon_name: default
              kind: custom
              name: Header Images
              schema: []
              storefront_api_query: ''
              template: '{{#each images}}<a href=''{{image_url}}''><img src={{image_source}} style=''width:50%''/></a>{{/each}}'
              template_engine: handlebars_v3
              uuid: f8459145-da8f-4d98-93e4-83aa47da61c6
        meta: {}
  WidgetTemplateCollection_Resp:
    description: ''
    schema:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/definitions/widgetTemplate_Full'
        meta:
          $ref: '#/definitions/pagination'
    examples:
      application/json:
        data:
          - channel_id: 1
            client_rerender: false
            current_version_uuid: 4bd7619e-7992-4454-8610-84fb16449761
            date_created: '2020-12-21T19:36:16.896Z'
            date_modified: '2020-12-21T19:36:16.896Z'
            icon_name: default
            kind: custom
            name: Header Images
            schema: []
            storefront_api_query: ''
            template: '{{#each images}}<a href=''{{image_url}}''><img src={{image_source}} style=''width:33.3%''/></a>{{/each}}'
            template_engine: handlebars_v3
            uuid: f8459145-da8f-4d98-93e4-83aa47da61c6
          - channel_id: 1
            client_rerender: false
            current_version_uuid: c23dd66b-fa3f-451d-88ef-9f4082c6051e
            date_created: '2020-12-21T19:36:59.384Z'
            date_modified: '2020-12-21T19:36:59.384Z'
            icon_name: default
            kind: custom
            name: Simple List
            schema: []
            storefront_api_query: ''
            template: '<ul>{{#each list_items}}<li style=''color:{{color}};''>{{text}}</li>{{/each}}</ul>'
            template_engine: handlebars_v3
            uuid: 42b42cbb-e2d8-4f2a-97ea-06755032115a
          - channel_id: 1
            client_rerender: false
            current_version_uuid: bc820372-368e-4a96-a6d6-f313edba5617
            date_created: '2020-12-21T19:38:08.036Z'
            date_modified: '2020-12-21T19:38:08.036Z'
            icon_name: default
            kind: custom
            name: Simple Text with Styling
            schema: []
            storefront_api_query: ''
            template: '<style>#bc-simple-text-{{_.id}} {color: {{color}};background: {{background_color}};font-size: {{font_size}};font-style: {{font_style}};font-weight: {{font_weight}};font-family: {{font_family}};text-align: {{text_align}};margin-top: {{margin_top}};margin-bottom: {{margin_bottom}};margin-left: {{margin_left}};margin-right: {{margin_right}};padding-top: {{padding_top}};padding-bottom: {{padding_bottom}};padding-left: {{padding_left}};padding-right: {{padding_right}};}</style><p id=''bc-simple-text-{{_.id}}''>{{text}}</p>'
            template_engine: handlebars_v3
            uuid: 17dcc919-982a-4cc0-8ede-a5b49f9ab6dc
          - channel_id: 1
            client_rerender: false
            current_version_uuid: 873b0a03-b219-46ec-8f06-c3c4522ef25d
            date_created: '2020-12-21T19:38:30.223Z'
            date_modified: '2020-12-21T19:38:30.223Z'
            icon_name: default
            kind: custom
            name: YouTube Embed
            schema: []
            storefront_api_query: ''
            template: '<iframe id=''ytplayer-{{_.id}}''type=''text/html'' width=''{{width}}'' height=''{{height}}'' src=''https://www.youtube.com/embed/{{video_id}}?autoplay={{autoplay}}&color={{color}}&controls={{controls}}&disablekb={{disablekb}}&fs={{fs}}&rel={{rel}}&showinfo={{showinfo}}'' frameborder=''{{frameborder}}''></iframe>'
            template_engine: handlebars_v3
            uuid: d9e7fd0e-d5c2-45c9-8919-ce68a5590c12
          - channel_id: 1
            client_rerender: false
            current_version_uuid: 8fa7ff13-fcfb-4106-9c32-5a084224a444
            date_created: '2020-12-21T19:38:46.557Z'
            date_modified: '2020-12-21T19:38:46.557Z'
            icon_name: default
            kind: custom
            name: Slider Template
            schema: []
            storefront_api_query: ''
            template: |-
              <ul class="slider">
              {{#each slides}}
              <ul class="slide"><img class="mySlides" src="{{image}}"/></ul>
              {{/each}}
              </ul>
              <script>
              var slideIndex = 0;
              carousel();
              function carousel() {
              var i;
              var x = document.getElementsByClassName("mySlides");
              for (i = 0; i < x.length; i++) {
              x[i].style.display = "none";
              }
              slideIndex++;
              if (slideIndex > x.length) {slideIndex = 1}
              x[slideIndex-1].style.display = "block";
              setTimeout(carousel, 4000); // Change image every 4 seconds
              }
              </script>
            template_engine: handlebars_v3
            uuid: 30714957-0e01-4c4e-8551-25591261d0d0
          - channel_id: 0
            client_rerender: false
            current_version_uuid: 7494d009-c695-43ce-a1eb-ba75ef663ba2
            date_created: '2020-06-23T18:07:12.110Z'
            date_modified: '2020-06-23T18:07:12.110Z'
            icon_name: default
            kind: pp-cartpage-fullbanner
            name: PayPal Credit Banner - Cart Page (728x90)
            schema: []
            storefront_api_query: ''
            template: |
              <style media="screen">
                #banner-region-{{ _.id }} {
                  display: block;
                  margin-right: auto;
                  margin-left: auto;
                  width: 100%;
                  max-width: 728px;
                  height: 90px;
                }
              </style>

              <div id="banner-region-{{ _.id }}">
                <script src="https://www.paypalobjects.com/upstream/partner.js"
                  data-pp_payer_id="{{ merchant_id }}"
                  data-pp_bn_code="BigCommerce_Cart_PPC"
                  data-pp_dimensions="728x90"
                  data-pp_format="HTML"
                  data-pp_presentation_types="HTML"
                  data-pp_page="CartPage"
                  data-pp_country_code="{{ country_code }}"
                  data-pp_locale="{{ locale }}"
                  data-pp_partner_version="2">
                </script>
              </div>
            template_engine: handlebars_v3
            uuid: 2ff24732-6848-47ba-9a7f-c8b1d444f270
          - channel_id: 0
            client_rerender: false
            current_version_uuid: ee4978a6-31f9-47e2-ab38-810dd1c78e34
            date_created: '2020-06-23T18:07:12.136Z'
            date_modified: '2020-06-23T18:07:12.136Z'
            icon_name: default
            kind: pp-homepage-fullbanner
            name: PayPal Credit Banner - Home Page (728x90)
            schema: []
            storefront_api_query: ''
            template: |
              <style media="screen">
                #banner-region-{{ _.id }} {
                  display: block;
                  margin-right: auto;
                  margin-left: auto;
                  width: 100%;
                  max-width: 728px;
                  height: 90px;
                }
              </style>

              <div id="banner-region-{{ _.id }}">
                <script src="https://www.paypalobjects.com/upstream/partner.js"
                  data-pp_payer_id="{{ merchant_id }}"
                  data-pp_bn_code="BigCommerce_Cart_PPC"
                  data-pp_dimensions="728x90"
                  data-pp_format="HTML"
                  data-pp_presentation_types="HTML"
                  data-pp_page="HomePage"
                  data-pp_country_code="{{ country_code }}"
                  data-pp_locale="{{ locale }}"
                  data-pp_partner_version="2">
                </script>
              </div>
            template_engine: handlebars_v3
            uuid: 3002bf5b-5eca-4ac2-8f1f-5240c2b74712
        meta:
          pagination:
            total: 7
            count: 7
            per_page: 50
            current_page: 1
            total_pages: 1
  WidgetTemplate_Resp:
    description: ''
    schema:
      allOf:
        - properties:
            data:
              $ref: '#/definitions/widgetTemplate_Full'
        - properties:
            meta:
              type: object
      type: object
    examples:
      application/json:
        data:
          channel_id: 1
          client_rerender: false
          current_version_uuid: 4bd7619e-7992-4454-8610-84fb16449761
          date_created: '2020-12-21T19:36:16.896Z'
          date_modified: '2020-12-21T19:36:16.896Z'
          icon_name: default
          kind: custom
          name: Header Images
          schema: []
          storefront_api_query: ''
          template: '{{#each images}}<a href=''{{image_url}}''><img src={{image_source}} style=''width:33.3%''/></a>{{/each}}'
          template_engine: handlebars_v3
          uuid: f8459145-da8f-4d98-93e4-83aa47da61c6
        meta: {}
  WidgetCollection_Resp:
    description: ''
    schema:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/definitions/widget_Full'
        meta:
          $ref: '#/definitions/metaCollection'
    examples:
      application/json:
        data:
          - channel_id: 1
            date_created: '2020-12-21T19:54:16.406Z'
            date_modified: '2020-12-21T19:54:16.406Z'
            description: ''
            name: Header Images
            storefront_api_query_params: {}
            uuid: 1f05183e-dfa4-4583-af28-250b47e177b2
            version_uuid: c863f77b-e5b4-4462-a9ed-2aff9005140e
            widget_configuration:
              _:
                id: 1f05183e-dfa4-4583-af28-250b47e177b2
              images:
                - image_source: 'https://cdn11.bigcommerce.com/s-n0i50vy/images/stencil/1280x1280/products/109/361/kinfolkessentialissue_1024x1024__22507.1456436715.jpg?c=2&imbypass=on'
                - image_source: 'https://cdn11.bigcommerce.com/s-n0i50vy/images/stencil/500x659/products/85/282/livingwithplants_grande__26452.1456436666.jpg?c=2&imbypass=on'
                - image_source: 'https://cdn11.bigcommerce.com/s-n0i50vy/images/stencil/1280x1280/products/109/361/kinfolkessentialissue_1024x1024__22507.1456436715.jpg?c=2&imbypass=on'
            widget_template:
              channel_id: 1
              client_rerender: false
              current_version_uuid: c863f77b-e5b4-4462-a9ed-2aff9005140e
              date_created: '2020-12-21T19:49:29.110Z'
              date_modified: '2020-12-21T19:49:29.110Z'
              icon_name: default
              kind: custom
              name: Header Images
              schema: []
              storefront_api_query: ''
              template: '{{#each images}}<a href=''{{image_url}}''><img src={{image_source}} style=''width:50%''/></a>{{/each}}'
              template_engine: handlebars_v3
              uuid: f8459145-da8f-4d98-93e4-83aa47da61c6
          - channel_id: 1
            date_created: '2020-12-21T20:26:18.557Z'
            date_modified: '2020-12-21T20:26:18.557Z'
            description: ''
            name: Simple List
            storefront_api_query_params: {}
            uuid: 7a842254-96ad-475f-9fe5-a59695e9685f
            version_uuid: c23dd66b-fa3f-451d-88ef-9f4082c6051e
            widget_configuration:
              _:
                id: 7a842254-96ad-475f-9fe5-a59695e9685f
              list_items:
                - color: blue
                  text: The color is blue
                - color: green
                  text: The color is green
                - color: red
                  text: The color is red
            widget_template:
              channel_id: 1
              client_rerender: false
              current_version_uuid: c23dd66b-fa3f-451d-88ef-9f4082c6051e
              date_created: '2020-12-21T19:36:59.384Z'
              date_modified: '2020-12-21T19:36:59.384Z'
              icon_name: default
              kind: custom
              name: Simple List
              schema: []
              storefront_api_query: ''
              template: '<ul>{{#each list_items}}<li style=''color:{{color}};''>{{text}}</li>{{/each}}</ul>'
              template_engine: handlebars_v3
              uuid: 42b42cbb-e2d8-4f2a-97ea-06755032115a
        meta:
          pagination:
            count: 2
            current_page: 1
            per_page: 50
            total: 2
            total_pages: 1
  Widget_Resp:
    description: ''
    schema:
      type: object
      properties:
        data:
          $ref: '#/definitions/widget_Full'
        meta:
          type: object
    examples:
      application/json:
        data:
          channel_id: 1
          date_created: '2020-12-21T19:54:16.406Z'
          date_modified: '2020-12-21T19:54:16.406Z'
          description: ''
          name: Header Images
          storefront_api_query_params: {}
          uuid: 1f05183e-dfa4-4583-af28-250b47e177b2
          version_uuid: c863f77b-e5b4-4462-a9ed-2aff9005140e
          widget_configuration:
            _:
              id: 1f05183e-dfa4-4583-af28-250b47e177b2
            images:
              - image_source: 'https://cdn11.bigcommerce.com/s-n0i50vy/images/stencil/1280x1280/products/109/361/kinfolkessentialissue_1024x1024__22507.1456436715.jpg?c=2&imbypass=on'
              - image_source: 'https://cdn11.bigcommerce.com/s-n0i50vy/images/stencil/500x659/products/85/282/livingwithplants_grande__26452.1456436666.jpg?c=2&imbypass=on'
              - image_source: 'https://cdn11.bigcommerce.com/s-n0i50vy/images/stencil/1280x1280/products/109/361/kinfolkessentialissue_1024x1024__22507.1456436715.jpg?c=2&imbypass=on'
          widget_template:
            channel_id: 1
            client_rerender: false
            current_version_uuid: c863f77b-e5b4-4462-a9ed-2aff9005140e
            date_created: '2020-12-21T19:49:29.110Z'
            date_modified: '2020-12-21T19:49:29.110Z'
            icon_name: default
            kind: custom
            name: Header Images
            schema: []
            storefront_api_query: ''
            template: '{{#each images}}<a href=''{{image_url}}''><img src={{image_source}} style=''width:50%''/></a>{{/each}}'
            template_engine: handlebars_v3
            uuid: f8459145-da8f-4d98-93e4-83aa47da61c6
        meta: {}
  Error422_Resp:
    description: |
      This is the result of missing required fields, or of invalid data. See the response for more details.
    schema:
      $ref: '#/definitions/error_Base'
  Error404_Resp:
    description: The resource was not found.
    schema:
      $ref: '#/definitions/error_Base'
x-stoplight:
  docs:
    includeDownloadLink: true
    showModels: false
