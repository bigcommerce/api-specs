openapi: 3.0.1
info:
  version: 3.0.0
  title: Settings V3
  termsOfService: 'http://www.bigcommerce.com/terms'
  description: |-
    Manage settings and configuration for BigCommerce hosted stores and headless storefronts.

    ## Authentication

    Authenticate requests by including an [OAuth](https://developer.bigcommerce.com/api-docs/getting-started/authentication) `access_token` in the request header.

    ```http
    GET /stores/{{STORE_HASH}}/v3/settings/storefront/status
    host: api.bigcommerce.com
    Accept: application/json
    X-Auth-Token: {{ACCESS_TOKEN}}
    ```

    ### OAuth Scopes
    |  **UI Name** | **Permission** | **Parameter** |
    | --- | --- | --- |
    |  Information & Settings | modify | `store_v2_information` |
    |  Information & Settings | read-only | `store_v2_information_read_only` |
  contact:
    name: BigCommerce
    url: 'https://www.bigcommerce.com'
    email: support@bigcommerce.com
tags:
  - name: Storefront Category
  - name: Storefront Robotstxt
  - name: Storefront Search
  - name: Storefront Security
  - name: Storefront SEO
  - name: Storefront Status
paths:
  /settings/storefront/status:
    get:
      summary: Get Status
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/StorefrontStatus'
                  meta:
                    type: object
                type: object
              examples:
                example-1:
                  value:
                    data:
                      down_for_maintenance_message: string
                      prelaunch_message: string
                      prelaunch_password: string
                    meta: {}
        '422':
          description: The request is missing 1 or more required fields. See the response for more details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      parameters:
        - $ref: '#/components/parameters/ChannelIdParam'
      description: Get storefront status.
      tags:
        - Storefront Status
    put:
      summary: Update Status
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StorefrontStatus'
            examples:
              example-1:
                value:
                  down_for_maintenance_message: string
                  prelaunch_message: string
                  prelaunch_password: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/StorefrontStatus'
                  meta:
                    type: object
              examples:
                example-1:
                  value:
                    data:
                      down_for_maintenance_message: string
                      prelaunch_message: string
                      prelaunch_password: string
                    meta: {}
      parameters:
        - $ref: '#/components/parameters/ChannelIdParam'
      tags:
        - Storefront Status
      description: Update storefront status.
    delete:
      summary: Delete Status
      operationId: delete-settings-storefront-status
      responses:
        '200':
          description: ''
      parameters:
        - $ref: '#/components/parameters/RequiredChannelIdParamForDelete'
        - $ref: '#/components/parameters/KeysToDelete'
      tags:
        - Storefront Status
      description: Delete storefront status.
  /settings/storefront/seo:
    get:
      summary: Get SEO Settings
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/SEOSettings'
                  meta:
                    type: object
              examples:
                example-1:
                  value:
                    data:
                      page_title: string
                      meta_description: string
                      www_redirect: www
                    meta: {}
        '422':
          description: Provided settings could not be applied for some reason - detailed errors in the response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      parameters:
        - $ref: '#/components/parameters/ChannelIdParam'
      description: Get storefront SEO settings.
      tags:
        - Storefront SEO
    put:
      summary: Update SEO Settings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SEOSettings'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/SEOSettings'
                  meta:
                    type: object
      parameters:
        - $ref: '#/components/parameters/ChannelIdParam'
      tags:
        - Storefront SEO
      description: Update storefront SEO settings.
    delete:
      summary: Delete  SEO Settings
      tags:
        - Storefront SEO
      operationId: delete-settings-seo
      responses:
        '200':
          description: OK
      parameters:
        - $ref: '#/components/parameters/RequiredChannelIdParamForDelete'
        - $ref: '#/components/parameters/KeysToDelete'
      description: Delete storefront SEO settings.
  /settings/storefront/robotstxt:
    get:
      summary: Get Robots.txt Settings
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/RobotsTxtSettings'
                  meta:
                    type: object
              examples:
                example-1:
                  value:
                    data:
                      robots_txt_ssl: string
                    meta: {}
        '422':
          description: Provided settings could not be applied for some reason - detailed errors in the response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      parameters:
        - $ref: '#/components/parameters/ChannelIdParam'
      description: Get storefront robots.txt.
      tags:
        - Storefront Robotstxt
    put:
      summary: Update Robots.txt Settings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RobotsTxtSettings'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/RobotsTxtSettings'
                  meta:
                    type: object
      parameters:
        - $ref: '#/components/parameters/ChannelIdParam'
      tags:
        - Storefront Robotstxt
      description: Update storefront robots.txt.
    delete:
      summary: Delete Robots.txt Settings
      tags:
        - Storefront Robotstxt
      operationId: delete-settings-robotstxt
      responses:
        '200':
          description: OK
      parameters:
        - $ref: '#/components/parameters/RequiredChannelIdParamForDelete'
        - $ref: '#/components/parameters/KeysToDelete'
      description: Delete storefront robots.txt.
  /settings/storefront/category:
    get:
      summary: Get Category Settings
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/StorefrontCategorySettings'
                  meta:
                    type: object
              examples:
                example-1:
                  value:
                    data:
                      listing_mode: null
                      default_product_sort: bestselling
                      category_tree_depth: 0
                    meta: {}
        '422':
          description: Provided settings could not be applied for some reason - detailed errors in the response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      parameters:
        - $ref: '#/components/parameters/ChannelIdParam'
      description: Get storefront category settings.
      tags:
        - Storefront Category
    put:
      summary: Update Category Settings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StorefrontCategorySettings'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/StorefrontCategorySettings'
                  meta:
                    type: object
      parameters:
        - $ref: '#/components/parameters/ChannelIdParam'
      tags:
        - Storefront Category
      description: Update storefront category settings.
    delete:
      summary: Delete  Category
      tags:
        - Storefront Category
      operationId: delete-settings-storefrontcategory
      responses:
        '200':
          description: OK
      parameters:
        - $ref: '#/components/parameters/RequiredChannelIdParamForDelete'
        - $ref: '#/components/parameters/KeysToDelete'
      description: Delete storefront category settings.
  /settings/storefront/search:
    get:
      summary: Get Search Settings
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/StorefrontSearchSettings'
                  meta:
                    type: object
              examples:
                example-1:
                  value:
                    data:
                      default_product_sort: bestselling
                    meta: {}
        '422':
          description: Provided settings could not be applied for some reason - detailed errors in the response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      parameters:
        - $ref: '#/components/parameters/ChannelIdParam'
      operationId: ''
      description: Get storefront search settings.
      tags:
        - Storefront Search
    put:
      summary: Update Search Settings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StorefrontSearchSettings'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/StorefrontSearchSettings'
                  meta:
                    type: object
      parameters:
        - $ref: '#/components/parameters/ChannelIdParam'
      tags:
        - Storefront Search
      description: Update storefront search settings.
    delete:
      summary: Delete Search Settings
      tags:
        - Storefront Search
      operationId: delete-settings-storefrontsearch
      responses:
        '200':
          description: OK
      parameters:
        - $ref: '#/components/parameters/RequiredChannelIdParamForDelete'
        - $ref: '#/components/parameters/KeysToDelete'
      description: Delete storefront search settings.
  /settings/search/filters:
    get:
      summary: Get Enabled Filters
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/ConfiguredFilters'
                  meta:
                    type: object
              examples:
                example-1:
                  value:
                    data:
                      - collapsed_by_default: false
                        display_name: Size
                        display_product_count: true
                        id: U123=
                        is_enabled: true
                        items_to_show: 10
                        sort_by: alpha
                        type: product
                      - collapsed_by_default: false
                        display_name: Brand
                        display_product_count: true
                        id: Y123=
                        is_enabled: true
                        items_to_show: 12
                        sort_by: alpha
                        type: brand
                      - collapsed_by_default: false
                        display_name: Color
                        display_product_count: true
                        id: Q123=
                        is_enabled: true
                        items_to_show: 10
                        sort_by: alpha
                        type: product
                      - collapsed_by_default: true
                        display_name: Ships for Free
                        display_product_count: false
                        id: Y456=
                        is_enabled: true
                        show_free_shipping_filter: true
                        show_in_stock_filter: true
                        show_is_featured_filter: true
                        type: other
                    meta: {}
      operationId: getEnabled
      description: 'Returns a list of enabled default [Product Filtering](https://support.bigcommerce.com/s/article/Product-Filtering-Settings) filters. These filters will be used if a store does not have contextual overrides.'
      tags:
        - Search Filters
    put:
      summary: Update Enabled Filters
      operationId: updateEnabled
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/ConfiguredFilters'
                  meta:
                    type: object
              examples:
                example-1:
                  value:
                    data:
                      - collapsed_by_default: false
                        display_name: Size
                        display_product_count: true
                        id: U123==
                        is_enabled: true
                        items_to_show: 12
                        sort_by: alpha
                        type: product
                      - collapsed_by_default: false
                        display_name: Brand
                        display_product_count: true
                        id: Y123=
                        is_enabled: true
                        items_to_show: 10
                        sort_by: alpha
                        type: brand
                      - collapsed_by_default: false
                        display_name: Color
                        display_product_count: true
                        id: Q123=
                        is_enabled: true
                        items_to_show: 10
                        sort_by: alpha
                        type: product
                      - collapsed_by_default: true
                        display_name: Ships for Free
                        display_product_count: true
                        id: Y456=
                        is_enabled: true
                        show_free_shipping_filter: true
                        show_in_stock_filter: true
                        show_is_featured_filter: true
                        type: other
                    meta: {}
      description: 'Updates enabled default [Product Filtering](https://support.bigcommerce.com/s/article/Product-Filtering-Settings) filters.'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfiguredFilters'
            examples:
              example-1:
                value:
                  - collapsed_by_default: false
                    display_name: Size
                    display_product_count: true
                    id: U123=
                    is_enabled: true
                    items_to_show: 12
                    sort_by: alpha
                    type: product
                  - collapsed_by_default: false
                    display_name: Brand
                    display_product_count: true
                    id: Y123=
                    is_enabled: true
                    items_to_show: 10
                    sort_by: alpha
                    type: brand
                  - collapsed_by_default: false
                    display_name: Color
                    display_product_count: true
                    id: Q123=
                    is_enabled: true
                    items_to_show: 10
                    sort_by: alpha
                    type: product
                  - collapsed_by_default: true
                    display_name: Ships for Free
                    display_product_count: true
                    id: Y456=
                    is_enabled: true
                    show_free_shipping_filter: true
                    show_in_stock_filter: true
                    show_is_featured_filter: true
                    type: other
      tags:
        - Search Filters
  /settings/search/filters/available:
    get:
      summary: Get Available Filters
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/AvailableFilter'
                  meta:
                    type: object
              examples:
                example-1:
                  value:
                    data:
                      - id: Y2F0Zooo123=
                        name: Category
                        product_count: 7
                        type: category
                      - id: YnJh123=
                        name: Brand
                        product_count: 8
                        type: brand
                      - id: cmF0a123
                        name: Rating
                        product_count: 1
                        type: rating
                      - id: cHJp123=
                        name: Price
                        price_range_max: 300.99
                        price_range_min: 6.75
                        type: price
                      - id: U2l123==
                        name: Size
                        product_count: 3
                        type: product
                      - id: Q29s123=
                        name: Color
                        product_count: 2
                        type: product
                      - id: Ym9123==
                        name: Other
                        type: other
                    meta: {}
      operationId: getAvailable
      description: 'Returns a list of filters available to power [Product Filtering](https://support.bigcommerce.com/s/article/Product-Filtering-Settings).'
      parameters:
        - schema:
            type: integer
          in: query
          name: channel_id
          description: Narrows the list of available filters based on channel ID. Only products currently assigned to the given Channel will be considered.
        - schema:
            type: integer
          in: query
          name: category_id
          description: Narrows the list of available filters based on category ID. Only products within the provided Category will be considered.
      tags:
        - Search Filters
  /settings/search/filters/contexts:
    get:
      summary: Get Contextual Filters
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/ConfiguredFiltersOverride'
                  meta:
                    $ref: '#/components/schemas/MetaPaginationObject'
      operationId: getContexts
      parameters:
        - schema:
            type: integer
          in: query
          name: channel_id
          description: Only return contextual overrides related to a particular Channel.
        - schema:
            type: integer
          in: query
          name: category_id
          description: Only return contextual overrides related to a particular Category.
      description: |-
        Returns a list of contextual filters enabled for a particular channel or category. 

        **Usage Notes**

        Contextual filters allow you to configure the enabled filters per channel or category, so that shoppers can filter by the most relevant criteria.

        The order of the returned filters will match the sort order of the filters on the storefront.
      tags:
        - Search Filters
    put:
      summary: Upsert Contextual Filters
      operationId: upsertContexts
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/ConfiguredFiltersOverride'
                  meta:
                    type: object
      description: |-
        Upserts contextual filters for a particular channel or category.

        **Usage Notes**

        Contextual filters allow you to configure the enabled filters per channel or category, so that shoppers can filter by the most relevant criteria.

        You can change the order of the filters on the live site by changing the order of the filters you send.
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ConfiguredFiltersOverride'
      tags:
        - Search Filters
      parameters: []
    delete:
      summary: Delete Contextual Filters
      operationId: deleteContexts
      responses:
        '200':
          description: OK
      description: Deletes contextual filters enabled in a particular context.
      parameters:
        - schema:
            type: integer
          in: query
          name: channel_id
          description: Delete contextual overrides related to this channel ID
        - schema:
            type: integer
          in: query
          name: category_id
          description: Delete contextual overrides related to this category ID
      tags:
        - Search Filters
components:
  schemas:
    AnalyticsProvider:
      type: object
      properties:
        id:
          type: integer
          description: Web Analytics Provider ID.
        name:
          type: string
          description: Web Analytics Provider title.
        code:
          type: string
          description: Web Analytics Provider code.
        enabled:
          type: boolean
          description: Flag indicates if Web Analytics Provider is enabled or not.
      example:
        - id: 1
          name: Google Analytics
          code: GA-1234567890
          enabled: true
    AnalyticsProviders:
      type: array
      example:
        - id: 1
          name: Google Analytics
          code: GA-1234567890
          enabled: true
        - id: 2
          name: Visual Website Optimizer
          code: ''
          enabled: true
        - id: 3
          name: Facebook Pixel
          code: FP-1234567890
          enabled: false
      items:
        $ref: '#/components/schemas/AnalyticsProvider'
    RobotsTxtSettings:
      type: object
      properties:
        robots_txt_ssl:
          type: string
    SEOSettings:
      type: object
      properties:
        page_title:
          type: string
        meta_description:
          type: string
        www_redirect:
          type: string
          enum:
            - www
            - no-www
            - none
    StorefrontCategorySettings:
      type: object
      properties:
        listing_mode:
          $ref: ''
        default_product_sort:
          $ref: '#/components/schemas/ProductSortEnumValues'
        category_tree_depth:
          type: integer
    StorefrontSearchSettings:
      type: object
      properties:
        default_product_sort:
          $ref: '#/components/schemas/ProductSortEnumValues'
    StoreProfile:
      description: 'The basic profile settings for a store, used to give the shopper information about the business from which they are purchasing.'
      type: object
      properties:
        store_phone:
          type: string
        store_name:
          type: string
        store_address:
          type: string
    StorefrontStatus:
      title: ''
      type: object
      properties:
        down_for_maintenance_message:
          type: string
        prelaunch_message:
          type: string
        prelaunch_password:
          type: string
    ProductSortEnumValues:
      type: string
      title: ProductSortEnumValues
      default: bestselling
      enum:
        - featured
        - bestselling
        - newest
        - atoz
        - ztoa
        - highestprice
        - lowestprice
        - bestreviewed
      description: The available sorts for PLP pages
    StorefrontSecuritySettings:
      title: StorefrontSecuritySettings
      type: object
      properties:
        sitewide_https_enabled:
          type: boolean
        csp_header:
          type: string
        hsts:
          type: object
          properties:
            enabled:
              type: boolean
            max_age_months:
              $ref: '#/components/schemas/HSTSMaxAgeEnumValues'
            includeSubDomains:
              type: boolean
    HSTSMaxAgeEnumValues:
      type: integer
      title: HSTSMaxAgeEnumValues
      enum:
        - 0
        - 3
        - 6
        - 12
      minimum: 0
      maximum: 12
      multipleOf: 3
    MetaPaginationObject:
      type: object
      properties:
        pagination:
          type: object
          properties:
            total:
              type: integer
              example: 246
              minimum: 0
            count:
              type: integer
              example: 5
              minimum: 0
            per_page:
              type: integer
              example: 5
              minimum: 0
            current_page:
              type: integer
              example: 1
              minimum: 1
            total_pages:
              type: integer
              example: 50
              minimum: 0
            links:
              type: object
              properties:
                next:
                  type: string
                  example: '?limit=5&page=2'
                current:
                  type: string
                  example: '?limit=5&page=1'
    AvailableFilter:
      title: AvailableFilter
      type: object
      properties:
        id:
          type: integer
        type:
          type: string
          enum:
            - price
            - category
            - brand
            - rating
            - other
            - product
        name:
          type: string
    EnabledFilter:
      title: EnabledFilter
      oneOf:
        - $ref: '#/components/schemas/EnabledProductFilter'
        - $ref: '#/components/schemas/EnabledPriceFilter'
        - $ref: '#/components/schemas/EnabledCategoryFilter'
        - $ref: '#/components/schemas/EnabledBrandFilter'
        - $ref: '#/components/schemas/EnabledRatingFilter'
        - $ref: '#/components/schemas/EnabledMiscFilter'
    EnabledProductFilter:
      title: EnabledProductFilter
      type: object
      properties:
        id:
          type: integer
        display_name:
          type: string
        type:
          type: string
          enum:
            - product
        display_product_count:
          type: boolean
        collapsed_by_default:
          type: boolean
        items_to_show:
          type: integer
          enum:
            - 5
            - 10
            - 15
        sort_by:
          type: string
          enum:
            - alpha
            - option_values
            - item_count
      description: A filter that uses product options and custom field data.
    EnabledPriceFilter:
      title: EnabledPriceFilter
      type: object
      properties:
        id:
          type: integer
        display_name:
          type: string
        type:
          type: string
          enum:
            - price
        collapsed_by_default:
          type: boolean
      description: 'A filter based on the product''s price, shown as a price range on the storefront.'
    EnabledCategoryFilter:
      title: EnabledCategoryFilter
      type: object
      description: A storefront filter for product category
      properties:
        id:
          type: integer
        display_name:
          type: string
        type:
          type: string
          enum:
            - category
        items_to_show:
          type: integer
          enum:
            - 5
            - 10
            - 15
        collapsed_by_default:
          type: boolean
        display_product_count:
          type: boolean
    EnabledRatingFilter:
      title: EnabledRatingFilter
      type: object
      properties:
        id:
          type: integer
        display_name:
          type: string
        type:
          type: string
          enum:
            - rating
        collapsed_by_default:
          type: boolean
      description: A filter based on product review ratings.
    EnabledBrandFilter:
      title: EnabledBrandFilter
      type: object
      description: A storefront filter for product brand
      properties:
        id:
          type: integer
        display_name:
          type: string
        type:
          type: string
          enum:
            - brand
        sort_by:
          type: string
          enum:
            - alpha
            - item_count
        items_to_show:
          type: integer
          enum:
            - 5
            - 10
            - 15
        collapsed_by_default:
          type: boolean
        display_product_count:
          type: boolean
    EnabledFilters:
      title: EnabledFilters
      type: array
      items:
        $ref: '#/components/schemas/EnabledFilter'
    EnabledFiltersOverride:
      title: EnabledFiltersOverride
      type: object
      properties:
        scope:
          $ref: '#/components/schemas/SearchFilterOverrideScopeIdentifier'
        data:
          $ref: '#/components/schemas/EnabledFilters'
      description: 'A new set of enabled Product Filtering filters which should display in a particular context, such as on a particular Channel, or while viewing a particular Category. Array order indicates the display order on the storefront.'
    SearchFilterOverrideScopeIdentifier:
      title: ScopeIdentifier
      type: object
      properties:
        channel_id:
          type: integer
        category_id:
          type: integer
    EnabledTransactionalEmails:
      title: ''
      type: object
      properties:
        abandoned_cart_email:
          type: boolean
        account_details_changed_email:
          type: boolean
        combined_order_status_email:
          type: boolean
        create_account_email:
          type: boolean
        create_guest_account_email:
          type: boolean
        gift_certificate_email:
          type: boolean
        invoice_email:
          type: boolean
        order_message_notification_email:
          type: boolean
        return_confirmation_email:
          type: boolean
        return_statuschange_email:
          type: boolean
        product_review_email:
          type: boolean
    Error:
      type: object
      description: A standard error object.
      properties:
        code:
          type: string
        message:
          type: string
      required:
        - code
      x-tags:
        - Common
    ErrorResponse400:
      type: object
      properties:
        schema:
          $ref: '#/components/schemas/Error'
    ErrorResponse404:
      type: object
      properties:
        schema:
          $ref: '#/components/schemas/Error'
    ErrorResponse409:
      type: object
      properties:
        schema:
          $ref: '#/components/schemas/Error'
    ErrorResponse422:
      type: object
      properties:
        schema:
          $ref: '#/components/schemas/Error'
    ErrorResponse:
      allOf:
        - $ref: '#/components/schemas/BaseError'
        - type: object
          properties:
            errors:
              $ref: '#/components/schemas/DetailedErrors'
    BaseError:
      type: object
      description: |
        Error payload for the BigCommerce API.
      properties:
        status:
          description: |
            The HTTP status code.
          type: integer
        title:
          description: |
            The error title describing the particular error.
          type: string
        type:
          type: string
        instance:
          type: string
    DetailedErrors:
      type: object
      additionalProperties:
        type: string
    EnabledMiscFilter:
      title: EnabledMiscFilter
      type: object
      properties:
        id:
          type: integer
        display_name:
          type: string
        type:
          type: string
          enum:
            - other
        show_free_shipping_filter:
          type: boolean
        show_is_featured_filter:
          type: boolean
        show_in_stock_filter:
          type: boolean
        show_product_count:
          type: boolean
        collapsed_by_default:
          type: boolean
      description: Miscellaneous Filters which appear as a group.
    AvailablePriceFilter:
      title: AvailablePriceFilter
      type: object
      properties:
        id:
          type: string
        type:
          type: string
          enum:
            - price
        name:
          type: string
        price_range_min:
          type: number
        price_range_max:
          type: number
      description: ''
    AvailableOtherFilter:
      title: AvailableOtherFilter
      type: object
      properties:
        id:
          type: string
        type:
          type: string
          enum:
            - other
        name:
          type: string
    SearchFilterOverrideContextIdentifier:
      title: ContextIdentifier
      type: object
      properties:
        channel_id:
          type: integer
        category_id:
          type: integer
    LogoSettings:
      type: object
      properties:
        logo_image_url:
          type: string
        logo_text:
          type: string
        type:
          type: string
          enum:
            - image
            - text
        favicon_url:
          type: string
    ContentSortEnumValues:
      type: string
      title: ContentSortEnumValues
      default: relevance
      enum:
        - relevance
        - atoz
        - ztoa
    ConfiguredFilter:
      title: ConfiguredFilter
      oneOf:
        - $ref: '#/components/schemas/EnabledProductFilter'
        - $ref: '#/components/schemas/EnabledPriceFilter'
        - $ref: '#/components/schemas/EnabledCategoryFilter'
        - $ref: '#/components/schemas/EnabledBrandFilter'
        - $ref: '#/components/schemas/EnabledRatingFilter'
        - $ref: '#/components/schemas/EnabledMiscFilter'
    ConfiguredFilters:
      title: ConfiguredFilters
      type: array
      items:
        $ref: '#/components/schemas/ConfiguredFilter'
    ConfiguredFiltersOverride:
      title: ConfiguredFiltersOverride
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ConfiguredFilters'
        context:
          $ref: '#/components/schemas/SearchFilterOverrideContextIdentifier'
      description: 'A new set of enabled Product Filtering filters which should display in a particular context, such as on a particular Channel, or while viewing a particular Category. Array order indicates the display order on the storefront.'
  securitySchemes:
    X-Auth-Token:
      name: X-Auth-Token
      type: apiKey
      in: header
      description: |-
        Authenticate requests by including an [OAuth](https://developer.bigcommerce.com/api-docs/getting-started/authentication) `access_token` in the request header.

        ```http
        GET /stores/{{STORE_HASH}}/v3/settings/storefront/status
        host: api.bigcommerce.com
        Accept: application/json
        X-Auth-Token: {{ACCESS_TOKEN}}
        ```

        ### OAuth Scopes
        |  **UI Name** | **Permission** | **Parameter** |
        | --- | --- | --- |
        |  Information & Settings | modify | `store_v2_information` |
        |  Information & Settings | read-only | `store_v2_information_read_only` |
  parameters:
    ChannelIdParam:
      in: query
      name: channel_id
      schema:
        type: integer
      description: 'Channel ID to use for channel-specific setting. If omitted, you will interact with the global setting only.'
    RequiredChannelIdParamForDelete:
      in: query
      name: channel_id
      schema:
        type: integer
      description: 'Required Channel ID. This delete operation will delete overridden settings for this channel, thus restoring them to the global defaults.'
      required: true
    KeysToDelete:
      in: query
      name: keys
      schema:
        type: array
        items:
          type: string
      required: true
      description: Array of strings (CSV) representing which configuration keys should be cleared (un-overridden) for the Channel.
servers:
  - url: 'https://api.bigcommerce.com/stores/{$$.env.store_hash}/v3'
    description: Production API Gateway
    variables:
      store_hash:
        default: abc123
        description: Store hash used to identify the store.
security:
  - X-Auth-Token: []
