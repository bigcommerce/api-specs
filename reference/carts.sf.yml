openapi: 3.0.1
info:
  version: Storefront
  title: Storefront Carts
  description: Manage cart operations and data via front-end JavaScript on BigCommerce stencil powered storefronts.
tags:
  - name: Cart
  - name: Cart Items
paths:
  /carts:
    get:
      tags:
        - Cart
      summary: Get a Cart
      description: |-
        Returns a *Cart*.

        <div class="HubBlock--callout">
        <div class="CalloutBlock--info">
        <div class="HubBlock-content">

        > ### Note
        > The Send a Test Request feature is not currently supported for this endpoint.

        </div>
        </div>
        </div>
      operationId: getACart
      parameters:
        - $ref: '#/components/parameters/include'
      responses:
        '200':
          $ref: '#/components/responses/getCarts'
    post:
      tags:
        - Cart
      summary: Create a Cart
      description: |-
        Creates a *Cart*.

        <div class="HubBlock--callout">
        <div class="CalloutBlock--info">
        <div class="HubBlock-content">

        > ### Note
        > The Send a Test Request feature is not currently supported for this endpoint.

        </div>
        </div>
        </div>
      operationId: createACart
      parameters:
        - $ref: '#/components/parameters/include'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LineItemsRequest'
            examples:
              Text Modifier Option Value:
                $ref: '#/components/examples/addCartLineItemWithTextModifierOptionValue'
        required: true
      responses:
        '200':
           $ref: '#/components/responses/postCarts'
      x-codegen-request-body-name: cartData
  /carts/{cartId}:
    delete:
      tags:
        - Cart
      summary: Delete a Cart
      description: |-
        Deletes a *Cart*. Once a *Cart* has been deleted it can not be recovered.

        <div class="HubBlock--callout">
        <div class="CalloutBlock--info">
        <div class="HubBlock-content">

        > ### Note
        > The Send a Test Request feature is not currently supported for this endpoint.

        </div>
        </div>
        </div>
      operationId: deleteACart
      parameters:
        - name: cartId
          in: path
          description: This cart's unique ID.
          required: true
          schema:
            type: string
            format: UUID
      responses:
        '204':
          description: ''
          content: {}
  /carts/{cartId}/items:
    post:
      tags:
        - Cart Items
      summary: Add Cart Line Items
      description: |-
        Adds a line items to the *Cart*.

        **Required Fields**
        * line_items object
        * gift_certificates object â€“ Only if adding a gift certificate to for shopper purchase

        <div class="HubBlock--callout">
        <div class="CalloutBlock--info">
        <div class="HubBlock-content">

        > ### Note
        > The Send a Test Request feature is not currently supported for this endpoint.

        </div>
        </div>
        </div>
      operationId: addCartLineItem
      parameters:
        - name: cartId
          in: path
          description: This cart's unique ID.
          required: true
          schema:
            type: string
            format: UUID
        - name: include
          in: query
          description: |-
            To return product options add one of the following include:

            `lineItems.physicalItems.options`: The Cart returns an abbreviated result. Use this to return physical items product options. Can also be used in a /POST to have the extended Cart object return.

            `lineItems.digitalItems.options`:  The Cart returns an abbreviated result. Use this to return digital items product options.  Can also be used in a /POST to have the extended Cart object return.

            `lineItems.digitalItems.options,lineItems.physicalItems.options`:  The Cart returns an abbreviated result. Use this to return digital and physical options. Can also be used in a /POST to have the extended Cart object return.
          schema:
            type: string
            default: 'lineItems.digitalItems.options,lineItems.physicalItems.options'
            enum:
              - lineItems.physicalItems.options
              - lineItems.digitalItems.options
              - 'lineItems.digitalItems.options,lineItems.physicalItems.options'
      responses:
        '200':
           $ref: '#/components/responses/postCartsItems'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/requestCart'
        description: ''
  /carts/{cartId}/items/{itemId}:
    put:
      tags:
        - Cart Items
      summary: Update Cart Line Item
      description: |-
        Updates a *Cart* line item. Updates an existing, single line item in the cart.

        Currently only updating the item quantity is supported.

        If a variant needs to be changed or updated, the product will need to be removed and re-added to the cart with the correct variants using the [Add Cart Line Items](/api-reference/cart-checkout/storefront-cart-api/cart-items/addcartlineitem) endpoint.

        <div class="HubBlock--callout">
        <div class="CalloutBlock--info">
        <div class="HubBlock-content">

        > ### Note
        > The Send a Test Request feature is not currently supported for this endpoint.

        </div>
        </div>
        </div>
      operationId: updateCartLineItem
      parameters:
        - name: cartId
          in: path
          description: This cart's unique ID.
          required: true
          schema:
            type: string
            format: UUID
        - name: itemId
          in: path
          description: This item's ID.
          required: true
          schema:
            type: string
            format: number
        - name: include
          in: query
          description: |-
            To return product options add one of the following include:

            `lineItems.physicalItems.options`: The Cart returns an abbreviated result. Use this to return physical items product options. Can also be used in a /POST to have the extended Cart object return.

            `lineItems.digitalItems.options`:  The Cart returns an abbreviated result. Use this to return digital items product options.  Can also be used in a /POST to have the extended Cart object return.

            `lineItems.digitalItems.options,lineItems.physicalItems.options`:  The Cart returns an abbreviated result. Use this to return digital and physical options. Can also be used in a /POST to have the extended Cart object return.
          schema:
            type: string
            default: 'lineItems.digitalItems.options,lineItems.physicalItems.options'
            enum:
              - lineItems.physicalItems.options
              - lineItems.digitalItems.options
              - 'lineItems.digitalItems.options,lineItems.physicalItems.options'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/requestCart'
        required: true
      responses:
        '200':
           $ref: '#/components/responses/putCartsItems'
      x-codegen-request-body-name: lineItem
    delete:
      tags:
        - Cart Items
      summary: Delete Cart Line Item
      description: |-
        Deletes a *Cart* line item.

        Removing the last `line_item` in the *Cart* deletes the *Cart*.

        <div class="HubBlock--callout">
        <div class="CalloutBlock--info">
        <div class="HubBlock-content">

        > ### Note
        > The Send a Test Request feature is not currently supported for this endpoint.

        </div>
        </div>
        </div>
      operationId: deleteCartLineItem
      parameters:
        - name: cartId
          in: path
          description: This cart's unique ID.
          required: true
          schema:
            type: string
            format: UUID
        - name: itemId
          in: path
          description: The ID of the item to delete.
          required: true
          schema:
            type: string
            format: number
        - name: include
          in: query
          description: |-
            To return product options add one of the following include:

            `lineItems.physicalItems.options`: The Cart returns an abbreviated result. Use this to return physical items product options. Can also be used in a /POST to have the extended Cart object return.

            `lineItems.digitalItems.options`:  The Cart returns an abbreviated result. Use this to return digital items product options.  Can also be used in a /POST to have the extended Cart object return.

            `lineItems.digitalItems.options,lineItems.physicalItems.options`:  The Cart returns an abbreviated result. Use this to return digital and physical options. Can also be used in a /POST to have the extended Cart object return.
          schema:
            type: string
            default: 'lineItems.digitalItems.options,lineItems.physicalItems.options'
            enum:
              - lineItems.physicalItems.options
              - lineItems.digitalItems.options
              - 'lineItems.digitalItems.options,lineItems.physicalItems.options'
      responses:
        '200':
           $ref: '#/components/responses/getCarts'
components:
  schemas:
    responseCartCoupons:
      title: Response Cart Coupons
      type: array
      items:
        required:
          - code
        type: object
        properties:
          code:
            type: string
            description: The coupon code.
          couponType:
            type: integer
            description: |-
              |Type `int`|Type Name|
              |-|-|
              |`0`|`per_item_discount`|
              |`1`|`percentage_discount`|
              |`2`|`per_total_discount`|
              |`3`|`shipping_discount`|
              |`4`|`free_shipping`|
              |`5`|`promotion`|
          discountedAmount:
            type: number
            description: The discounted amount applied within a given context.
            format: float
          id:
            type: string
            description: The coupon ID.
    responseCartDiscounts:
      title: responseCartDiscounts
      type: array
      items:
        type: object
        properties:
          discountedAmount:
            type: number
            description: The discounted amount applied within a given context.
            format: float
          id:
            type: number
            description: ID of the applied discount.
    responseCart:
      description: Cart object used in storefront cart responses.
      title: Cart Read
      type: object
      properties:
        id:
          type: string
          description: 'Cart ID, provided after creating a cart with a POST.'
          format: UUID
        customerId:
          type: integer
          description: ID of the customer to which the cart belongs.
        email:
          type: string
          description: The cart's email. This is the same email that is used in the billing address
        currency:
          $ref: '#/components/schemas/responseCartCurrency'
        isTaxIncluded:
          type: boolean
          description: Whether this item is taxable.
        baseAmount:
          type: number
          description: 'Cost of cart''s contents, before applying discounts.'
        discountAmount:
          type: number
          description: Discounted amount.
          format: float
        cartAmount:
          type: number
          description: 'Sum of line-items amounts, minus cart-level discounts and coupons. This amount includes taxes (where applicable).'
        coupons:
            $ref: '#/components/schemas/responseCartCoupons'
        discounts:
          type: array
          description: Array of `AppliedDiscount` objects applied to this cart.
          items:
            $ref: '#/components/schemas/responseCartDiscounts'
        lineItems:
          type: array
          description: Array of `LineItem` objects.
          items:
            $ref: '#/components/schemas/responseCartLineItems'
        createdTime:
          type: string
          description: Time when the cart was created.
          format: ISO-8601
        updatedTime:
          type: string
          description: Time when the cart was last updated.
          format: ISO-8601
        locale:
          type: string
          description: Locale of the cart.
    requestCart:
      title: Request Cart
      description: Cart object used for Create Cart and Add Cart Items requests.
      type: object
      properties:
        giftCertificate:
          $ref: '#/components/schemas/requestCartGiftCertificate'
        lineItem:
          type: array
          items:
            $ref: '#/components/schemas/requestCartPostLineItem'
    responseCartLineItemsPhysicalItemGiftWrapping:
      title: Gift Wrapping
      type: object
      properties:
        amount:
          type: number
          description: Gift-wrapping price per product.
          format: float
        message:
          type: string
        name:
          type: string
          description: Name of the gift-wrapping option.
    requestLineItemGiftCertificate:
      title: Line Item Gift Certificate Request Data
      required:
        - amount
        - name
        - quantity
        - recipient
        - sender
        - theme
      type: object
      properties:
        amount:
          maximum: 1000
          minimum: 1
          type: number
          description: Gift-certificate amount.
        message:
          type: string
          description: 'Message shown to recipient, as provided by sender.'
        name:
          type: string
          description: Name assigned to this gift-certificate line item.
        quantity:
          minimum: 1
          type: integer
          description: Quantity of this item.
        recipient:
          $ref: '#/components/schemas/requestLineItemGiftCertificateRecipient'
        sender:
          $ref: '#/components/schemas/requestLineItemGiftCertificateSender'
        theme:
          type: string
          description: 'Currently supports `Birthday`, `Boy`, `Celebration`, `Christmas`, `General`, and `Girl`.'
    LineItemsRequest:
      title: Line Items Request
      oneOf:
        - properties:
            lineItems:
              type: array
              items:
                $ref: '#/components/schemas/lineItemsRequestLineItemsItems'
            locale:
              type: string
          required:
            - lineItems
        - properties:
            giftCertificates:
              type: array
              items:
                $ref: '#/components/schemas/requestLineItemGiftCertificate'
            locale:
              type: string
          required:
            - giftCertificates
        - properties:
            lineItems:
              type: array
              items:
                $ref: '#/components/schemas/lineItemsRequestLineItemsItems'
            giftCertificates:
              $ref: '#/components/schemas/requestLineItemGiftCertificate'
            locale:
              type: string
      type: object
    responseCartCurrency:
      title: Currency
      type: object
      properties:
        code:
          type: string
          description: 'ISO-4217 currency code. (See: http://en.wikipedia.org/wiki/ISO_4217.)'
          format: ISO-4217
      description: This will always be the same between cart and checkout.
      x-go-gen-location: models
    responseCartLineItems:
      title: Line Item
      required:
        - digitalItems
        - giftCertificates
        - physicalItems
      type: object
      properties:
        customItems:
          type: array
          items:
            $ref: '#/components/schemas/responseCartLineItemsCustomItems'
        digitalItems:
          type: array
          description: Array of `ItemDigital` objects.
          items:
            $ref: '#/components/schemas/responseCartLineItemsDigitalItems'
        giftCertificates:
          type: array
          description: Array of `ItemGiftCertificate` objects.
          items:
            $ref: '#/components/schemas/responseCartLineItemsGiftCertificates'
        physicalItems:
          type: array
          description: Array of `ItemPhysical` objects.
          items:
            $ref: '#/components/schemas/responseCartLineItemsItemsPhysicalItemsItems'
    responseCartLineItemsCustomItems:
      title: Item Custom
      type: object
      properties:
        extendedListPrice:
          type: integer
          readOnly: true
        id:
          type: string
          description: Id of the custom item
          readOnly: true
          example: f1f3a531-fbcf-439b-bac1-40d5ae5c2bff
        listPrice:
          type: integer
          description: Price of the item. With or without tax depending on your stores set up.
          readOnly: true
          example: 10
        name:
          type: string
          description: Item name
          readOnly: true
          example: Custom Item Name
        quantity:
          type: integer
          readOnly: true
          example: 1
        sku:
          type: string
          description: Custom item sku
          readOnly: true
          example: SM-456
      description: |-
        **Read Only**

        This will return in the Cart Response if the Cart was created using the [Server to Server Cart API](/api-reference/cart-checkout/server-server-cart-api). A custom item can only be added to a cart using the Server to Server API.
    responseCartLineItemsDigitalItems:
      title: Item Digital
      allOf:
        - $ref: '#/components/schemas/responseCartLineItemsDigitalItemsAllOf0'
    responseCartLineItemsDigitalItemsAllOf0:
      title: Base Item
      required:
        - quantity
      type: object
      properties:
        options:
          type: array
          description: The list of selected options for this product.
          items:
            $ref: '#/components/schemas/responseCartLineItemsDigitalItemsAllOf0OptionsItems'
        brand:
          type: string
          description: The products brand
        couponAmount:
          type: number
          description: The total value of all coupons applied to this item.
        discountAmount:
          type: number
          description: The total value of all discounts applied to this item (excluding coupon).
          format: float
        discounts:
          type: array
          description: 'List of discounts applied to this item, as an array of AppliedDiscount objects.'
          items:
            $ref: '#/components/schemas/responseCartLineItemsDigitalItemsAllOf0DiscountsItems'
        extendedListPrice:
          type: number
          description: Item's list price multiplied by the quantity.
        extendedSalePrice:
          type: number
          description: Item's sale price multiplied by the quantity.
        id:
          type: string
          description: The line-item ID.
          example: '4'
        imageUrl:
          type: string
          description: 'URL of an image of this item, accessible on the internet.'
          format: uri
        isTaxable:
          type: boolean
          description: Whether the item is taxable.
        listPrice:
          type: number
          description: 'Item''s list price, as quoted by the manufacturer/distributor.'
        name:
          type: string
          description: The item's product name.
        parentId:
          type: string
          description: 'The product is part of a bundle such as a product pick list, then the parentId or the main product id will populate.'
          example: '6'
        productId:
          type: number
          description: ID of the product.
        quantity:
          type: number
          description: Quantity of this item.
        salePrice:
          type: number
          description: Item's price after all discounts are applied. (The final price before tax calculation.)
        sku:
          type: string
          description: SKU of the variant.
        url:
          type: string
          description: The product URL.
          format: uri
        variantId:
          type: number
          description: ID of the variant.
          example: 7
    responseCartLineItemsDigitalItemsAllOf0DiscountsItems:
      title: Applied Discount
      type: object
      properties:
        discountedAmount:
          type: number
          description: The discounted amount applied within a given context.
          format: float
        id:
          type: number
          description: ID of the applied discount.
    responseCartLineItemsDigitalItemsAllOf0OptionsItems:
      title: Product Option
      type: object
      properties:
        name:
          type: string
          description: 'The product option name. For example, Color or Size'
        nameId:
          type: number
          description: The product option identifier.
        value:
          type: string
          description: 'The product option value. For example, Red or Medium'
        valueId:
          type: number
          description: The product option value identifier.
    responseCartLineItemsGiftCertificates:
      title: Item Gift Certificate
      required:
        - amount
        - recipient
        - sender
        - theme
      type: object
      properties:
        amount:
          type: number
          description: 'Value must be between 1.00 and 1,000.00 in the store''s default currency.'
        id:
          type: string
          description: ID of this gift certificate.
        isTaxable:
          type: boolean
          description: Whether or not the gift certificate is taxable.
        message:
          type: string
          description: Message that will be sent to the gift certificate's recipient. Limited to 200 characters.
        name:
          type: string
          description: GiftCertificate-provided name that will appear in the control panel.
        recipient:
          $ref: '#/components/schemas/responseCartLineItemsGiftCertificatesRecipient'
        sender:
          $ref: '#/components/schemas/responseCartLineItemsGiftCertificatesSender'
        theme:
          type: string
          description: 'Currently supports `Birthday`, `Boy`, `Celebration`, `Christmas`, `General`, and `Girl`.'
    responseCartLineItemsGiftCertificatesRecipient:
      title: Contact Entity
      type: object
      properties:
        email:
          type: string
          description: Contact's email address.
          format: email
        name:
          type: string
          description: Contact's name.
    responseCartLineItemsGiftCertificatesSender:
      title: Contact Entity
      type: object
      properties:
        email:
          type: string
          description: Contact's email address.
          format: email
        name:
          type: string
          description: Contact's name.
    responseCartLineItemsItemsPhysicalItemsItems:
      title: Item Physical
      allOf:
        - $ref: '#/components/schemas/responseCartBaseItem'
        - $ref: '#/components/schemas/responseCartLineItemsItemsPhysicalItemsItemsAllOf1'
    responseCartBaseItem:
      title: Base Item
      required:
        - quantity
      type: object
      properties:
        options:
          type: array
          description: The list of selected options for this product.
          items:
            $ref: '#/components/schemas/responseCartLineItemsItemsPhysicalItemsItemsAllOf0OptionsItems'
        brand:
          type: string
          description: The products brand
        couponAmount:
          type: number
          description: The total value of all coupons applied to this item.
        discountAmount:
          type: number
          description: The total value of all discounts applied to this item (excluding coupon).
          format: float
        discounts:
            $ref: '#/components/schemas/responseCartDiscounts'
        extendedListPrice:
          type: number
          description: Item's list price multiplied by the quantity.
        extendedSalePrice:
          type: number
          description: Item's sale price multiplied by the quantity.
        id:
          type: string
          description: The line-item ID.
          example: '4'
        imageUrl:
          type: string
          description: 'URL of an image of this item, accessible on the internet.'
          format: uri
        isTaxable:
          type: boolean
          description: Whether the item is taxable.
        listPrice:
          type: number
          description: The net item price before discounts and coupons. It is based on the product default price or sale price (if set) configured in BigCommerce Admin.
        name:
          type: string
          description: The item's product name.
        parentId:
          type: string
          description: 'The product is part of a bundle such as a product pick list, then the parentId or the main product id will populate.'
          example: '6'
        productId:
          type: number
          description: ID of the product.
        quantity:
          type: number
          description: Quantity of this item.
        salePrice:
          type: number
          description: Item's price after all discounts are applied. (The final price before tax calculation.)
        sku:
          type: string
          description: SKU of the variant.
        url:
          type: string
          description: The product URL.
          format: uri
        variantId:
          type: number
          description: ID of the variant.
          example: 7
    responseCartLineItemsItemsPhysicalItemsItemsAllOf0OptionsItems:
      title: Product Option
      type: object
      properties:
        name:
          type: string
          description: 'The product option name. For example, Color or Size'
        nameId:
          type: number
          description: The product option identifier.
        value:
          type: string
          description: 'The product option value. For example, Red or Medium'
        valueId:
          type: number
          description: The product option value identifier.
    responseCartLineItemsItemsPhysicalItemsItemsAllOf1:
      type: object
      properties:
        giftWrapping:
          $ref: '#/components/schemas/responseCartLineItemsPhysicalItemGiftWrapping'
        isShippingRequired:
          type: boolean
          description: Whether this item requires shipping to a physical address.
    requestCartGiftCertificate:
      title: Line Item Gift Certificate Request Data
      required:
        - amount
        - name
        - quantity
        - recipient
        - sender
        - theme
      type: object
      properties:
        amount:
          maximum: 1000
          minimum: 1
          type: number
          description: Gift-certificate amount.
        message:
          type: string
          description: 'Message shown to recipient, as provided by sender.'
        name:
          type: string
          description: Name assigned to this gift-certificate line item.
        quantity:
          minimum: 1
          type: integer
          description: Quantity of this item.
        recipient:
          $ref: '#/components/schemas/requestCartGiftCertificateRecipient'
        sender:
          $ref: '#/components/schemas/requestCartGiftCertificateSender'
        theme:
          type: string
          description: 'Currently supports `Birthday`, `Boy`, `Celebration`, `Christmas`, `General`, and `Girl`.'
    requestCartGiftCertificateRecipient:
      title: Contact Entity
      type: object
      properties:
        email:
          type: string
          description: Contact's email address.
          format: email
        name:
          type: string
          description: Contact's name.
    requestCartGiftCertificateSender:
      title: Contact Entity
      type: object
      properties:
        email:
          type: string
          description: Contact's email address.
          format: email
        name:
          type: string
          description: Contact's name.
    requestCartPostLineItem:
      title: Line Item Request Data
      type: object
      properties:
        options:
          type: array
          items:
            $ref: '#/components/schemas/requestCartLineItemsOptions'
        productId:
          type: number
          description: ID of the product.
        quantity:
          type: number
          description: Quantity of this item.
        variantId:
          type: number
          description: ID of the variant.
      required:
        - quantity
    requestCartLineItemsOptions:
      type: object
      properties:
        optionId:
          type: number
          description: ID of the option.
        optionValue:
          type: number
          description: Value of the option.
      description: Array of `OptionSelection` objects.
    requestLineItemGiftCertificateRecipient:
      title: Contact Entity
      type: object
      properties:
        email:
          type: string
          description: Contact's email address.
          format: email
        name:
          type: string
          description: Contact's name.
    requestLineItemGiftCertificateSender:
      title: Contact Entity
      type: object
      properties:
        email:
          type: string
          description: Contact's email address.
          format: email
        name:
          type: string
          description: Contact's name.
    lineItemsRequestLineItemsItems:
      title: Line Item Request Data
      required:
        - quantity
      type: object
      properties:
        productId:
          type: number
          description: ID of the product.
        quantity:
          type: number
          description: Quantity of this item.
        variantId:
          type: number
          description: ID of the variant.
  responses:
    postCarts:
      description: ''
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/responseCart'
          examples:
            Example:
              $ref: '#/components/examples/cartResponse'
    postCartsItems:
      description: ''
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/responseCart'
          examples:
            Example:
              $ref: '#/components/examples/cartResponse'
    putCartsItems:
      description: ''
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/responseCart'
          examples:
            Example:
              $ref: '#/components/examples/cartResponse'
    getCarts:
      description: ''
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/responseCart'
          examples:
            Example:
              $ref: '#/components/examples/getCartResponse'
    deleteCartsItems:
      description: ''
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/responseCart'
          examples:
            Example:
              $ref: '#/components/examples/cartResponse'
    deleteCarts:
      description: ''
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/responseCart'
          examples:
            Example:
              $ref: '#/components/examples/cartResponse'
  parameters:
    lineItems.options:
      name: include
      in: query
      description: |-
        To return product options add one of the following include:

        `lineItems.physicalItems.options`: The Cart returns an abbreviated result. Use this to return physical items product options. Can also be used in a /POST to have the extended Cart object return.

        `lineItems.digitalItems.options`:  The Cart returns an abbreviated result. Use this to return digital items product options.  Can also be used in a /POST to have the extended Cart object return.

        `lineItems.digitalItems.options,lineItems.physicalItems.options`:  The Cart returns an abbreviated result. Use this to return digital and physical options. Can also be used in a /POST to have the extended Cart object return.
      schema:
        type: string
        default: 'lineItems.digitalItems.options,lineItems.physicalItems.options'
        enum:
          - lineItems.physicalItems.options
          - lineItems.digitalItems.options
          - 'lineItems.digitalItems.options,lineItems.physicalItems.options'
    include:
      name: include
      in: query
      description: Include product options in specified line item types.
      schema:
        type: string
        enum:
          - lineItems.physicalItems.options
          - lineItems.digitalItems.options
          - 'lineItems.digitalItems.options,lineItems.physicalItems.options'
  examples:
    addCartLineItemWithTextModifierOptionValue:
      value:
        description: Example shared example
        title: Predifined Text Modifier
        type: object
        properties:
          lineItems:
            - quantity: 1
              productId: '12352'
              variantId: '11844'
              options:
                - optionId: '21294'
                  optionValue: Your Predifined Text Modifier Value
    cartResponse:
      value:
        description: Cart Response
        type: object
        properties:
          baseAmount: 0
          cartAmount: 0
          coupons:
            - code: string
              couponType: 0
              discountedAmount: 0
              id: string
          createdTime: string
          currency:
            code: string
          customer_id: 0
          discountAmount: 0
          discounts:
            - discountedAmount: 0
              id: 0
          email: string
          id: string
          isTaxIncluded: true
          lineItems:
            - customItems:
                - extendedListPrice: 0
                  id: f1f3a531-fbcf-439b-bac1-40d5ae5c2bff
                  listPrice: 10
                  name: Custom Item Name
                  quantity: 1
                  sku: SM-456
              digitalItems:
                - Options:
                    - name: string
                      nameId: 0
                      value: string
                      valueId: 0
                  brand: string
                  couponAmount: 0
                  discountAmount: 0
                  discounts:
                    - discountedAmount: 0
                      id: 0
                  extendedListPrice: 0
                  extendedSalePrice: 0
                  id: '4'
                  imageUrl: 'http://example.com'
                  isTaxable: true
                  listPrice: 0
                  name: string
                  parentId: '6'
                  productId: 0
                  quantity: 0
                  salePrice: 0
                  sku: string
                  url: 'http://example.com'
                  variantId: 7
              giftCertificates:
                - amount: 0
                  id: string
                  isTaxable: true
                  message: string
                  name: string
                  recipient:
                    email: user@example.com
                    name: string
                  sender:
                    email: user@example.com
                    name: string
                  theme: string
              physicalItems:
                - Options:
                    - name: string
                      nameId: 0
                      value: string
                      valueId: 0
                  brand: string
                  couponAmount: 0
                  discountAmount: 0
                  discounts:
                    - discountedAmount: 0
                      id: 0
                  extendedListPrice: 0
                  extendedSalePrice: 0
                  id: '4'
                  imageUrl: 'http://example.com'
                  isTaxable: true
                  listPrice: 0
                  name: string
                  parentId: '6'
                  productId: 0
                  quantity: 0
                  salePrice: 0
                  sku: string
                  url: 'http://example.com'
                  variantId: 7
                  giftWrapping:
                    amount: 0
                    message: string
                    name: string
                  isShippingRequired: true
          locale: string
          updatedTime: string
        required:
          - id
    getCartResponse:
      value:
        - id: string
          customerId: 0
          email: string
          currency:
            code: string
          isTaxIncluded: true
          baseAmount: 0
          discountAmount: 0
          cartAmount: 0
          coupons:
            - code: string
              couponType: 0
              discountedAmount: 0
              id: string
          discounts:
            - - discountedAmount: 0
                id: 0
          lineItems:
            - customItems:
                - extendedListPrice: 0
                  id: f1f3a531-fbcf-439b-bac1-40d5ae5c2bff
                  listPrice: 10
                  name: Custom Item Name
                  quantity: 1
                  sku: SM-456
              digitalItems:
                - options:
                    - name: string
                      nameId: 0
                      value: string
                      valueId: 0
                  brand: string
                  couponAmount: 0
                  discountAmount: 0
                  discounts:
                    - discountedAmount: 0
                      id: 0
                  extendedListPrice: 0
                  extendedSalePrice: 0
                  id: '4'
                  imageUrl: 'http://example.com'
                  isTaxable: true
                  listPrice: 0
                  name: string
                  parentId: '6'
                  productId: 0
                  quantity: 0
                  salePrice: 0
                  sku: string
                  url: 'http://example.com'
                  variantId: 7
              giftCertificates:
                - amount: 0
                  id: string
                  isTaxable: true
                  message: string
                  name: string
                  recipient:
                    email: user@example.com
                    name: string
                  sender:
                    email: user@example.com
                    name: string
                  theme: string
              physicalItems:
                - options:
                    - name: string
                      nameId: 0
                      value: string
                      valueId: 0
                  brand: string
                  couponAmount: 0
                  discountAmount: 0
                  discounts:
                    - discountedAmount: 0
                      id: 0
                  extendedListPrice: 0
                  extendedSalePrice: 0
                  id: '4'
                  imageUrl: 'http://example.com'
                  isTaxable: true
                  listPrice: 0
                  name: string
                  parentId: '6'
                  productId: 0
                  quantity: 0
                  salePrice: 0
                  sku: string
                  url: 'http://example.com'
                  variantId: 7
                  giftWrapping:
                    amount: 0
                    message: string
                    name: string
                  isShippingRequired: true
          createdTime: string
          updatedTime: string
          locale: string
x-stoplight:
  docs:
    includeDownloadLink: true
    showModels: false