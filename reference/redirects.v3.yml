swagger: '2.0'
info:
  title: Redirects
  version: ''
  description: |-
    Manage 301 redirects for one or more storefronts powered by a single BigCommerce back-end.

    **On This Page**
    - [Authentication](#authentication)
    - [OAuth Scopes](#oauth-scopes)
    ---


    ## Authentication

    Requests can be authenticated by sending an `access_token` via `X-Auth-Token` HTTP header:

    ```http
    GET /stores/{$$.env.store_hash}/v3/catalog/summary
    host: api.bigcommerce.com
    Accept: application/json
    X-Auth-Token: {access_token}
    ```

    |Header|Parameter|Description|
    |-|-|-|
    |`X-Auth-Token`|`access_token `|Obtained by creating an API account or installing an app in a BigCommerce control panel.|

    For more information on Authenticating BigCommerce APIs, see: [Authentication](https://developer.bigcommerce.com/api-docs/getting-started/authentication).
securityDefinitions:
  X-Auth-Token:
    type: apiKey
    in: header
    name: X-Auth-Token
    description: |-
      ### OAuth Scopes
      |  **UI Name** | **Permission** | **Parameter** |
      | --- | --- | --- |
      |  Carts | modify | `store_cart` |
      |  Carts | read-only | `store_cart_read_only` |

      ### Headers

      |Header|Parameter|Description|
      |-|-|-|
      |`X-Auth-Token`|`access_token `|Obtained by creating an API account or installing an app in a BigCommerce control panel.|

      ### Example

      ```http
      GET /stores/{$$.env.store_hash}/v3/catalog/summary
      host: api.bigcommerce.com
      Content-Type: application/json
      X-Auth-Token: {access_token}
      ```

      * For more information on Authenticating BigCommerce APIs, see: [Authentication](https://developer.bigcommerce.com/api-docs/getting-started/authentication).
security:
  - X-Auth-Client: []
  - X-Auth-Token: []
  - OAuthScopes: []
paths:
  /storefront/redirects:
    get:
      summary: Get Redirects
      tags:
        - Redirects
      responses:
        '200':
          description: ''
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/301RedirectRead'
              meta:
                $ref: '#/definitions/MetaPaginationObject'
      parameters:
        - type: integer
          in: query
          name: site_id
          description: Site ID to return only redirects for a given Site
        - type: array
          in: query
          name: 'id:in'
          description: 'Explicitly fetch Redirects by IDs, provided as CSV string'
          items:
            type: string
        - type: integer
          in: query
          name: limit
          description: Number of results to return per page
        - type: integer
          in: query
          name: page
          description: 'Which page number to return, based on the page size. Used to paginate large collections.'
        - type: string
          enum:
            - from_path
            - type
            - site_id
          in: query
          name: sort
          description: Sorts a collection by a particular field.
        - type: string
          enum:
            - asc
            - desc
          in: query
          name: direction
          description: Sort direction.
        - type: string
          enum:
            - to_url
          in: query
          name: include
          description: 'Request extra fields that aren''t in the standard response. On this endpoint, only "to_url" is supported.'
        - type: string
          in: query
          name: keyword
          description: 'Search keyword to look for redirects matching this keyword. Will only search from the beginning of a URL path, so "blue" will match "/blue" and "/blue-shirt" but not "/royal-blue-shirt"'
      description: Get a collection of the store's 301 redirects across all sites
      operationId: GetRedirects
    put:
      summary: Upsert Redirects
      tags:
        - Redirects
      description: Upsert new redirect data across all storefronts.
      responses:
        '201':
          $ref: ''
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/301RedirectRead'
              meta:
                $ref: '#/definitions/MetaPaginationObject'
          examples:
            example-1:
              data:
                - from_path: /old-url
                  site_id: 0
                  to:
                    type: product
                    entity_id: 0
                    url: /new-url
                  id: 0
                  to_url: 'https://store-domain.com/new-url'
              meta:
                pagination:
                  total: 246
                  count: 5
                  per_page: 5
                  current_page: 1
                  total_pages: 50
                  links:
                    next: '?limit=5&page=2'
                    current: '?limit=5&page=1'
      operationId: UpsertRedirects
      parameters:
        - in: body
          name: body
          schema:
            type: array
            items:
              $ref: '#/definitions/301RedirectUpsert'
          x-examples:
            example-1:
              - from_path: /old-url
                site_id: 0
                to:
                  type: product
                  entity_id: 0
                  url: /new-url
    delete:
      summary: Delete Redirects
      tags:
        - Redirects
      responses:
        '204':
          description: No Content
      parameters:
        - in: query
          name: 'id:in'
          required: true
          description: List of Redirect IDs to delete explicitly
          type: array
          items:
            type: integer
        - in: query
          name: site_id
          description: Site ID provided to delete all redirects for a given Site
          type: integer
      description: Delete redirects
      operationId: DeleteRedirects
definitions:
  Error:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
  ErrorResponse400:
    type: object
    properties:
      schema:
        $ref: '#/definitions/Error'
  ErrorResponse404:
    type: object
    properties:
      schema:
        $ref: '#/definitions/Error'
  ErrorResponse409:
    type: object
    properties:
      schema:
        $ref: '#/definitions/Error'
  ErrorResponse422:
    type: object
    properties:
      schema:
        $ref: '#/definitions/Error'
  301RedirectUpsert:
    type: object
    description: 'Data necessary to create or update a redirect. If there''s a conflict on the from_path and site_id, the redirect will be overwritten with new data.'
    properties:
      from_path:
        type: string
        example: /old-url
      site_id:
        type: integer
      to:
        $ref: '#/definitions/RedirectTo'
    required:
      - from_path
      - site_id
  301RedirectRead:
    type: object
    description: 'Full detail of a Redirect, optionally including the full destination URL.'
    properties:
      from_path:
        type: string
        example: /old-url
      site_id:
        type: integer
      to:
        $ref: '#/definitions/RedirectTo'
      id:
        type: integer
      to_url:
        type: string
        format: uri
        description: Full destination URL for the redirect. Must be explicitly included via URL parameter.
        example: 'https://store-domain.com/new-url'
    required:
      - from_path
      - site_id
  MetaPaginationObject:
    type: object
    properties:
      pagination:
        type: object
        properties:
          total:
            type: integer
            example: 246
            minimum: 0
          count:
            type: integer
            example: 5
            minimum: 0
          per_page:
            type: integer
            example: 5
            minimum: 0
          current_page:
            type: integer
            example: 1
            minimum: 1
          total_pages:
            type: integer
            example: 50
            minimum: 0
          links:
            type: object
            properties:
              next:
                type: string
                example: '?limit=5&page=2'
              current:
                type: string
                example: '?limit=5&page=1'
  RedirectTo:
    title: RedirectTo
    type: object
    properties:
      type:
        type: string
        enum:
          - product
          - brand
          - category
          - page
          - post
          - url
      entity_id:
        type: integer
      url:
        type: string
        example: /new-url
        maxLength: 2048
  DetailedErrors:
    type: object
    additionalProperties:
      type: string
  BaseError:
    type: object
    description: |
      Error payload for the BigCommerce API.
    properties:
      status:
        description: |
          The HTTP status code.
        type: integer
      title:
        description: |
          The error title describing the particular error.
        type: string
      type:
        type: string
      instance:
        type: string
  ErrorResponse:
    allOf:
      - $ref: '#/definitions/BaseError'
      - type: object
        properties:
          errors:
            $ref: '#/definitions/DetailedErrors'
host: api.bigcommerce.com
basePath: '/stores/{$$.env.store_hash}/v3'
tags:
  - name: Redirects
schemes:
  - https
consumes:
  - application/json
produces:
  - application/json
x-stoplight:
  docs:
    includeDownloadLink: true
    showModels: false
